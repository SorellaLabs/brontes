warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  194
  233
  232
  282
  234
  got addresses for chunk

  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:169:14:
  called `Result::unwrap()` on an `Err` value: Decompression("malformed data")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (signal: 9, SIGKILL: kill)
  --- stdout
  162
  184
  223
  264
  520
  got addresses for chunk
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-classifier` (build script) generated 5 warnings
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (signal: 9, SIGKILL: kill)
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:28:7
   |
28 | sol! (Contract0x225fa034416c12ece27cd417df447449bc1e0caf, "./abis/Contract0x225fa034416c12ece27cd417df447449bc1e0caf.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:45:1
    |
45  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4024390747519868692.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x5326a41e17037cdab5737ef372b7c04ddec1ece6::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0x5326a41e17037cdab5737ef372b7c04ddec1ece6, "./abis/Contract0x5326a41e17037cdab5737ef372b7c04ddec1ece6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:311:1
    |
311 | sol! (Contract0x73308f6b34a529bb286b3e970662432bfe59c75a, "./abis/Contract0x73308f6b34a529bb286b3e970662432bfe59c75a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x73308f6b34a529bb286b3e970662432bfe59c75aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7689587162324767308.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:368:1
    |
368 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1185:55
     |
1185 | ...caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1185 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1185 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1185 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1788:75
     |
1788 | ...um, Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1788 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1788 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1788 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:45:1
    |
45  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:137:1
    |
137 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: single element tuples must have a trailing comma.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:141:7
    |
141 | sol! (Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac, "./abis/Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to parse ABI-generated tokens into a Solidity AST: single element tuples must have a trailing comma.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:145:7
    |
145 | sol! (Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e, "./abis/Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:43:1
    |
43  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x430589e576d0e1b830767574b176167db6086ebb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:157:1
    |
157 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:360:1
    |
360 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1265:55
     |
1265 | ...2ac(Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac::Contract0xc038b84d8a5db8aa503748d2e144b3578211e2acCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac` and 1 other; try using the variant's enum
     |
1265 |    Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1265 |    Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1265 |    Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac(Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac_Enum::Contract0xc038b84d8a5db8aa503748d2e144b3578211e2acCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1269:55
     |
1269 | ...e4e(Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e::Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4eCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e` and 1 other; try using the variant's enum
     |
1269 |    Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1269 |    Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1269 |    Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e(Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e_Enum::Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4eCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2761:75
     |
2761 | ...um, Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac::Contract0xc038b84d8a5db8aa503748d2e144b3578211e2acCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac` and 1 other; try using the variant's enum
     |
2761 | impl_decode_sol!(Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2761 | impl_decode_sol!(Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2761 | impl_decode_sol!(Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac_Enum, Contract0xc038b84d8a5db8aa503748d2e144b3578211e2ac_Enum::Contract0xc038b84d8a5db8aa503748d2e144b3578211e2acCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2797:75
     |
2797 | ...um, Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e::Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4eCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e` and 1 other; try using the variant's enum
     |
2797 | impl_decode_sol!(Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2797 | impl_decode_sol!(Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2797 | impl_decode_sol!(Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e_Enum, Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4e_Enum::Contract0x1e0447b19bb6ecfdae1e4ae1694b0c3659614e4eCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:54:1
   |
54 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:79:1
    |
79  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13670463958219685007.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:168:1
    |
168 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:197:1
    |
197 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4215949867948177928.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1232:55
     |
1232 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1232 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1232 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1232 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2050:75
     |
2050 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
2050 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2050 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2050 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:47:1
    |
47  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4854423738515383403.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:78:1
    |
78  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13370552311422440746.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:104:1
    |
104 | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14936077470595356157.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:153:1
    |
153 | sol! (Contract0xaefc6bd082e5bb4020987527286419a9ca124537, "./abis/Contract0xaefc6bd082e5bb4020987527286419a9ca124537.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:42:1
    |
42  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12963854589531406977.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:73:1
    |
73  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17995358414292472210.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:75:1
    |
75  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13703095759180663151.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:143:1
    |
143 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:175:1
    |
175 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8748952381766295361.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: single element tuples must have a trailing comma.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:151:7
    |
151 | sol! (Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49, "./abis/Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to parse ABI-generated tokens into a Solidity AST: single element tuples must have a trailing comma.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:154:7
    |
154 | sol! (Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f, "./abis/Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:52:1
    |
52  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18370324444842325814.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:75:1
    |
75  | sol! (Contract0x4c517d4e2c851ca76d7ec94b805269df0f2201de, "./abis/Contract0x4c517d4e2c851ca76d7ec94b805269df0f2201de.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x4c517d4e2c851ca76d7ec94b805269df0f2201deCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6842600377055751239.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:89:1
    |
89  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-626350352529614846.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x8c975af4164f29db6e4cee010bf9e8e142554298::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:167:1
    |
167 | sol! (Contract0x8c975af4164f29db6e4cee010bf9e8e142554298, "./abis/Contract0x8c975af4164f29db6e4cee010bf9e8e142554298.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:200:1
    |
200 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10897926502737037841.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xa40ec8a93293a3179d4b544239916c1b68cb47b6::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xa40ec8a93293a3179d4b544239916c1b68cb47b6, "./abis/Contract0xa40ec8a93293a3179d4b544239916c1b68cb47b6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1332:55
     |
1332 | ...a49(Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49::Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49` and 1 other; try using the variant's enum
     |
1332 |    Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1332 |    Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1332 |    Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49(Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49_Enum::Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1335:55
     |
1335 | ...a7f(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f` and 1 other; try using the variant's enum
     |
1335 |    Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1335 |    Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1335 |    Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2927:75
     |
2927 | ...um, Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49::Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49` and 1 other; try using the variant's enum
     |
2927 | impl_decode_sol!(Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2927 | impl_decode_sol!(Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2927 | impl_decode_sol!(Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49_Enum, Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49_Enum::Contract0xaee83ca85ad63dfa04993adcd76cb2b3589eca49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2954:75
     |
2954 | ...um, Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f` and 1 other; try using the variant's enum
     |
2954 | impl_decode_sol!(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2954 | impl_decode_sol!(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2954 | impl_decode_sol!(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum, Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 12 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:7
   |
26 | sol! (Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f, "./abis/Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:27:1
    |
27  | sol! (Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac, "./abis/Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612acCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17228164902660728378.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:51:1
    |
51  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5658131070341870281.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:84:1
    |
84  | sol! (Contract0xf266195e1b30b8f536834303c555bd6aaf063f04, "./abis/Contract0xf266195e1b30b8f536834303c555bd6aaf063f04.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf266195e1b30b8f536834303c555bd6aaf063f04Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5081546623641312292.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1045:55
     |
1045 | ...a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1045 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1045 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1045 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1586:75
     |
1586 | ...um, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1586 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1586 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1586 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
    |
40  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18315183327104978468.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:64:1
    |
64  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16896908025344348386.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:130:1
    |
130 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:267:1
    |
267 | sol! (Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28, "./abis/Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17097464312104058871.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:45:1
    |
45  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18128019172520166763.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:69:1
    |
69  | sol! (Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4, "./abis/Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1756655908254955981.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:154:1
    |
154 | sol! (Contract0x49309180b5c3e4b0547a679a445af4bb0027d9ae, "./abis/Contract0x49309180b5c3e4b0547a679a445af4bb0027d9ae.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  276
  251
  242
  255
  426
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:27:7
   |
27 | sol! (Contract0x00000000000001ad428e4906ae43d8f9852d0dd6, "./abis/Contract0x00000000000001ad428e4906ae43d8f9852d0dd6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:43:1
    |
43  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13078573926548555035.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:109:1
    |
109 | sol! (Contract0xcd451149ffa9d059030528917842bce14327dfd6, "./abis/Contract0xcd451149ffa9d059030528917842bce14327dfd6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xcd451149ffa9d059030528917842bce14327dfd6Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11951205558479825656.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:117:1
    |
117 | sol! (Contract0x49309180b5c3e4b0547a679a445af4bb0027d9ae, "./abis/Contract0x49309180b5c3e4b0547a679a445af4bb0027d9ae.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:869:55
    |
869 | ...dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
    |
869 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
869 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
869 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1359:75
     |
1359 | ...um, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1359 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1359 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1359 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:50:1
    |
50  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-777544090316239533.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:75:1
    |
75  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10606774287853258700.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:179:1
    |
179 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7576790992720790312.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x10d05e057cb1ee7eac0559aa7f09bf06f44fd718::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:244:1
    |
244 | sol! (Contract0x10d05e057cb1ee7eac0559aa7f09bf06f44fd718, "./abis/Contract0x10d05e057cb1ee7eac0559aa7f09bf06f44fd718.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:47:1
   |
47 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:144:1
    |
144 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:314:1
    |
314 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1021:55
     |
1021 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1021 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1021 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1021 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1715:75
     |
1715 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1715 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1715 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1715 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:58:1
   |
58 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:161:1
    |
161 | sol! (Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d, "./abis/Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:271:1
    |
271 | sol! (Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff, "./abis/Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x46e98ffe40e408ba6412beb670507e083c8b95ffCalls {Contract0x46e98ffe40e408ba6412beb670507e083c8b95ffCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:285:1
    |
285 | sol! (Contract0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac, "./abis/Contract0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1221:55
     |
1221 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1221 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1221 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1221 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2066:75
     |
2066 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
2066 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2066 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2066 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:86:1
   |
86 | sol! (Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895, "./abis/Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:64:1
    |
64  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3747334302848701269.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:177:1
    |
177 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2497567114857861154.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1072:55
     |
1072 | ...895(Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895::Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895` and 1 other; try using the variant's enum
     |
1072 |    Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1072 |    Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1072 |    Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895(Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895_Enum::Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2082:75
     |
2082 | ...um, Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895::Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895` and 1 other; try using the variant's enum
     |
2082 | impl_decode_sol!(Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2082 | impl_decode_sol!(Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2082 | impl_decode_sol!(Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895_Enum, Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895_Enum::Contract0x18c5f7536cb60d3b3fd14216142e8f7bba361895Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:49:1
   |
49 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0124]: field `out` is already declared
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:373:1
    |
373 | sol! (Contract0x9fec0005ee9a538a6474b6641aaa314ed9ff8da7, "./abis/Contract0x9fec0005ee9a538a6474b6641aaa314ed9ff8da7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | field already declared
    | `out` first declared here
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1200:55
     |
1200 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1200 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1200 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1200 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1969:75
     |
1969 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1969 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1969 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1969 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0124, E0433.
For more information about an error, try `rustc --explain E0124`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:54:1
   |
54 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:78:1
   |
78 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x00000624264253944a702b8b812ae7bbb46af371::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:153:1
    |
153 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:238:1
    |
238 | sol! (Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff, "./abis/Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x46e98ffe40e408ba6412beb670507e083c8b95ffCalls {Contract0x46e98ffe40e408ba6412beb670507e083c8b95ffCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1073:55
     |
1073 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1073 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1073 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1073 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1838:75
     |
1838 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1838 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1838 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1838 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:320:1
    |
320 | sol! (Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade, "./abis/Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:75:1
    |
75  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18961086475893012.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:179:1
    |
179 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3224510392680420438.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1375:55
     |
1375 | ...ade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
1375 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1375 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1375 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:4280:75
     |
4280 | ...um, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
4280 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
4280 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
4280 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
    |
26  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <RegistrationParams as SolTypeValue<RegistrationParams>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
            and 291 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
    |
26  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
    |
26  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <RegistrationParams as SolTypeValue<RegistrationParams>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
            and 291 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
    |
44  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3940468496047741472.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:97:1
    |
97  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3317941742416852232.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:143:1
    |
143 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:234:1
    |
234 | sol! (Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff, "./abis/Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x46e98ffe40e408ba6412beb670507e083c8b95ffCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1819552588854377277.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
    |
44  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:136:1
    |
136 | sol! (Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d, "./abis/Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:53:1
    |
53  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12032380494095316637.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:79:1
    |
79  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9236777926978559605.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:107:1
    |
107 | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4800369438722315195.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:160:1
    |
160 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:181:1
    |
181 | sol! (Contract0x6625147392d57b127c1d63bf872f3daab1aa9a34, "./abis/Contract0x6625147392d57b127c1d63bf872f3daab1aa9a34.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x6625147392d57b127c1d63bf872f3daab1aa9a34Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-943310892358340630.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:282:1
    |
282 | sol! (Contract0x378d05405c7b884beb387c8179681a9b814bdd05, "./abis/Contract0x378d05405c7b884beb387c8179681a9b814bdd05.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x378d05405c7b884beb387c8179681a9b814bdd05Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10613162866324073966.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
   |
46 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:100:1
    |
100 | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:151:1
    |
151 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1032:55
     |
1032 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1032 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1032 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1032 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1722:75
     |
1722 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1722 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1722 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1722 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:47:1
   |
47 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:66:1
    |
66  | sol! (Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f, "./abis/Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x891d882fdacd2cb8daea5289f6019676e797ee5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2875573452990713763.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:74:1
    |
74  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16424364696447956037.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:78:1
   |
78 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:145:1
    |
145 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:173:1
    |
173 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5665766059665802388.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1009:55
     |
1009 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1009 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1009 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1009 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1699:75
     |
1699 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1699 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1699 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1699 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price as SolTypeValue<Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price>>
              <DstInfos as SolTypeValue<DstInfos>>
            and 368 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price as SolTypeValue<Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price>>
              <DstInfos as SolTypeValue<DstInfos>>
            and 368 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:54:1
    |
54  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-823514171401136536.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:84:1
    |
84  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9978761798646033836.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:151:1
    |
151 | sol! (Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f, "./abis/Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:175:1
    |
175 | sol! (Contract0xc02cbcceeed8d10a4300adaf86fe55a5515e75b2, "./abis/Contract0xc02cbcceeed8d10a4300adaf86fe55a5515e75b2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc02cbcceeed8d10a4300adaf86fe55a5515e75b2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-794517065042536633.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:194:1
    |
194 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1427603933933772.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xee3e9e46e34a27dc755a63e2849c9913ee1a06e2::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:292:1
    |
292 | sol! (Contract0xee3e9e46e34a27dc755a63e2849c9913ee1a06e2, "./abis/Contract0xee3e9e46e34a27dc755a63e2849c9913ee1a06e2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:295:1
    |
295 | sol! (Contract0x0bf6b4e3ecb5e4152f7e25865fd01e5730dc88db, "./abis/Contract0x0bf6b4e3ecb5e4152f7e25865fd01e5730dc88db.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x0bf6b4e3ecb5e4152f7e25865fd01e5730dc88dbCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11700988630840229149.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:377:1
    |
377 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4973211714963112121.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 12 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:19:1
    |
19  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams>>
            and 277 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:19:1
    |
19  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:19:1
    |
19  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams>>
            and 277 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7143092628942485513.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:77:1
   |
77 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:195:1
    |
195 | sol! (Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a, "./abis/Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14722142778408743321.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:229:1
    |
229 | sol! (Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff, "./abis/Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x46e98ffe40e408ba6412beb670507e083c8b95ffCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4008368461125366379.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x217be88cbec6d0c4f95d8c34433f8ce9950433b1::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:262:1
    |
262 | sol! (Contract0x217be88cbec6d0c4f95d8c34433f8ce9950433b1, "./abis/Contract0x217be88cbec6d0c4f95d8c34433f8ce9950433b1.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:314:1
    |
314 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:36:1
   |
36 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:209:1
    |
209 | sol! (Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc, "./abis/Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:125:1
    |
125 | sol! (Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4, "./abis/Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4Calls {Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1073:55
     |
1073 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1073 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1073 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1073 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1246:55
     |
1246 | ...9cc(Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc::Contract0xc0bef2d373a1efade8b952f33c1370e486f209ccCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc` and 1 other; try using the variant's enum
     |
1246 |    Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1246 |    Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1246 |    Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc(Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc_Enum::Contract0xc0bef2d373a1efade8b952f33c1370e486f209ccCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1700:75
     |
1700 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1700 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1700 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1700 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3257:75
     |
3257 | ...um, Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc::Contract0xc0bef2d373a1efade8b952f33c1370e486f209ccCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc` and 1 other; try using the variant's enum
     |
3257 | impl_decode_sol!(Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3257 | impl_decode_sol!(Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3257 | impl_decode_sol!(Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc_Enum, Contract0xc0bef2d373a1efade8b952f33c1370e486f209cc_Enum::Contract0xc0bef2d373a1efade8b952f33c1370e486f209ccCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:31:1
   |
31 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:123:1
    |
123 | sol! (Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4, "./abis/Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12110447506513098883.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x733c820441e7d82125c1e30932d336250add9430::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:130:1
    |
130 | sol! (Contract0x733c820441e7d82125c1e30932d336250add9430, "./abis/Contract0x733c820441e7d82125c1e30932d336250add9430.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0xc60baa57523b05f6b3f6b3d520437a1ba965a1d0, "./abis/Contract0xc60baa57523b05f6b3f6b3d520437a1ba965a1d0.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc60baa57523b05f6b3f6b3d520437a1ba965a1d0Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8795801740493165637.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:210:1
    |
210 | sol! (Contract0x65adc06dd015b5033570b317765c81ec5e4b4757, "./abis/Contract0x65adc06dd015b5033570b317765c81ec5e4b4757.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x65adc06dd015b5033570b317765c81ec5e4b4757Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8061996304054678789.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:240:1
    |
240 | sol! (Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a, "./abis/Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6077129105799699225.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:279:1
    |
279 | sol! (Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360, "./abis/Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4324984826486663976.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:290:1
    |
290 | sol! (Contract0xb7015ed39d0efd955998fa7d28cbc8a71668c809, "./abis/Contract0xb7015ed39d0efd955998fa7d28cbc8a71668c809.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb7015ed39d0efd955998fa7d28cbc8a71668c809Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7559887393423945880.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:309:1
    |
309 | sol! (Contract0xda2b033a5f396c8537df2131846f5133908a9425, "./abis/Contract0xda2b033a5f396c8537df2131846f5133908a9425.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xda2b033a5f396c8537df2131846f5133908a9425Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5441310793979811268.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:341:1
    |
341 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1098:55
     |
1098 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1098 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1098 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1098 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1695:75
     |
1695 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1695 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1695 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1695 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 12 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3077669681827577545.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:79:1
    |
79  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17422898695996149948.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:91:1
    |
91  | sol! (Contract0x53525a62e55b6002792b993a2c27af70d12443e4, "./abis/Contract0x53525a62e55b6002792b993a2c27af70d12443e4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x53525a62e55b6002792b993a2c27af70d12443e4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16389351820953630830.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4, "./abis/Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17380206326501137809.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:152:1
    |
152 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:172:1
    |
172 | sol! (Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09, "./abis/Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10166605046035703237.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:188:1
    |
188 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12344961149682770294.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:254:1
    |
254 | sol! (Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a, "./abis/Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2556108630315420991.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:270:1
    |
270 | sol! (Contract0xadea044772cfd35d996aa5e0de12ed5937badd61, "./abis/Contract0xadea044772cfd35d996aa5e0de12ed5937badd61.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xadea044772cfd35d996aa5e0de12ed5937badd61Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9459750161727409187.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:282:1
    |
282 | sol! (Contract0x118e3040b899ec6aad6a696b3583ae03a927d3a0, "./abis/Contract0x118e3040b899ec6aad6a696b3583ae03a927d3a0.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x118e3040b899ec6aad6a696b3583ae03a927d3a0Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15300123984414451143.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:293:1
    |
293 | sol! (Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360, "./abis/Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14370050462051968537.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:303:1
    |
303 | sol! (Contract0xad1b9867befd148c9476b9dd1e7c749bfcefbb2e, "./abis/Contract0xad1b9867befd148c9476b9dd1e7c749bfcefbb2e.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xad1b9867befd148c9476b9dd1e7c749bfcefbb2eCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6505455789516348635.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:311:1
    |
311 | sol! (Contract0x9d8bb5496332cbeed59f1211f28db8b5eb214b6d, "./abis/Contract0x9d8bb5496332cbeed59f1211f28db8b5eb214b6d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x9d8bb5496332cbeed59f1211f28db8b5eb214b6dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9113063226166809492.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 13 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:79:1
    |
79  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12935663847146047008.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:102:1
    |
102 | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2023301390390540521.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x00000624264253944a702b8b812ae7bbb46af371::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:161:1
    |
161 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:197:1
    |
197 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8496579855933378135.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:357:1
    |
357 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:48:1
   |
48 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:235:7
    |
235 | sol! (Contract0xa8b62866020970943de4f0e6fc4acf3e31636346, "./abis/Contract0xa8b62866020970943de4f0e6fc4acf3e31636346.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:29:1
    |
29  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price as SolTypeValue<Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
            and 269 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:29:1
    |
29  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:29:1
    |
29  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price as SolTypeValue<Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
            and 269 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0xb71660484d900f2644398f1a1e2f9b976cc7811c, "./abis/Contract0xb71660484d900f2644398f1a1e2f9b976cc7811c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1097:55
     |
1097 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1097 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1097 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1097 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1284:55
     |
1284 | ...346(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346` and 1 other; try using the variant's enum
     |
1284 |    Contract0xa8b62866020970943de4f0e6fc4acf3e31636346(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1284 |    Contract0xa8b62866020970943de4f0e6fc4acf3e31636346(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1284 |    Contract0xa8b62866020970943de4f0e6fc4acf3e31636346(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1824:75
     |
1824 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1824 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1824 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1824 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3507:75
     |
3507 | ...um, Contract0xa8b62866020970943de4f0e6fc4acf3e31636346::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346` and 1 other; try using the variant's enum
     |
3507 | impl_decode_sol!(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3507 | impl_decode_sol!(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3507 | impl_decode_sol!(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum, Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:51:1
   |
51 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:31:1
    |
31  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ChainBatchHeader as SolTypeValue<ChainBatchHeader>>
              <ChainInclusionProof as SolTypeValue<ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price as SolTypeValue<Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price>>
              <KV as SolTypeValue<KV>>
            and 270 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:31:1
    |
31  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:31:1
    |
31  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ChainBatchHeader as SolTypeValue<ChainBatchHeader>>
              <ChainInclusionProof as SolTypeValue<ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price as SolTypeValue<Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price>>
              <KV as SolTypeValue<KV>>
            and 270 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:150:1
    |
150 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1037:55
     |
1037 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1037 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1037 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1037 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1767:75
     |
1767 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1767 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1767 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1767 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:60:1
    |
60  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-254178112061187742.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:335:1
    |
335 | sol! (Contract0x3a5a37bdfbf927092794beb62ea239c7b563c705, "./abis/Contract0x3a5a37bdfbf927092794beb62ea239c7b563c705.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x3a5a37bdfbf927092794beb62ea239c7b563c705Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2550681981244536125.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:411:1
    |
411 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:412:1
    |
412 | sol! (Contract0x368c1c8a30c6a26b0da0cd515f1d1f861eb47383, "./abis/Contract0x368c1c8a30c6a26b0da0cd515f1d1f861eb47383.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x368c1c8a30c6a26b0da0cd515f1d1f861eb47383Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7499270613211044322.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:63:1
    |
63  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16501079044892313016.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:93:1
    |
93  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10680377880182221603.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:123:1
    |
123 | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9775077146151734495.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:183:1
    |
183 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:214:1
    |
214 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-848351110211458075.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
    |
46  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6162332446559959234.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:85:1
    |
85  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7729668869015200635.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:165:1
    |
165 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:203:1
    |
203 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8597770659100700782.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
    |
46  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10294008907732243053.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:103:1
    |
103 | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3278148396248332778.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:157:1
    |
157 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:226:1
    |
226 | sol! (Contract0x65adc06dd015b5033570b317765c81ec5e4b4757, "./abis/Contract0x65adc06dd015b5033570b317765c81ec5e4b4757.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x65adc06dd015b5033570b317765c81ec5e4b4757Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16016439516135100129.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc1a2706ceb8c21967d5c930c00c8ed16480f7255::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xc1a2706ceb8c21967d5c930c00c8ed16480f7255, "./abis/Contract0xc1a2706ceb8c21967d5c930c00c8ed16480f7255.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
   |
32 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:132:1
    |
132 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x02b3f41cdc0744cad91630594144bbde89be0eb0::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:230:1
    |
230 | sol! (Contract0x02b3f41cdc0744cad91630594144bbde89be0eb0, "./abis/Contract0x02b3f41cdc0744cad91630594144bbde89be0eb0.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:961:55
    |
961 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
    |
961 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
961 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
961 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1520:75
     |
1520 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1520 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1520 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1520 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  200
  197
  231
  210
  298
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:54:1
    |
54  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10237048666976891811.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:83:1
    |
83  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9125660961586428012.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x10d6b05df2cf388f97c65ae1442b7736687a2603::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0x10d6b05df2cf388f97c65ae1442b7736687a2603, "./abis/Contract0x10d6b05df2cf388f97c65ae1442b7736687a2603.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:321:1
    |
321 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:43:1
    |
43  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5249894697563490868.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:97:1
    |
97  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15400818682070680453.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:144:1
    |
144 | sol! (Contract0x6511eba915fc1b94b2364289cca2b27ae5898d80, "./abis/Contract0x6511eba915fc1b94b2364289cca2b27ae5898d80.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6615278885516978401.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:73:1
    |
73  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16806758473274620709.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:130:1
    |
130 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:156:1
    |
156 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-335246522651493195.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:170:1
    |
170 | sol! (Contract0x61a35258107563f6b6f102ae25490901c8760b12, "./abis/Contract0x61a35258107563f6b6f102ae25490901c8760b12.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x61a35258107563f6b6f102ae25490901c8760b12Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11323681725760308479.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:190:1
    |
190 | sol! (Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a, "./abis/Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17243857097503197896.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac, "./abis/Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612acCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16531556886292969717.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:50:1
    |
50  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-410759641251289306.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:73:1
    |
73  | sol! (Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f, "./abis/Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x891d882fdacd2cb8daea5289f6019676e797ee5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2695008656261852982.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:86:1
    |
86  | sol! (Contract0x12adad3409dfa96fc9cbd1b1760749fa8c678738, "./abis/Contract0x12adad3409dfa96fc9cbd1b1760749fa8c678738.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x12adad3409dfa96fc9cbd1b1760749fa8c678738Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2173333725505642060.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:178:1
    |
178 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:231:1
    |
231 | sol! (Contract0x24179cd81c9e782a4096035f7ec97fb8b783e007, "./abis/Contract0x24179cd81c9e782a4096035f7ec97fb8b783e007.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x24179cd81c9e782a4096035f7ec97fb8b783e007Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5436381469981222173.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:252:1
    |
252 | sol! (Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23, "./abis/Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9651664720934680618.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:290:1
    |
290 | sol! (Contract0x05dc1889ce6dee16d5bd43517d5b1112ff086740, "./abis/Contract0x05dc1889ce6dee16d5bd43517d5b1112ff086740.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x05dc1889ce6dee16d5bd43517d5b1112ff086740Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3020774629522355868.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:349:1
    |
349 | sol! (Contract0xdf9eb223bafbe5c5271415c75aecd68c21fe3d7f, "./abis/Contract0xdf9eb223bafbe5c5271415c75aecd68c21fe3d7f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xdf9eb223bafbe5c5271415c75aecd68c21fe3d7fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1949176175362478285.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:42:1
   |
42 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:148:1
    |
148 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:221:1
    |
221 | sol! (Contract0x65adc06dd015b5033570b317765c81ec5e4b4757, "./abis/Contract0x65adc06dd015b5033570b317765c81ec5e4b4757.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x65adc06dd015b5033570b317765c81ec5e4b4757Calls {Contract0x65adc06dd015b5033570b317765c81ec5e4b4757Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1154:55
     |
1154 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1154 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1154 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1154 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1854:75
     |
1854 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1854 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1854 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1854 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionAborted` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionAborted` redefined here
    |
    = note: `AuctionAborted` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionClosed` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionClosed` redefined here
    |
    = note: `AuctionClosed` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `BidTooLow` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `BidTooLow` redefined here
    |
    = note: `BidTooLow` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:49:1
    |
49  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` has no field named `minBid`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` does not have this field
    |
    = note: all struct fields are already assigned
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `&Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Uint<256, 4>`, found `u128`
    |
    = note: expected struct `alloy_sol_types::private::Uint<256, 4>`
                 found type `u128`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u128`, found `Uint<256, 4>`
    |
    = note: expected type `u128`
             found struct `alloy_sol_types::private::Uint<256, 4>`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `u128: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:276:1
    |
276 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `u128`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ListingTerms as SolTypeValue<ListingTerms>>
              <Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::LoanTerms as SolTypeValue<Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::LoanTerms>>
              <Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::Offer as SolTypeValue<Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::Offer>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0xe6d48bf4ee912235398b96e16db6f310c21e82cb::TokenOwnership as SolTypeValue<Contract0xe6d48bf4ee912235398b96e16db6f310c21e82cb::TokenOwnership>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
            and 255 others
    = note: required for `u128` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0063, E0277, E0308, E0428, E0560, E0609.
For more information about an error, try `rustc --explain E0063`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 14 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  233
  206
  262
  229
  225
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionAborted` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionAborted` redefined here
    |
    = note: `AuctionAborted` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionClosed` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionClosed` redefined here
    |
    = note: `AuctionClosed` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `BidTooLow` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `BidTooLow` redefined here
    |
    = note: `BidTooLow` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:43:1
    |
43  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2967675309930728785.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:69:1
    |
69  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9159200612788125661.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:81:1
   |
81 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:138:1
    |
138 | sol! (Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f, "./abis/Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` has no field named `minBid`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` does not have this field
    |
    = note: all struct fields are already assigned
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `&Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Uint<256, 4>`, found `u128`
    |
    = note: expected struct `alloy_sol_types::private::Uint<256, 4>`
                 found type `u128`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u128`, found `Uint<256, 4>`
    |
    = note: expected type `u128`
             found struct `alloy_sol_types::private::Uint<256, 4>`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `u128: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:277:1
    |
277 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `u128`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <AssetConfigInput as SolTypeValue<AssetConfigInput>>
              <ExchangeRateSnapshot as SolTypeValue<ExchangeRateSnapshot>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0xe6d48bf4ee912235398b96e16db6f310c21e82cb::TokenOwnership as SolTypeValue<Contract0xe6d48bf4ee912235398b96e16db6f310c21e82cb::TokenOwnership>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
            and 310 others
    = note: required for `u128` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:349:1
    |
349 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0063, E0277, E0308, E0428, E0560, E0609.
For more information about an error, try `rustc --explain E0063`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 18 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:25:1
    |
25  | sol! (Contract0xd8c9d9071123a059c6e0a945cf0e0c82b508d816, "./abis/Contract0xd8c9d9071123a059c6e0a945cf0e0c82b508d816.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd8c9d9071123a059c6e0a945cf0e0c82b508d816Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16210897798801990195.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:43:1
    |
43  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9125097244486647183.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:64:1
    |
64  | sol! (Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449, "./abis/Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10772892211830809642.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:82:1
    |
82  | sol! (Contract0xb8493cd0e7135462502df048deefc9b650fa789f, "./abis/Contract0xb8493cd0e7135462502df048deefc9b650fa789f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb8493cd0e7135462502df048deefc9b650fa789fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16928597332080400267.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:94:1
    |
94  | sol! (Contract0xc6b46448d4bf1a2ce0ed841dacfc196532e09d6e, "./abis/Contract0xc6b46448d4bf1a2ce0ed841dacfc196532e09d6e.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc6b46448d4bf1a2ce0ed841dacfc196532e09d6eCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14720493565141034722.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:213:1
    |
213 | sol! (Contract0x31c8eacbffdd875c74b94b077895bd78cf1e64a3, "./abis/Contract0x31c8eacbffdd875c74b94b077895bd78cf1e64a3.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x31c8eacbffdd875c74b94b077895bd78cf1e64a3Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8606202087120939290.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:235:1
    |
235 | sol! (Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23, "./abis/Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16184561209761645228.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:278:1
    |
278 | sol! (Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6, "./abis/Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:35:1
   |
35 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:168:1
    |
168 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:62:1
    |
62  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0x8c975af4164f29db6e4cee010bf9e8e142554298, "./abis/Contract0x8c975af4164f29db6e4cee010bf9e8e142554298.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1006:55
     |
1006 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1006 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1006 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1006 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1139:55
     |
1139 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1139 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1139 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1139 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1603:75
     |
1603 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1603 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1603 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1603 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2800:75
     |
2800 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
2800 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2800 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2800 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:189:1
    |
189 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
    |
44  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10931459777453919324.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:79:1
    |
79  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4180485340327417840.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:145:1
    |
145 | sol! (Contract0xde4abedd8f2ad6b894c4c99da252ecdf6a3a41c1, "./abis/Contract0xde4abedd8f2ad6b894c4c99da252ecdf6a3a41c1.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:188:1
    |
188 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16365663307836378725.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1286:55
     |
1286 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1286 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1286 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1286 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3157:75
     |
3157 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
3157 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3157 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3157 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:37:1
   |
37 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:155:1
    |
155 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:268:1
    |
268 | sol! (Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade, "./abis/Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0124]: field `out` is already declared
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:280:1
    |
280 | sol! (Contract0x8000ee6f65a21741dc8086c68455da6529fc35bd, "./abis/Contract0x8000ee6f65a21741dc8086c68455da6529fc35bd.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | field already declared
    | `out` first declared here
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:966:55
    |
966 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
    |
966 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
966 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
966 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1084:55
     |
1084 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1084 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1084 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1084 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1197:55
     |
1197 | ...ade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
1197 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1197 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1197 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1565:75
     |
1565 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1565 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1565 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1565 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2627:75
     |
2627 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2627 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2627 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2627 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3644:75
     |
3644 | ...um, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
3644 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3644 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3644 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0124, E0433.
For more information about an error, try `rustc --explain E0124`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 10 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:163:1
    |
163 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:39:1
    |
39  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5087937616276778687.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:57:1
    |
57  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6717051427165996018.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1152:55
     |
1152 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1152 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1152 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1152 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2779:75
     |
2779 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2779 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2779 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2779 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:144:1
    |
144 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
    |
26  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactOutputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactOutputParams>>
            and 229 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
    |
26  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
    |
26  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactOutputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactOutputParams>>
            and 229 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:122:1
    |
122 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1019:55
     |
1019 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1019 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1019 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1019 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2456:75
     |
2456 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2456 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2456 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2456 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:152:1
    |
152 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1081:55
     |
1081 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1081 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1081 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1081 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2600:75
     |
2600 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2600 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2600 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2600 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more information about this error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:175:1
    |
175 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:1
    |
22  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
            and 304 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:1
    |
22  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:1
    |
22  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
            and 304 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
    |
44  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14400644122491795681.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:68:1
    |
68  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3386114086088898692.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1251:55
     |
1251 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1251 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1251 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1251 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3003:75
     |
3003 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
3003 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3003 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3003 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 10 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
   |
34 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:165:1
    |
165 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:71:1
   |
71 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xb8dec5e29047ce86ef21f5040f7c5dd4a2dd11fb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:105:1
    |
105 | sol! (Contract0xb8dec5e29047ce86ef21f5040f7c5dd4a2dd11fb, "./abis/Contract0xb8dec5e29047ce86ef21f5040f7c5dd4a2dd11fb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:138:1
    |
138 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1050:55
     |
1050 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1050 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1050 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1050 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1181:55
     |
1181 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1181 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1181 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1181 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1654:75
     |
1654 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1654 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1654 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1654 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2833:75
     |
2833 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
2833 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2833 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2833 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:151:1
    |
151 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:31:1
    |
31  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4520206218201608290.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:53:1
    |
53  | sol! (Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4, "./abis/Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9886739672012556747.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:66:1
   |
66 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x8c975af4164f29db6e4cee010bf9e8e142554298::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:115:1
    |
115 | sol! (Contract0x8c975af4164f29db6e4cee010bf9e8e142554298, "./abis/Contract0x8c975af4164f29db6e4cee010bf9e8e142554298.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:298:1
    |
298 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1083:55
     |
1083 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1083 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1083 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1083 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2595:75
     |
2595 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2595 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2595 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2595 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
   |
38 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:129:1
    |
129 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:21:1
    |
21  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveConfigurationMap as SolTypeValue<Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveConfigurationMap>>
              <Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveData as SolTypeValue<Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveData>>
              <Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::UserConfigurationMap as SolTypeValue<Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::UserConfigurationMap>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
            and 235 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:21:1
    |
21  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:21:1
    |
21  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveConfigurationMap as SolTypeValue<Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveConfigurationMap>>
              <Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveData as SolTypeValue<Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::ReserveData>>
              <Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::UserConfigurationMap as SolTypeValue<Contract0x1b94587eef7538b99c348781720af92cd71f7f4d::UserConfigurationMap>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
            and 235 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:228:1
    |
228 | sol! (Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6, "./abis/Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:242:1
    |
242 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:925:55
    |
925 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
    |
925 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
925 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
925 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1016:55
     |
1016 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1016 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1016 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1016 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1518:75
     |
1518 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1518 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1518 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1518 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2337:75
     |
2337 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2337 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2337 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2337 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 12 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:7
   |
22 | sol! (Contract0x00000000000001ad428e4906ae43d8f9852d0dd6, "./abis/Contract0x00000000000001ad428e4906ae43d8f9852d0dd6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:165:1
    |
165 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7631733760323898619.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xa03b38294fcd1747e59f4a505634c05b5ca17fa8::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:52:1
   |
52 | sol! (Contract0xa03b38294fcd1747e59f4a505634c05b5ca17fa8, "./abis/Contract0xa03b38294fcd1747e59f4a505634c05b5ca17fa8.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x00000624264253944a702b8b812ae7bbb46af371::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:126:1
    |
126 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:151:1
    |
151 | sol! (Contract0x85eee30c52b0b379b046fb0f85f4f3dc3009afec, "./abis/Contract0x85eee30c52b0b379b046fb0f85f4f3dc3009afec.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x85eee30c52b0b379b046fb0f85f4f3dc3009afecCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2157392048056477531.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:153:1
    |
153 | sol! (Contract0x60eb57d085c59932d5faa6c6026268a4386927d0, "./abis/Contract0x60eb57d085c59932d5faa6c6026268a4386927d0.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x60eb57d085c59932d5faa6c6026268a4386927d0Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9910427510182174445.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:957:55
    |
957 | ...dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
    |
957 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
957 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
957 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1100:55
     |
1100 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1100 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1100 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1100 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1438:75
     |
1438 | ...um, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1438 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1438 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1438 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2725:75
     |
2725 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2725 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2725 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2725 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  249
  218
  208
  205
  268
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:177:1
    |
177 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:19:1
    |
19  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
            and 232 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:19:1
    |
19  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:19:1
    |
19  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <OrderRFQ as SolTypeValue<OrderRFQ>>
            and 232 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
    |
40  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14899569436716330559.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
   |
46 | sol! (Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e, "./abis/Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:75:1
    |
75  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13057377955496296022.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:79:1
    |
79  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5599233079996055113.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f, "./abis/Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1262:55
     |
1262 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1262 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1262 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1262 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3033:75
     |
3033 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
3033 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3033 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3033 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 12 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
   |
40 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:170:1
    |
170 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:138:1
    |
138 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1005:55
     |
1005 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1005 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1005 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1005 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1135:55
     |
1135 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1135 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1135 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1135 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1640:75
     |
1640 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1640 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1640 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1640 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2810:75
     |
2810 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2810 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2810 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2810 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:158:1
    |
158 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
    |
44  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8846688448332690166.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:127:1
    |
127 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:263:1
    |
263 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13056557702386601864.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1078:55
     |
1078 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1078 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1078 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1078 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2642:75
     |
2642 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2642 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2642 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2642 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:144:1
    |
144 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:55:1
    |
55  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17484943102527988418.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:118:1
    |
118 | sol! (Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d, "./abis/Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:143:1
    |
143 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3474849698712389572.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:278:1
    |
278 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1019:55
     |
1019 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1019 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1019 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1019 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2456:75
     |
2456 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
2456 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2456 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2456 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:161:1
    |
161 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:301:1
    |
301 | sol! (Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade, "./abis/Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:18:1
    |
18  | sol! (Contract0x9d58779365b067d5d3fcc6e92d237acd06f1e6a1, "./abis/Contract0x9d58779365b067d5d3fcc6e92d237acd06f1e6a1.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x9d58779365b067d5d3fcc6e92d237acd06f1e6a1Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14521286854005351682.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
    |
34  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8165934951666625922.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:136:1
    |
136 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16659150508105933566.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:320:1
    |
320 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1180:55
     |
1180 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1180 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1180 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1180 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1320:55
     |
1320 | ...ade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
1320 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1320 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1320 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2801:75
     |
2801 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2801 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2801 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2801 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:4061:75
     |
4061 | ...um, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
4061 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
4061 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
4061 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:36:1
    |
36  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:68:1
   |
68 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1111:55
     |
1111 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1111 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1111 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1111 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2617:75
     |
2617 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2617 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2617 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2617 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:183:1
    |
183 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5325064204579062336.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:66:1
    |
66  | sol! (Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24, "./abis/Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14241989233968383045.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:152:1
    |
152 | sol! (Contract0x6511eba915fc1b94b2364289cca2b27ae5898d80, "./abis/Contract0x6511eba915fc1b94b2364289cca2b27ae5898d80.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1220:55
     |
1220 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1220 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1220 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1220 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3023:75
     |
3023 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
3023 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3023 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3023 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
   |
44 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:189:1
    |
189 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:73:1
    |
73  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11923702052422277970.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x00000624264253944a702b8b812ae7bbb46af371::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:188:1
    |
188 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7164008296392735996.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:294:1
    |
294 | sol! (Contract0x73308f6b34a529bb286b3e970662432bfe59c75a, "./abis/Contract0x73308f6b34a529bb286b3e970662432bfe59c75a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x73308f6b34a529bb286b3e970662432bfe59c75aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15944893837508513308.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1090:55
     |
1090 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1090 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1090 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1090 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1235:55
     |
1235 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1235 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1235 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1235 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1784:75
     |
1784 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1784 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1784 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1784 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3089:75
     |
3089 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
3089 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3089 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3089 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 10 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:182:1
    |
182 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:43:1
    |
43  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18178975643214753264.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:49:1
   |
49 | sol! (Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e, "./abis/Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:165:1
    |
165 | sol! (Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134, "./abis/Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5580029559408542910.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:258:1
    |
258 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13618861086853270181.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1348:55
     |
1348 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1348 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1348 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1348 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3186:75
     |
3186 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
3186 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3186 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3186 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:184:1
    |
184 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18402453336031883811.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:154:1
    |
154 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:224:1
    |
224 | sol! (Contract0x31c8eacbffdd875c74b94b077895bd78cf1e64a3, "./abis/Contract0x31c8eacbffdd875c74b94b077895bd78cf1e64a3.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x31c8eacbffdd875c74b94b077895bd78cf1e64a3Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2841101533104738487.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:322:1
    |
322 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5866078935584701559.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1293:55
     |
1293 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1293 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1293 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1293 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3128:75
     |
3128 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
3128 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3128 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3128 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:152:1
    |
152 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:36:1
    |
36  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:125:1
    |
125 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1006:55
     |
1006 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1006 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1006 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1006 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2500:75
     |
2500 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2500 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2500 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2500 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:151:1
    |
151 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:123:1
    |
123 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_0` on type `&MintToBcn`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:194:1
    |
194 | sol! (Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858, "./abis/Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_0` on type `&RandomTeam`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:194:1
    |
194 | sol! (Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858, "./abis/Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:289:1
    |
289 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1083:55
     |
1083 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1083 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1083 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1083 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2595:75
     |
2595 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2595 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2595 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2595 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
   |
26 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:57:1
    |
57  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-251567184891826046.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:106:1
    |
106 | sol! (Contract0x16783272aa1fa186ae626182fc698d4bcaba5470, "./abis/Contract0x16783272aa1fa186ae626182fc698d4bcaba5470.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:226:1
    |
226 | sol! (Contract0xd4b1fc5fa08ccd715c646ce4fd78722f61295bf7, "./abis/Contract0xd4b1fc5fa08ccd715c646ce4fd78722f61295bf7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd4b1fc5fa08ccd715c646ce4fd78722f61295bf7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5056378354766199158.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:919:55
    |
919 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
    |
919 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
919 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
919 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1418:75
     |
1418 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1418 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1418 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1418 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
   |
34 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:159:1
    |
159 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:131:1
    |
131 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_0` on type `&MintToBcn`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:211:1
    |
211 | sol! (Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858, "./abis/Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_0` on type `&RandomTeam`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:211:1
    |
211 | sol! (Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858, "./abis/Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1002:55
     |
1002 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1002 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1002 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1002 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1127:55
     |
1127 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1127 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1127 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1127 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1590:75
     |
1590 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1590 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1590 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1590 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2715:75
     |
2715 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2715 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2715 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2715 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:130:1
    |
130 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0609`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to previous error; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
   |
41 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:127:1
    |
127 | sol! (Contract0x6511eba915fc1b94b2364289cca2b27ae5898d80, "./abis/Contract0x6511eba915fc1b94b2364289cca2b27ae5898d80.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:177:1
    |
177 | sol! (Contract0x61a35258107563f6b6f102ae25490901c8760b12, "./abis/Contract0x61a35258107563f6b6f102ae25490901c8760b12.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x61a35258107563f6b6f102ae25490901c8760b12Calls {Contract0x61a35258107563f6b6f102ae25490901c8760b12Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1066:55
     |
1066 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1066 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1066 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1066 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1729:75
     |
1729 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1729 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1729 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1729 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:59:1
    |
59  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:128:1
    |
128 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:24:1
    |
24  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <AssetConfigInput as SolTypeValue<AssetConfigInput>>
              <ExchangeRateSnapshot as SolTypeValue<ExchangeRateSnapshot>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
              <Contract0x1cdad3bba261c56c678320068bbcaf932c8bad59::PrizeDistribution as SolTypeValue<Contract0x1cdad3bba261c56c678320068bbcaf932c8bad59::PrizeDistribution>>
            and 285 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:24:1
    |
24  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:24:1
    |
24  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <AssetConfigInput as SolTypeValue<AssetConfigInput>>
              <ExchangeRateSnapshot as SolTypeValue<ExchangeRateSnapshot>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
              <Contract0x1cdad3bba261c56c678320068bbcaf932c8bad59::PrizeDistribution as SolTypeValue<Contract0x1cdad3bba261c56c678320068bbcaf932c8bad59::PrizeDistribution>>
            and 285 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:28:1
    |
28  | sol! (Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac, "./abis/Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612acCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11557956762513465990.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14290669017949189634.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:146:1
    |
146 | sol! (Contract0x8b188428fa6a246d49715310ace3c2f6182aba97, "./abis/Contract0x8b188428fa6a246d49715310ace3c2f6182aba97.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
   |
32 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:23:1
    |
23  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x067132fa239c83039684b76163f5d109ddd026fa::InitializeParams as SolTypeValue<Contract0x067132fa239c83039684b76163f5d109ddd026fa::InitializeParams>>
              <Contract0x067132fa239c83039684b76163f5d109ddd026fa::TickRange as SolTypeValue<Contract0x067132fa239c83039684b76163f5d109ddd026fa::TickRange>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
            and 240 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:23:1
    |
23  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:23:1
    |
23  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x067132fa239c83039684b76163f5d109ddd026fa::InitializeParams as SolTypeValue<Contract0x067132fa239c83039684b76163f5d109ddd026fa::InitializeParams>>
              <Contract0x067132fa239c83039684b76163f5d109ddd026fa::TickRange as SolTypeValue<Contract0x067132fa239c83039684b76163f5d109ddd026fa::TickRange>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
            and 240 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:72:1
    |
72  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17519013368707005121.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:159:1
    |
159 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1032552919593717564.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1012:55
     |
1012 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1012 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1012 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1012 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1588:75
     |
1588 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1588 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1588 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1588 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 10 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:154:1
    |
154 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:37:1
    |
37  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16269246515541940142.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:57:1
    |
57  | sol! (Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449, "./abis/Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11076035355111408984.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0x49309180b5c3e4b0547a679a445af4bb0027d9ae, "./abis/Contract0x49309180b5c3e4b0547a679a445af4bb0027d9ae.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_0` on type `&MintToBcn`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:199:1
    |
199 | sol! (Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858, "./abis/Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_0` on type `&RandomTeam`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:199:1
    |
199 | sol! (Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858, "./abis/Contract0x4c69dbc3a2aa3476c3f7a1227ab70950db1f4858.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1140:55
     |
1140 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1140 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1140 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1140 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2694:75
     |
2694 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2694 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2694 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2694 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:27:1
   |
27 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:125:1
    |
125 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:51:1
    |
51  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2835069502927072783.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:94:1
    |
94  | sol! (Contract0x69bcf7103c881444095d4158e556f429a0a84623, "./abis/Contract0x69bcf7103c881444095d4158e556f429a0a84623.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x69bcf7103c881444095d4158e556f429a0a84623Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8115913176811911621.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:113:1
    |
113 | sol! (Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134, "./abis/Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1125530885156715663.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:845:55
    |
845 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
    |
845 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
845 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
845 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:943:55
    |
943 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
    |
943 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
943 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
943 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1327:75
     |
1327 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1327 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1327 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1327 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2209:75
     |
2209 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2209 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2209 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2209 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:151:1
    |
151 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
    |
34  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1041:55
     |
1041 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1041 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1041 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1041 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2539:75
     |
2539 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2539 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2539 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2539 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:15:7
   |
15 | sol! (Contract0x225fa034416c12ece27cd417df447449bc1e0caf, "./abis/Contract0x225fa034416c12ece27cd417df447449bc1e0caf.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
   |
32 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:139:1
    |
139 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:111:1
    |
111 | sol! (Contract0x8b188428fa6a246d49715310ace3c2f6182aba97, "./abis/Contract0x8b188428fa6a246d49715310ace3c2f6182aba97.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:860:55
    |
860 | ...caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
    |
860 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
860 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
860 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:877:55
    |
877 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
    |
877 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
877 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
877 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:984:55
    |
984 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
    |
984 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
984 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
984 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1255:75
     |
1255 | ...um, Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1255 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1255 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1255 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1408:75
     |
1408 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1408 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1408 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1408 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2371:75
     |
2371 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2371 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2371 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2371 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 10 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:165:1
    |
165 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
    |
44  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:75:1
   |
75 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x00000624264253944a702b8b812ae7bbb46af371::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:131:1
    |
131 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1172:55
     |
1172 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1172 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1172 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1172 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2821:75
     |
2821 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2821 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2821 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2821 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:137:1
    |
137 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:17:1
    |
17  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ChainBatchHeader as SolTypeValue<ChainBatchHeader>>
              <ChainInclusionProof as SolTypeValue<ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
            and 209 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:17:1
    |
17  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8]>>
              <&alloy_sol_types::private::Address as Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:17:1
    |
17  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ChainBatchHeader as SolTypeValue<ChainBatchHeader>>
              <ChainInclusionProof as SolTypeValue<ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
            and 209 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2545356973577297618.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:56:1
    |
56  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7181087379169110608.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:110:1
    |
110 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:135:1
    |
135 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-978424038278498562.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:958:55
    |
958 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
    |
958 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
958 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
958 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2321:75
     |
2321 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2321 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2321 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2321 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:137:1
    |
137 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:262:1
    |
262 | sol! (Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade, "./abis/Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15874751574213939275.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:101:1
    |
101 | sol! (Contract0xc59f346aa3bc3c53d113930588a75e96df2fad1d, "./abis/Contract0xc59f346aa3bc3c53d113930588a75e96df2fad1d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc59f346aa3bc3c53d113930588a75e96df2fad1dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12377444480871690451.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1015:55
     |
1015 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1015 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1015 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1015 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1140:55
     |
1140 | ...ade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
1140 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1140 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1140 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2397:75
     |
2397 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
2397 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2397 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2397 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3522:75
     |
3522 | ...um, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
3522 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3522 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3522 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:7
   |
22 | sol! (Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f, "./abis/Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:153:1
    |
153 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:948:55
    |
948 | ...a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
    |
948 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
948 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
948 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1079:55
     |
1079 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1079 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1079 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1079 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1426:75
     |
1426 | ...um, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1426 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1426 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1426 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2605:75
     |
2605 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2605 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2605 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2605 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:35:1
   |
35 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:174:1
    |
174 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected identifier, found keyword `self`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected identifier, found keyword
    | while parsing this struct
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected identifier, found keyword `self`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected identifier, found keyword
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `self` on type `Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe::isActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_epoch` on type `Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe::isActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `self` on type `&Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe::isActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_epoch` on type `&Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe::isActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `self` on type `isEmptyCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `self` on type `&isEmptyCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `self` on type `lastActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_latestEpoch` on type `lastActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `self` on type `&lastActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_latestEpoch` on type `&lastActiveCall`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe, "./abis/Contract0x013b49b72da7f746eec30c7bca848bd788c4fcfe.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1027:55
     |
1027 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1027 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1027 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1027 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1166:55
     |
1166 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1166 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1166 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1166 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1631:75
     |
1631 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1631 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1631 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1631 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2882:75
     |
2882 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
2882 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2882 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2882 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 19 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:21:7
   |
21 | sol! (Contract0x00000000000001ad428e4906ae43d8f9852d0dd6, "./abis/Contract0x00000000000001ad428e4906ae43d8f9852d0dd6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:154:1
    |
154 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
    |
34  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:120:1
    |
120 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:968:55
    |
968 | ...dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
    |
968 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
968 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
968 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1101:55
     |
1101 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1101 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1101 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1101 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1445:75
     |
1445 | ...um, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1445 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1445 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1445 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2642:75
     |
2642 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
2642 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2642 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2642 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:36:7
   |
36 | sol! (Contract0x225fa034416c12ece27cd417df447449bc1e0caf, "./abis/Contract0x225fa034416c12ece27cd417df447449bc1e0caf.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:51:1
   |
51 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:202:1
    |
202 | sol! (Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02, "./abis/Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:163:1
    |
163 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1235:55
     |
1235 | ...caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1235 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1235 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1235 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1250:55
     |
1250 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1250 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1250 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1250 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1401:55
     |
1401 | ...f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
1401 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1401 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1401 |    Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1916:75
     |
1916 | ...um, Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1916 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1916 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1916 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2051:75
     |
2051 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
2051 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2051 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2051 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3410:75
     |
3410 | ...um, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02` and 1 other; try using the variant's enum
     |
3410 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3410 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3410 | impl_decode_sol!(Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum, Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02_Enum::Contract0x6a28b1bc6123fe525ff46d881ff80871d0eb3f02Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 10 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15530610477042837586.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:72:1
    |
72  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14682496675780798636.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:92:1
    |
92  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1661416770862430026.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:181:1
    |
181 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13281403982288004977.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
    |
40  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:122:1
    |
122 | sol! (Contract0xaefc6bd082e5bb4020987527286419a9ca124537, "./abis/Contract0xaefc6bd082e5bb4020987527286419a9ca124537.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:45:1
    |
45  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14967678469107711198.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:88:1
    |
88  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3645213101187555845.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:7
   |
22 | sol! (Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f, "./abis/Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
    |
40  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:131:1
    |
131 | sol! (Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f, "./abis/Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1089:55
     |
1089 | ...a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1089 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1089 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1089 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1614:75
     |
1614 | ...um, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1614 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1614 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1614 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:121:1
    |
121 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0609`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to previous error; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: single element tuples must have a trailing comma.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:138:7
    |
138 | sol! (Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460, "./abis/Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to parse ABI-generated tokens into a Solidity AST: single element tuples must have a trailing comma.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:139:7
    |
139 | sol! (Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69, "./abis/Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to parse ABI-generated tokens into a Solidity AST: single element tuples must have a trailing comma.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:7
    |
142 | sol! (Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f, "./abis/Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
    |
46  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14514162500729496429.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:87:1
    |
87  | sol! (Contract0xc6b46448d4bf1a2ce0ed841dacfc196532e09d6e, "./abis/Contract0xc6b46448d4bf1a2ce0ed841dacfc196532e09d6e.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc6b46448d4bf1a2ce0ed841dacfc196532e09d6eCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14014721274838943461.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1235:55
     |
1235 | ...460(Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460::Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460` and 1 other; try using the variant's enum
     |
1235 |    Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1235 |    Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1235 |    Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460(Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460_Enum::Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1236:55
     |
1236 | ...b69(Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69::Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69` and 1 other; try using the variant's enum
     |
1236 |    Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1236 |    Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1236 |    Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69(Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69_Enum::Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1239:55
     |
1239 | ...a7f(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f` and 1 other; try using the variant's enum
     |
1239 |    Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1239 |    Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1239 |    Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2698:75
     |
2698 | ...um, Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460::Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460` and 1 other; try using the variant's enum
     |
2698 | impl_decode_sol!(Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2698 | impl_decode_sol!(Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2698 | impl_decode_sol!(Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460_Enum, Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460_Enum::Contract0xae089c1c5de5ea6a1e8e77069c7a787172b2e460Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2707:75
     |
2707 | ...um, Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69::Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69` and 1 other; try using the variant's enum
     |
2707 | impl_decode_sol!(Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2707 | impl_decode_sol!(Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2707 | impl_decode_sol!(Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69_Enum, Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69_Enum::Contract0xf61ae328463cd997c7b58e7045cdc613e1cfdb69Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2734:75
     |
2734 | ...um, Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f` and 1 other; try using the variant's enum
     |
2734 | impl_decode_sol!(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2734 | impl_decode_sol!(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2734 | impl_decode_sol!(Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum, Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7f_Enum::Contract0x826cbcf9ad71984c50524f8ab17452abed1faa7fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:56:1
    |
56  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:187:1
    |
187 | sol! (Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d, "./abis/Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:329:1
    |
329 | sol! (Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6, "./abis/Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
   |
38 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:76:1
    |
76  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-313251466515544412.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xb8dec5e29047ce86ef21f5040f7c5dd4a2dd11fb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:112:1
    |
112 | sol! (Contract0xb8dec5e29047ce86ef21f5040f7c5dd4a2dd11fb, "./abis/Contract0xb8dec5e29047ce86ef21f5040f7c5dd4a2dd11fb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x430589e576d0e1b830767574b176167db6086ebb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:181:1
    |
181 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5764239248746829377.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1114:55
     |
1114 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1114 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1114 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1114 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1770:75
     |
1770 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1770 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1770 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1770 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:138:1
    |
138 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
    |
34  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1319208996380057190.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:60:1
   |
60 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:81:1
    |
81  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4330960419307763084.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:7
   |
26 | sol! (Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f, "./abis/Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:47:1
   |
47 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1054:55
     |
1054 | ...a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1054 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1054 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1054 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1075:55
     |
1075 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1075 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1075 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1075 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1598:75
     |
1598 | ...um, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1598 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1598 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1598 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1787:75
     |
1787 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1787 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1787 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1787 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:33:1
    |
33  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:133:1
    |
133 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:125:1
    |
125 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:65:1
    |
65  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10060883537955369974.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0xebeb714456167154b874c1afa13f1cd98202e38a, "./abis/Contract0xebeb714456167154b874c1afa13f1cd98202e38a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:158:1
    |
158 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13554543836906591954.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:65:1
   |
65 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:99:1
    |
99  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4657692319698667637.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:207:1
    |
207 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:248:1
    |
248 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-864292843634265365.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:263:1
    |
263 | sol! (Contract0x61a35258107563f6b6f102ae25490901c8760b12, "./abis/Contract0x61a35258107563f6b6f102ae25490901c8760b12.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x61a35258107563f6b6f102ae25490901c8760b12Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3117881980577130361.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:441:1
    |
441 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1444:55
     |
1444 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1444 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1444 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1444 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2417:75
     |
2417 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
2417 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2417 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2417 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:62:7
   |
62 | sol! (Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6, "./abis/Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:25:1
    |
25  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <App as SolTypeValue<App>>
              <Facet as SolTypeValue<Facet>>
              <Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveConfigurationMap as SolTypeValue<Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveConfigurationMap>>
              <Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveData as SolTypeValue<Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveData>>
              <Contract0xf2087047d61563078e8f253c3289a7012904aa7c::UserConfigurationMap as SolTypeValue<Contract0xf2087047d61563078e8f253c3289a7012904aa7c::UserConfigurationMap>>
            and 257 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:25:1
    |
25  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:25:1
    |
25  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <App as SolTypeValue<App>>
              <Facet as SolTypeValue<Facet>>
              <Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveConfigurationMap as SolTypeValue<Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveConfigurationMap>>
              <Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveData as SolTypeValue<Contract0xf2087047d61563078e8f253c3289a7012904aa7c::ReserveData>>
              <Contract0xf2087047d61563078e8f253c3289a7012904aa7c::UserConfigurationMap as SolTypeValue<Contract0xf2087047d61563078e8f253c3289a7012904aa7c::UserConfigurationMap>>
            and 257 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:39:1
    |
39  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:138:1
    |
138 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1084:55
     |
1084 | ...cf6(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6` and 1 other; try using the variant's enum
     |
1084 |    Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1084 |    Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1084 |    Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1914:75
     |
1914 | ...um, Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6` and 1 other; try using the variant's enum
     |
1914 | impl_decode_sol!(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1914 | impl_decode_sol!(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1914 | impl_decode_sol!(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum, Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:69:7
   |
69 | sol! (Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6, "./abis/Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
    |
34  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
            and 245 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
    |
34  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
    |
34  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainBatchHeader>>
              <Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof as SolTypeValue<Contract0xc9e21345f4a51aa13b82e0d7d75fc9a8bfe06b88::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
            and 245 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:45:1
    |
45  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8731824330350014918.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:72:1
    |
72  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6326684673773465591.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:99:1
    |
99  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10165420404484629584.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0x314ceaef48eb4f25e7a4cf0a137bc97112d95ba8, "./abis/Contract0x314ceaef48eb4f25e7a4cf0a137bc97112d95ba8.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:170:1
    |
170 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1082228413855259030.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1088:55
     |
1088 | ...cf6(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6` and 1 other; try using the variant's enum
     |
1088 |    Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1088 |    Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1088 |    Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1973:75
     |
1973 | ...um, Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6` and 1 other; try using the variant's enum
     |
1973 | impl_decode_sol!(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1973 | impl_decode_sol!(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1973 | impl_decode_sol!(Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum, Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6_Enum::Contract0x3dbdc81a6edc94c720b0b88fb65dbd7e395fdcf6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 12 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:169:1
    |
169 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:37:1
    |
37  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3148965723446129487.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:64:1
    |
64  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4990394957634025297.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:126:1
    |
126 | sol! (Contract0xa8fb1ab0b9dba76fb09eb3ffc035972b081a39ab, "./abis/Contract0xa8fb1ab0b9dba76fb09eb3ffc035972b081a39ab.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xa8fb1ab0b9dba76fb09eb3ffc035972b081a39abCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13898155537344042968.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:133:1
    |
133 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:149:1
    |
149 | sol! (Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134, "./abis/Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xcfbfac74c26f8647cbdb8c5caf80bb5b32e43134Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8049246730566001067.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x7de800467afce442019884f51a4a1b9143a34fac::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:208:1
    |
208 | sol! (Contract0x7de800467afce442019884f51a4a1b9143a34fac, "./abis/Contract0x7de800467afce442019884f51a4a1b9143a34fac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1191:55
     |
1191 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1191 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1191 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1191 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2877:75
     |
2877 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2877 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2877 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2877 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:143:1
    |
143 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:30:1
    |
30  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15997639565248060515.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:58:1
    |
58  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12268507480044503085.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:60:1
    |
60  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6938273361166588904.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:141:1
    |
141 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3798702907197281758.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1036:55
     |
1036 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1036 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1036 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1036 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2471:75
     |
2471 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2471 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2471 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2471 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:26:1
    |
26  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:114:1
    |
114 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1023:55
     |
1023 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1023 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1023 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1023 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2446:75
     |
2446 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
2446 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2446 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2446 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  188
  253
  257
  204
  446
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:36:1
    |
36  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:120:1
    |
120 | sol! (Contract0xeeca00375bb46e60d7d6dd7887488b5694d0878a, "./abis/Contract0xeeca00375bb46e60d7d6dd7887488b5694d0878a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:18:1
    |
18  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <KV as SolTypeValue<KV>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams>>
            and 251 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:18:1
    |
18  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:18:1
    |
18  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <KV as SolTypeValue<KV>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputParams>>
              <Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams as SolTypeValue<Contract0xe09e30b8a57b245ba48595663204f5dbab75bced::ExactInputSingleParams>>
            and 251 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:35:1
    |
35  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17503513644815870679.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:59:1
    |
59  | sol! (Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24, "./abis/Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9196948693321216615.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:62:1
    |
62  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6809103149393469648.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:89:1
    |
89  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5380626593545094424.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:125:1
    |
125 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:157:1
    |
157 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:20:1
    |
20  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price as SolTypeValue<Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
            and 236 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:20:1
    |
20  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:20:1
    |
20  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price as SolTypeValue<Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainBatchHeader>>
              <Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof as SolTypeValue<Contract0xd9166833ff12a5f900ccfbf2c8b62a90f1ca1fd5::ChainInclusionProof>>
              <L2MessageInclusionProof as SolTypeValue<L2MessageInclusionProof>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
            and 236 others
    = note: required for `reth_revm_primitives::revm_primitives::ruint::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8225234521072507824.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:62:1
    |
62  | sol! (Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449, "./abis/Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xa3f6afbfb8bb37f8d89e6c0a67f597ead1dda449Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6835747938140036305.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:85:1
    |
85  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11063718915577534683.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:130:1
    |
130 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x7de800467afce442019884f51a4a1b9143a34fac::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:204:1
    |
204 | sol! (Contract0x7de800467afce442019884f51a4a1b9143a34fac, "./abis/Contract0x7de800467afce442019884f51a4a1b9143a34fac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:240:1
    |
240 | sol! (Contract0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac, "./abis/Contract0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:318:1
    |
318 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1170:55
     |
1170 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1170 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1170 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1170 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2757:75
     |
2757 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2757 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2757 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2757 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 14 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:39:1
    |
39  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:146:1
    |
146 | sol! (Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d, "./abis/Contract0x459c93ae6e2d3f5117e1b0f08705eb224339ce5d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xee3e9e46e34a27dc755a63e2849c9913ee1a06e2::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:268:1
    |
268 | sol! (Contract0xee3e9e46e34a27dc755a63e2849c9913ee1a06e2, "./abis/Contract0xee3e9e46e34a27dc755a63e2849c9913ee1a06e2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
   |
41 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:1
    |
22  | sol! (Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac, "./abis/Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612acCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17992095382328192321.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:67:1
    |
67  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17986963427074513692.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:141:1
    |
141 | sol! (Contract0x00000624264253944a702b8b812ae7bbb46af371, "./abis/Contract0x00000624264253944a702b8b812ae7bbb46af371.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1153:55
     |
1153 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1153 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1153 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1153 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1845:75
     |
1845 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1845 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1845 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1845 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:32:1
    |
32  | sol! (Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac, "./abis/Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612ac.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612acCalls {Contract0xf6d9851893c315ae6f4916e1e29a72dfb39612acCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:140:1
    |
140 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:28:1
    |
28  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveConfigurationMap as SolTypeValue<Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveConfigurationMap>>
              <Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveData as SolTypeValue<Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveData>>
              <Contract0xc6845a5c768bf8d7681249f8927877efda425baf::UserConfigurationMap as SolTypeValue<Contract0xc6845a5c768bf8d7681249f8927877efda425baf::UserConfigurationMap>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
            and 295 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:28:1
    |
28  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:28:1
    |
28  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveConfigurationMap as SolTypeValue<Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveConfigurationMap>>
              <Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveData as SolTypeValue<Contract0xc6845a5c768bf8d7681249f8927877efda425baf::ReserveData>>
              <Contract0xc6845a5c768bf8d7681249f8927877efda425baf::UserConfigurationMap as SolTypeValue<Contract0xc6845a5c768bf8d7681249f8927877efda425baf::UserConfigurationMap>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
            and 295 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17928375136394154021.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:72:1
    |
72  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16821773130251675656.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:324:1
    |
324 | sol! (Contract0x9f0da414075f7952f1bdcf1b2f9cb0d8daf8b9bd, "./abis/Contract0x9f0da414075f7952f1bdcf1b2f9cb0d8daf8b9bd.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x9f0da414075f7952f1bdcf1b2f9cb0d8daf8b9bdCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12611902987521198764.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  196
  232
  359
  373
  277
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  183
  215
  210
  262
  281
  got addresses for chunk
  Error("invalid value: string \"TokenStorageLib.TokenStorage storage\", expected a valid Solidity type specifier", line: 1, column: 211), [
      "0x13e6574730e4ae1b425967db30e9d5dd5bcdde06",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"TokenStorageLib.TokenStorage storage\", expected a valid Solidity type specifier", line: 1, column: 211)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
    |
40  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:129:1
    |
129 | sol! (Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f, "./abis/Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 2 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:72:1
   |
72 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xcca320585b8eba7fb62eb282c68190fe8036865e::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:127:1
    |
127 | sol! (Contract0xcca320585b8eba7fb62eb282c68190fe8036865e, "./abis/Contract0xcca320585b8eba7fb62eb282c68190fe8036865e.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:30:1
   |
30 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:54:1
    |
54  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:134:1
    |
134 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1103:55
     |
1103 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1103 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1103 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1103 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1694:75
     |
1694 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1694 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1694 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1694 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:44:1
   |
44 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:147:1
    |
147 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:273:1
    |
273 | sol! (Contract0x73308f6b34a529bb286b3e970662432bfe59c75a, "./abis/Contract0x73308f6b34a529bb286b3e970662432bfe59c75a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x73308f6b34a529bb286b3e970662432bfe59c75aCalls {Contract0x73308f6b34a529bb286b3e970662432bfe59c75aCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1111:55
     |
1111 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1111 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1111 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1111 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1812:75
     |
1812 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1812 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1812 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1812 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  206
  242
  215
  277
  233
  got addresses for chunk
  Error("invalid value: string \"WasabiStructs.OptionType\", expected a valid Solidity type specifier", line: 1, column: 2226), [
      "0xd3bb8475c30fd70675f6250fb725e30b3a6e6094",
  ]
  Error("invalid value: string \"WasabiStructs.OptionType\", expected a valid Solidity type specifier", line: 1, column: 844), [
      "0xe3f3dca2bd68cbd34b58cfc3bcd109998fcce0ac",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"WasabiStructs.OptionType\", expected a valid Solidity type specifier", line: 1, column: 2226)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"WasabiStructs.OptionType\", expected a valid Solidity type specifier", line: 1, column: 844)
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:42:1
    |
42  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-936794581956229902.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:60:1
    |
60  | sol! (Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24, "./abis/Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe16ba5bf81e5bb113e4752e4fdc20351d796fb24Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12569461238556465221.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:120:1
    |
120 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0124]: field `out` is already declared
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:353:1
    |
353 | sol! (Contract0x60058dd4cbab1870d2b8741fab24725a2f110054, "./abis/Contract0x60058dd4cbab1870d2b8741fab24725a2f110054.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | field already declared
    | `out` first declared here
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0124`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to previous error; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:55:1
   |
55 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:208:1
    |
208 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:84:1
    |
84  | sol! (Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f, "./abis/Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x891d882fdacd2cb8daea5289f6019676e797ee5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5928515080845034867.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:92:1
    |
92  | sol! (Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4, "./abis/Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf48f2b2d2a534e402487b3ee7c18c33aec0fe5e4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17135430663133525731.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:99:1
    |
99  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-550630098267906069.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:103:1
    |
103 | sol! (Contract0xb8493cd0e7135462502df048deefc9b650fa789f, "./abis/Contract0xb8493cd0e7135462502df048deefc9b650fa789f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb8493cd0e7135462502df048deefc9b650fa789fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14764464646286932365.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:166:1
    |
166 | sol! (Contract0x3d130ccbabe9b3561bb1f45f9605edf2944c9ee5, "./abis/Contract0x3d130ccbabe9b3561bb1f45f9605edf2944c9ee5.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x3d130ccbabe9b3561bb1f45f9605edf2944c9ee5Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6117557707767565569.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:243:1
    |
243 | sol! (Contract0x24179cd81c9e782a4096035f7ec97fb8b783e007, "./abis/Contract0x24179cd81c9e782a4096035f7ec97fb8b783e007.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x24179cd81c9e782a4096035f7ec97fb8b783e007Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5102975128733050896.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:271:1
    |
271 | sol! (Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23, "./abis/Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x111bf64da957c55601c6d0f9db2eb1aef4ddee23Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13166200529208308984.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:308:1
    |
308 | sol! (Contract0x896a3f03176f05cfbb4f006bfcd8723f2b0d741c, "./abis/Contract0x896a3f03176f05cfbb4f006bfcd8723f2b0d741c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x896a3f03176f05cfbb4f006bfcd8723f2b0d741cCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1152756188567797986.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:325:1
    |
325 | sol! (Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28, "./abis/Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5008799969852420234.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:357:1
    |
357 | sol! (Contract0x9f0da414075f7952f1bdcf1b2f9cb0d8daf8b9bd, "./abis/Contract0x9f0da414075f7952f1bdcf1b2f9cb0d8daf8b9bd.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x9f0da414075f7952f1bdcf1b2f9cb0d8daf8b9bdCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6451118745965510468.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:375:1
    |
375 | sol! (Contract0x741d21a9dd5dcc14cc5cd84cd91fd74638afa313, "./abis/Contract0x741d21a9dd5dcc14cc5cd84cd91fd74638afa313.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x741d21a9dd5dcc14cc5cd84cd91fd74638afa313Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14473248625044032027.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1275:55
     |
1275 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1275 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1275 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1275 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1428:55
     |
1428 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1428 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1428 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1428 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2115:75
     |
2115 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
2115 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2115 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2115 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3492:75
     |
3492 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
3492 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3492 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3492 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 17 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  194
  212
  186
  248
  236
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:37:1
    |
37  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7948923690335764753.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:55:1
    |
55  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11146868005780296894.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:122:1
    |
122 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:150:1
    |
150 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6022538034781175366.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:25:1
    |
25  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <KV as SolTypeValue<KV>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
              <Contract0xf7a646fe5eba40a2619b894f3d85d682198b99bf::SwapData as SolTypeValue<Contract0xf7a646fe5eba40a2619b894f3d85d682198b99bf::SwapData>>
            and 327 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:25:1
    |
25  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:25:1
    |
25  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <KV as SolTypeValue<KV>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
              <Contract0xf7a646fe5eba40a2619b894f3d85d682198b99bf::SwapData as SolTypeValue<Contract0xf7a646fe5eba40a2619b894f3d85d682198b99bf::SwapData>>
            and 327 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:49:1
    |
49  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15632218585071777985.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:226:1
    |
226 | sol! (Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a, "./abis/Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8140208676203505421.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
   |
34 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:80:1
    |
80  | sol! (Contract0x53525a62e55b6002792b993a2c27af70d12443e4, "./abis/Contract0x53525a62e55b6002792b993a2c27af70d12443e4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x53525a62e55b6002792b993a2c27af70d12443e4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17901738709615601214.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:140:1
    |
140 | sol! (Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4, "./abis/Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7085028073144317792.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:145:1
    |
145 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:163:1
    |
163 | sol! (Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09, "./abis/Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2454609439387426661.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:248:1
    |
248 | sol! (Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a, "./abis/Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17512602391564098137.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:266:1
    |
266 | sol! (Contract0xadea044772cfd35d996aa5e0de12ed5937badd61, "./abis/Contract0xadea044772cfd35d996aa5e0de12ed5937badd61.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xadea044772cfd35d996aa5e0de12ed5937badd61Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17088722164916846524.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:279:1
    |
279 | sol! (Contract0x118e3040b899ec6aad6a696b3583ae03a927d3a0, "./abis/Contract0x118e3040b899ec6aad6a696b3583ae03a927d3a0.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x118e3040b899ec6aad6a696b3583ae03a927d3a0Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-92714612405160616.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:287:1
    |
287 | sol! (Contract0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d, "./abis/Contract0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x491604c0fdf08347dd1fa4ee062a822a5dd06b5dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17955421233658050690.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:288:1
    |
288 | sol! (Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360, "./abis/Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10271742416263828214.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:303:1
    |
303 | sol! (Contract0xad1b9867befd148c9476b9dd1e7c749bfcefbb2e, "./abis/Contract0xad1b9867befd148c9476b9dd1e7c749bfcefbb2e.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xad1b9867befd148c9476b9dd1e7c749bfcefbb2eCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14561815600673492106.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:313:1
    |
313 | sol! (Contract0x9d8bb5496332cbeed59f1211f28db8b5eb214b6d, "./abis/Contract0x9d8bb5496332cbeed59f1211f28db8b5eb214b6d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x9d8bb5496332cbeed59f1211f28db8b5eb214b6dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11041042014552644544.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1167:55
     |
1167 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1167 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1167 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1167 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1810:75
     |
1810 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1810 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1810 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1810 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 14 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2455178854534655721.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:130:1
    |
130 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:217:1
    |
217 | sol! (Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff, "./abis/Contract0x46e98ffe40e408ba6412beb670507e083c8b95ff.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x46e98ffe40e408ba6412beb670507e083c8b95ffCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16587576760623883949.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  201
  216
  274
  287
  204
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:30:1
    |
30  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price as SolTypeValue<Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
            and 350 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:30:1
    |
30  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:30:1
    |
30  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price as SolTypeValue<Contract0x7542565191d074ce84fbfa92cae13acb84788ca9::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <ReserveConfigurationMap as SolTypeValue<ReserveConfigurationMap>>
              <ReserveData as SolTypeValue<ReserveData>>
              <UserConfigurationMap as SolTypeValue<UserConfigurationMap>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
            and 350 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:49:1
    |
49  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9680296517558604920.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:83:1
    |
83  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2870224893051434889.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xf352e50880d9e8dfe7d7ae55514355c775f45def::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:168:1
    |
168 | sol! (Contract0xf352e50880d9e8dfe7d7ae55514355c775f45def, "./abis/Contract0xf352e50880d9e8dfe7d7ae55514355c775f45def.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:325:1
    |
325 | sol! (Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6, "./abis/Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:384:1
    |
384 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 9 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0124]: field `out` is already declared
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:357:1
    |
357 | sol! (Contract0x1fd92be6317f01568059e310659d410f26780c5c, "./abis/Contract0x1fd92be6317f01568059e310659d410f26780c5c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | field already declared
    | `out` first declared here
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0124`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to previous error; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:204:1
    |
204 | sol! (Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d, "./abis/Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:43:1
    |
43  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14233385496794407669.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:73:1
    |
73  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8463495427434228817.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:93:1
    |
93  | sol! (Contract0x53525a62e55b6002792b993a2c27af70d12443e4, "./abis/Contract0x53525a62e55b6002792b993a2c27af70d12443e4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x53525a62e55b6002792b993a2c27af70d12443e4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-15349999555827830304.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:145:1
    |
145 | sol! (Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4, "./abis/Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14674465270274307012.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:157:1
    |
157 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:176:1
    |
176 | sol! (Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09, "./abis/Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x0d2c4ae1859c4f8bfd47755d52ce844b26cb2a09Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-962539894600392307.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:192:1
    |
192 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2472440192107421093.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:269:1
    |
269 | sol! (Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a, "./abis/Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7086169215557903501.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:289:1
    |
289 | sol! (Contract0xadea044772cfd35d996aa5e0de12ed5937badd61, "./abis/Contract0xadea044772cfd35d996aa5e0de12ed5937badd61.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xadea044772cfd35d996aa5e0de12ed5937badd61Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1098230039093419372.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:302:1
    |
302 | sol! (Contract0x42865c7fa0b84cf76c8e8256f3356226edc3b1be, "./abis/Contract0x42865c7fa0b84cf76c8e8256f3356226edc3b1be.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x42865c7fa0b84cf76c8e8256f3356226edc3b1beCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11028296775652253231.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:310:1
    |
310 | sol! (Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360, "./abis/Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x5645788ac6ec2f2c6b3f831eb7e0c3685e53f360Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4440598454325214070.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:322:1
    |
322 | sol! (Contract0xb7015ed39d0efd955998fa7d28cbc8a71668c809, "./abis/Contract0xb7015ed39d0efd955998fa7d28cbc8a71668c809.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb7015ed39d0efd955998fa7d28cbc8a71668c809Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17227971319503204213.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:326:1
    |
326 | sol! (Contract0x68353ffbb8d16e3ffef521c9c70c391e808969ba, "./abis/Contract0x68353ffbb8d16e3ffef521c9c70c391e808969ba.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x68353ffbb8d16e3ffef521c9c70c391e808969baCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10871170587771784965.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1373:55
     |
1373 | ...65d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
1373 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1373 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1373 |    Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:3388:75
     |
3388 | ...um, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d` and 1 other; try using the variant's enum
     |
3388 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3388 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3388 | impl_decode_sol!(Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum, Contract0x473b1887d45d61efd87731a1d8ec3590b93c565d_Enum::Contract0x473b1887d45d61efd87731a1d8ec3590b93c565dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 16 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
    |
40  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10774141583812237040.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:64:1
    |
64  | sol! (Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f, "./abis/Contract0x891d882fdacd2cb8daea5289f6019676e797ee5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x891d882fdacd2cb8daea5289f6019676e797ee5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6784830145763322227.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:69:1
    |
69  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14305358012302015714.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:142:1
    |
142 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:36:1
    |
36  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14897313673816583392.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:92:1
    |
92  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3526839772208045370.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:129:1
    |
129 | sol! (Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f, "./abis/Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:199:1
    |
199 | sol! (Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a, "./abis/Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xdb5ae2ee1ecb12367cf57765491c45a554484e2aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14172976973253495689.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:329:1
    |
329 | sol! (Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade, "./abis/Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:37:1
    |
37  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17757805794204969910.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:69:1
    |
69  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18130124540879491696.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:91:1
    |
91  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10599077682389395338.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:141:1
    |
141 | sol! (Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4, "./abis/Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1829705317450214009.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:146:1
    |
146 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:246:1
    |
246 | sol! (Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a, "./abis/Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf0e0915d233c616cb727e0b2ca29ff0cbd51b66aCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12480676368976087642.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:282:1
    |
282 | sol! (Contract0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d, "./abis/Contract0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x491604c0fdf08347dd1fa4ee062a822a5dd06b5dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14226914552354972961.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:324:1
    |
324 | sol! (Contract0xda2b033a5f396c8537df2131846f5133908a9425, "./abis/Contract0xda2b033a5f396c8537df2131846f5133908a9425.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xda2b033a5f396c8537df2131846f5133908a9425Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2475338315957439020.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1429:55
     |
1429 | ...ade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
1429 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1429 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1429 |    Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:4421:75
     |
4421 | ...um, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade` and 1 other; try using the variant's enum
     |
4421 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
4421 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
4421 | impl_decode_sol!(Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum, Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fade_Enum::Contract0xcdaeb7f4ef8f209b6cfad75f4a23acacbe00fadeCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  184
  154
  216
  256
  209
  got addresses for chunk

  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:169:14:
  called `Result::unwrap()` on an `Err` value: Network(hyper::Error(IncompleteMessage))
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  170
  249
  258
  249
  254
  got addresses for chunk
  Error("invalid value: string \"TokenStorageLib.TokenStorage storage\", expected a valid Solidity type specifier", line: 1, column: 211), [
      "0x13e6574730e4ae1b425967db30e9d5dd5bcdde06",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"TokenStorageLib.TokenStorage storage\", expected a valid Solidity type specifier", line: 1, column: 211)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  188
  180
  242
  222
  249
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:37:1
    |
37  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9298884462927402428.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:198:1
    |
198 | sol! (Contract0x65adc06dd015b5033570b317765c81ec5e4b4757, "./abis/Contract0x65adc06dd015b5033570b317765c81ec5e4b4757.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x65adc06dd015b5033570b317765c81ec5e4b4757Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8717795403236250133.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated_0`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:245:1
    |
245 | sol! (Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788, "./abis/Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated_1`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:245:1
    |
245 | sol! (Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788, "./abis/Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:273:1
    |
273 | sol! (Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6, "./abis/Contract0xc480b33ee5229de3fbdfad1d2dcd3f3bad0c56c6.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17983195093868054213.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:129:1
    |
129 | sol! (Contract0x314ceaef48eb4f25e7a4cf0a137bc97112d95ba8, "./abis/Contract0x314ceaef48eb4f25e7a4cf0a137bc97112d95ba8.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:131:1
    |
131 | sol! (Contract0x8444fe0120be34027d7f3e3a5da40f05d2adab2d, "./abis/Contract0x8444fe0120be34027d7f3e3a5da40f05d2adab2d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x8444fe0120be34027d7f3e3a5da40f05d2adab2dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-13273300635812223497.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:229:1
    |
229 | sol! (Contract0x202fbff035188f9f0525e144c8b3f8249a74ad21, "./abis/Contract0x202fbff035188f9f0525e144c8b3f8249a74ad21.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x202fbff035188f9f0525e144c8b3f8249a74ad21Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4577260673363699194.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:284:1
    |
284 | sol! (Contract0x0fa46e8cbceff8468db2ec2fd77731d8a11d3d86, "./abis/Contract0x0fa46e8cbceff8468db2ec2fd77731d8a11d3d86.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x0fa46e8cbceff8468db2ec2fd77731d8a11d3d86Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17616533551298116837.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:31:7
   |
31 | sol! (Contract0x225fa034416c12ece27cd417df447449bc1e0caf, "./abis/Contract0x225fa034416c12ece27cd417df447449bc1e0caf.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_2` on type `&Contract0xd45467cc629afee7bb3aca7e2606997216fc92b2::PairCreated`
 --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1:1
  |
1 | sol! (Contract0xd45467cc629afee7bb3aca7e2606997216fc92b2, "./abis/Contract0xd45467cc629afee7bb3aca7e2606997216fc92b2.json");
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
  |
  = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
    |
46  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18118505532069606107.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:77:1
    |
77  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5562052772269078565.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:160:1
    |
160 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:195:1
    |
195 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11283829981117905326.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1206:55
     |
1206 | ...caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1206 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1206 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1206 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1839:75
     |
1839 | ...um, Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1839 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1839 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1839 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:29:1
    |
29  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9301787235852440265.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:116:1
    |
116 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:212:1
    |
212 | sol! (Contract0x8bc3702c35d33e5df7cb0f06cb72a0c34ae0c56f, "./abis/Contract0x8bc3702c35d33e5df7cb0f06cb72a0c34ae0c56f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x8bc3702c35d33e5df7cb0f06cb72a0c34ae0c56fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10379529607055124238.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:234:1
    |
234 | sol! (Contract0x202fbff035188f9f0525e144c8b3f8249a74ad21, "./abis/Contract0x202fbff035188f9f0525e144c8b3f8249a74ad21.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x202fbff035188f9f0525e144c8b3f8249a74ad21Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-180817683919897451.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:22:7
   |
22 | sol! (Contract0x00000000000001ad428e4906ae43d8f9852d0dd6, "./abis/Contract0x00000000000001ad428e4906ae43d8f9852d0dd6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0124]: field `out` is already declared
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:308:1
    |
308 | sol! (Contract0x60058dd4cbab1870d2b8741fab24725a2f110054, "./abis/Contract0x60058dd4cbab1870d2b8741fab24725a2f110054.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | field already declared
    | `out` first declared here
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1029:55
     |
1029 | ...dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1029 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1029 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1029 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1534:75
     |
1534 | ...um, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1534 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1534 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1534 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0124, E0433.
For more information about an error, try `rustc --explain E0124`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:31:7
   |
31 | sol! (Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f, "./abis/Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:48:1
   |
48 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:84:1
    |
84  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3595520008536463701.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:173:1
    |
173 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:209:1
    |
209 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10459490756204574307.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:324:1
    |
324 | sol! (Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28, "./abis/Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-4526396504078952641.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:402:1
    |
402 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7171604101304376663.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1284:55
     |
1284 | ...a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1284 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1284 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1284 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1301:55
     |
1301 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1301 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1301 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1301 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1943:75
     |
1943 | ...um, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1943 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1943 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1943 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2096:75
     |
2096 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
2096 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2096 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2096 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 11 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:45:1
    |
45  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6771612164838319419.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:94:1
    |
94  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18077012188728785412.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:146:1
    |
146 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:338:1
    |
338 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-3868526971856103139.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:35:1
   |
35 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:72:1
    |
72  | sol! (Contract0xb23d80f5fefcddaa212212f028021b41ded428cf, "./abis/Contract0xb23d80f5fefcddaa212212f028021b41ded428cf.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls {Contract0xb23d80f5fefcddaa212212f028021b41ded428cfCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:125:1
    |
125 | sol! (Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f, "./abis/Contract0x61f5064955c632ed502e62ee1b73e578f478ed6f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:970:55
    |
970 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
    |
970 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
970 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
970 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1555:75
     |
1555 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1555 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1555 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1555 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
    |
46  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-650760392480166740.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:72:1
    |
72  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10723982477140127462.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:140:1
    |
140 | sol! (Contract0x10d6b05df2cf388f97c65ae1442b7736687a2603, "./abis/Contract0x10d6b05df2cf388f97c65ae1442b7736687a2603.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:171:1
    |
171 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8050712924208037407.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:338:1
    |
338 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-957899655530805737.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:37:1
   |
37 | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:35:1
   |
35 | sol! (Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e, "./abis/Contract0x26f53fbadeeb777fb2a122dc703433d79241b64e.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:57:1
    |
57  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2263409812920704161.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:125:1
    |
125 | sol! (Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb, "./abis/Contract0xc52d01c3a569ce4beb5da25be0636c09188e35cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:278:1
    |
278 | sol! (Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400, "./abis/Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xe909f37f3003fa37aad83c1baf2a98e5a7b67400Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16166913082067466377.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:326:1
    |
326 | sol! (Contract0x2822f6d1b2f41f93f33d937bc7d84a8dfa4f4c21, "./abis/Contract0x2822f6d1b2f41f93f33d937bc7d84a8dfa4f4c21.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x2822f6d1b2f41f93f33d937bc7d84a8dfa4f4c21Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9844424360171310336.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1035:55
     |
1035 | ...5a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1035 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1035 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1035 |    Contract0x94f04a210701d710b803b2133a7e16e57af385a2(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1657:75
     |
1657 | ...um, Contract0x94f04a210701d710b803b2133a7e16e57af385a2::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x94f04a210701d710b803b2133a7e16e57af385a2`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x94f04a210701d710b803b2133a7e16e57af385a2` and 1 other; try using the variant's enum
     |
1657 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1657 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1657 | impl_decode_sol!(Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum, Contract0x94f04a210701d710b803b2133a7e16e57af385a2_Enum::Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 20]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:23:1
    |
23  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 20]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
            and 269 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::Address>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Address: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:23:1
    |
23  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `alloy_sol_types::private::Address`
    |
    = help: the following other types implement trait `std::borrow::Borrow<Borrowed>`:
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8]>>
              <&alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
              <&mut alloy_sol_types::private::Address as std::borrow::Borrow<[u8; 20]>>
    = note: required for `alloy_sol_types::private::Address` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `alloy_sol_types::private::Uint<256, 4>: std::borrow::Borrow<[u8; 32]>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:23:1
    |
23  | sol! (Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72, "./abis/Contract0x2e4b0f20bdb1caa0886c531256efdaab925dbe72.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<[u8; 32]>` is not implemented for `alloy_sol_types::private::Uint<256, 4>`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price as SolTypeValue<Contract0x87d0e82e04dd63be5da195f88ab4dc35f58c78fe::Price>>
              <TransformERC20Args as SolTypeValue<TransformERC20Args>>
              <Transformation as SolTypeValue<Transformation>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
            and 269 others
    = note: required for `alloy_sol_types::private::Uint<256, 4>` to implement `SolTypeValue<alloy_sol_types::sol_data::FixedBytes<32>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:35:1
    |
35  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:123:1
    |
123 | sol! (Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c, "./abis/Contract0x81c27d1a0a6413c6a6d6d8e54b0a9c869d16771c.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:51:1
   |
51 | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:76:1
    |
76  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-11111659745864937905.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:152:1
    |
152 | sol! (Contract0x8b188428fa6a246d49715310ace3c2f6182aba97, "./abis/Contract0x8b188428fa6a246d49715310ace3c2f6182aba97.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:390:1
    |
390 | sol! (Contract0xc013341c944944e5d0d9fd7f4107b8537b868860, "./abis/Contract0xc013341c944944e5d0d9fd7f4107b8537b868860.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc013341c944944e5d0d9fd7f4107b8537b868860Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-14123799210587983921.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1241:55
     |
1241 | ...fbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
1241 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1241 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1241 |    Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2039:75
     |
2039 | ...um, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc` and 1 other; try using the variant's enum
     |
2039 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2039 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2039 | impl_decode_sol!(Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum, Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc_Enum::Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
   |
38 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:133:1
    |
133 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1051:55
     |
1051 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1051 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1051 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1051 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1686:75
     |
1686 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1686 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1686 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1686 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0433, E0609.
For more information about an error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 4 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:46:1
    |
46  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-7957524616235913807.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:74:1
    |
74  | sol! (Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7, "./abis/Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5484548746344697281.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:78:1
    |
78  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-9848690981879011509.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:155:1
    |
155 | sol! (Contract0xeeca00375bb46e60d7d6dd7887488b5694d0878a, "./abis/Contract0xeeca00375bb46e60d7d6dd7887488b5694d0878a.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:185:1
    |
185 | sol! (Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44, "./abis/Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xd5d82b6addc9027b22dca772aa68d5d74cdbdf44Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12247133649658850797.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:21:7
   |
21 | sol! (Contract0x225fa034416c12ece27cd417df447449bc1e0caf, "./abis/Contract0x225fa034416c12ece27cd417df447449bc1e0caf.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:42:1
    |
42  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:156:1
    |
156 | sol! (Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77, "./abis/Contract0xa3bcedadb23cfaa592ac42f5a18c98f98a37da77.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xe35702c0116241ad1395b435a33fc588523cccf4::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:282:1
    |
282 | sol! (Contract0xe35702c0116241ad1395b435a33fc588523cccf4, "./abis/Contract0xe35702c0116241ad1395b435a33fc588523cccf4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1163:55
     |
1163 | ...caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1163 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1163 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1163 |    Contract0x225fa034416c12ece27cd417df447449bc1e0caf(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1705:75
     |
1705 | ...um, Contract0x225fa034416c12ece27cd417df447449bc1e0caf::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x225fa034416c12ece27cd417df447449bc1e0caf`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x225fa034416c12ece27cd417df447449bc1e0caf` and 1 other; try using the variant's enum
     |
1705 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1705 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1705 | impl_decode_sol!(Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum, Contract0x225fa034416c12ece27cd417df447449bc1e0caf_Enum::Contract0x225fa034416c12ece27cd417df447449bc1e0cafCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 6 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:30:1
    |
30  | sol! (Contract0x9d58779365b067d5d3fcc6e92d237acd06f1e6a1, "./abis/Contract0x9d58779365b067d5d3fcc6e92d237acd06f1e6a1.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x9d58779365b067d5d3fcc6e92d237acd06f1e6a1Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-1621406974924294792.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:49:1
    |
49  | sol! (Contract0x94f04a210701d710b803b2133a7e16e57af385a2, "./abis/Contract0x94f04a210701d710b803b2133a7e16e57af385a2.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x94f04a210701d710b803b2133a7e16e57af385a2Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-8749126834920323213.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:79:1
    |
79  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-6906894994662952699.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:157:1
    |
157 | sol! (Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb, "./abis/Contract0xc19b1c141afb7cc97ddafec33b51088fd55fe2cb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:290:1
    |
290 | sol! (Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28, "./abis/Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-614151110624648937.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  403
  256
  244
  333
  262
  got addresses for chunk
  Error("invalid value: string \"TokenStorageLib.TokenStorage storage\", expected a valid Solidity type specifier", line: 1, column: 211), [
      "0x13e6574730e4ae1b425967db30e9d5dd5bcdde06",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"TokenStorageLib.TokenStorage storage\", expected a valid Solidity type specifier", line: 1, column: 211)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:29:1
    |
29  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-16710040737787024463.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:52:1
    |
52  | sol! (Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f, "./abis/Contract0x34cfac646f301356faa8b21e94227e3583fe3f5f.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x34cfac646f301356faa8b21e94227e3583fe3f5fCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-10752485911111853922.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x818339b4e536e707f14980219037c5046b049dd4::PairCreated`
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:59:1
   |
59 | sol! (Contract0x818339b4e536e707f14980219037c5046b049dd4, "./abis/Contract0x818339b4e536e707f14980219037c5046b049dd4.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:107:1
    |
107 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:288:1
    |
288 | sol! (Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d, "./abis/Contract0x9deb29c9a4c7a88a3c0257393b7f3335338d9a9d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (exit status: 101)
  --- stdout
  217
  250
  320
  245
  233
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:181:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:34:1
   |
34 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0609]: no field `_1` on type `&Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:111:1
    |
111 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:225:1
    |
225 | sol! (Contract0xb143c66a939d3cf9425a1afea7a424641e5778df, "./abis/Contract0xb143c66a939d3cf9425a1afea7a424641e5778df.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> Contract0xb143c66a939d3cf9425a1afea7a424641e5778dfCalls {Contract0xb143c66a939d3cf9425a1afea7a424641e5778dfCalls::NAME}`
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:900:55
    |
900 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
    |
900 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
900 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
900 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1454:75
     |
1454 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1454 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1454 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1454 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:40:1
   |
40 | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:63:1
    |
63  | sol! (Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312, "./abis/Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x197cfcb7949e14bc9bdb338b8261af9686f8e312Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-18064669449848268690.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:138:1
    |
138 | sol! (Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4, "./abis/Contract0x1ffbe925f22fca796adf2a63313b8b70b5b1a7f4.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&Contract0xc1a2706ceb8c21967d5c930c00c8ed16480f7255::PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:251:1
    |
251 | sol! (Contract0xc1a2706ceb8c21967d5c930c00c8ed16480f7255, "./abis/Contract0xc1a2706ceb8c21967d5c930c00c8ed16480f7255.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:275:1
    |
275 | sol! (Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28, "./abis/Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xf01fa088fe0f03f7b4bc91accf9af2748a1e7e28Calls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-17399246763081579586.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1107:55
     |
1107 | ...62d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1107 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1107 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1107 |    Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1776:75
     |
1776 | ...um, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d` and 1 other; try using the variant's enum
     |
1776 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1776 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1776 | impl_decode_sol!(Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum, Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d_Enum::Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 7 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:143:1
    |
143 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:38:1
    |
38  | sol! (Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d, "./abis/Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862d.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0x983e96c26782a8db500a6fb8ab47a52e1b44862dCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-12143206198996061544.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:115:1
    |
115 | sol! (Contract0x430589e576d0e1b830767574b176167db6086ebb, "./abis/Contract0x430589e576d0e1b830767574b176167db6086ebb.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated_0`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:210:1
    |
210 | sol! (Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788, "./abis/Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `_1` on type `&PairCreated_1`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:210:1
    |
210 | sol! (Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788, "./abis/Contract0xf98de75c2bc1a469c99bc33a91e1fcf8bf5d0788.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:227:1
    |
227 | sol! (Contract0xb143c66a939d3cf9425a1afea7a424641e5778df, "./abis/Contract0xb143c66a939d3cf9425a1afea7a424641e5778df.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb143c66a939d3cf9425a1afea7a424641e5778dfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-5272935965526509634.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1024:55
     |
1024 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1024 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1024 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1024 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2455:75
     |
2455 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2455 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2455 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2455 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 8 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to resolve types.
       This is likely due to an infinitely recursive type definition.
       If you believe this is a bug, please file an issue at https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:150:1
    |
150 | sol! (Contract0x020b26826c23142f2582733b2e6428ee31eaab49, "./abis/Contract0x020b26826c23142f2582733b2e6428ee31eaab49.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:41:1
    |
41  | sol! (Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc, "./abis/Contract0xc10ddeacd46146a9ca6e27467443383ee080efbc.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xc10ddeacd46146a9ca6e27467443383ee080efbcCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-2810569223137622.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:234:1
    |
234 | sol! (Contract0xb143c66a939d3cf9425a1afea7a424641e5778df, "./abis/Contract0xb143c66a939d3cf9425a1afea7a424641e5778df.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | |
    | expected `&str`, found enum constructor
    | arguments to this function are incorrect
    |
    = note:     expected reference `&'static str`
            found enum constructor `fn(NAMECall) -> ... {Contract0xb143c66a939d3cf9425a1afea7a424641e5778dfCalls::NAME}`
            the full type name has been written to '/home/shared/brontes/target/debug/deps/brontes_classifier-e74b41864672d0ca.long-type-280633730453187828.txt'
note: associated function defined here
   --> /root/.cargo/git/checkouts/alloy-core-ca1254c88b34f912/1d62185/crates/sol-types/src/errors.rs:128:12
    |
128 |     pub fn unknown_selector(name: &'static str, selector: [u8; 4]) -> Self {
    |            ^^^^^^^^^^^^^^^^
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:1100:55
     |
1100 | ...b49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
1100 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1100 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1100 |    Contract0x020b26826c23142f2582733b2e6428ee31eaab49(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-8b3d857eea08fcf5/out/bindings.rs:2610:75
     |
2610 | ...um, Contract0x020b26826c23142f2582733b2e6428ee31eaab49::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x020b26826c23142f2582733b2e6428ee31eaab49`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x020b26826c23142f2582733b2e6428ee31eaab49` and 1 other; try using the variant's enum
     |
2610 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
2610 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
2610 | impl_decode_sol!(Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum, Contract0x020b26826c23142f2582733b2e6428ee31eaab49_Enum::Contract0x020b26826c23142f2582733b2e6428ee31eaab49Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0433.
For more information about an error, try `rustc --explain E0308`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 5 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (signal: 9, SIGKILL: kill)
  --- stdout
  149
  237
  152
  1634
  327
  got addresses for chunk
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (signal: 9, SIGKILL: kill)
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:158:9
    |
158 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-2285bd8aeb8ba370/build-script-build` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
   Compiling brontes-database v0.1.0 (/home/shared/brontes/crates/brontes-database)
   Compiling brontes-types v0.1.0 (/home/shared/brontes/crates/brontes-types)
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

   Compiling brontes-core v0.1.0 (/home/shared/brontes/crates/brontes-core)
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:26:7
   |
26 | sol! (Contract0x00000000000001ad428e4906ae43d8f9852d0dd6, "./abis/Contract0x00000000000001ad428e4906ae43d8f9852d0dd6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1183:55
     |
1183 | ...dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1183 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1183 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1183 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1770:75
     |
1770 | ...um, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1770 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1770 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1770 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more information about this error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
    Blocking waiting for file lock on build directory
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
    Blocking waiting for file lock on build directory
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:30:7
   |
30 | sol! (Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f, "./abis/Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1187:55
     |
1187 | ...a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1187 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1187 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1187 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1806:75
     |
1806 | ...um, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1806 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1806 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1806 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more information about this error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1102:1
     |
1102 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 54s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1108:1
     |
1108 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 15m 36s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stdout
  170
  251
  220
  234
  289
  got addresses for chunk

  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:165:14:
  called `Result::unwrap()` on an `Err` value: BadResponse("Code: 241. DB::Exception: Memory limit (total) exceeded: would use 56.23 GiB (attempt to allocate chunk of 7722825 bytes), maximum: 55.61 GiB. OvercommitTracker decision: Query was selected to stop by OvercommitTracker. (MEMORY_LIMIT_EXCEEDED) (version 23.8.2.7 (official build))")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:26:7
   |
26 | sol! (Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f, "./abis/Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1090:55
     |
1090 | ...a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1090 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1090 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1090 |    Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1646:75
     |
1646 | ...um, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f` and 1 other; try using the variant's enum
     |
1646 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1646 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1646 | impl_decode_sol!(Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum, Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0f_Enum::Contract0xefac5dfce00cf85a90f5e742ae4aae64b0907a0fCalls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more information about this error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:907:1
    |
907 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 45s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1108:1
     |
1108 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 52s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stdout
  217
  251
  242
  255
  426
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:177:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
  --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:28:7
   |
28 | sol! (Contract0x00000000000001ad428e4906ae43d8f9852d0dd6, "./abis/Contract0x00000000000001ad428e4906ae43d8f9852d0dd6.json");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:963:55
    |
963 | ...dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
    |
963 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~
963 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(crate::StaticReturnBindings),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
    |
963 |    Contract0x00000000000001ad428e4906ae43d8f9852d0dd6(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls),
    |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1492:75
     |
1492 | ...um, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0x00000000000001ad428e4906ae43d8f9852d0dd6`
     |
help: there is an enum variant `crate::StaticBindings::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6` and 1 other; try using the variant's enum
     |
1492 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
1492 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1492 | impl_decode_sol!(Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum, Contract0x00000000000001ad428e4906ae43d8f9852d0dd6_Enum::Contract0x00000000000001ad428e4906ae43d8f9852d0dd6Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more information about this error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:961:1
    |
961 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 15m 08s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1066:1
     |
1066 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 15m 11s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stdout
  204
  246
  355
  265
  229
  got addresses for chunk

  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:165:14:
  called `Result::unwrap()` on an `Err` value: BadResponse("Code: 241. DB::Exception: Memory limit (total) exceeded: would use 56.24 GiB (attempt to allocate chunk of 7721014 bytes), maximum: 55.61 GiB. OvercommitTracker decision: Query was selected to stop by OvercommitTracker. (MEMORY_LIMIT_EXCEEDED) (version 23.8.2.7 (official build))")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1000:1
     |
1000 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 13m 41s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:991:1
    |
991 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 19s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:922:1
    |
922 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 13m 59s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1090:1
     |
1090 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 15m 37s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:991:1
    |
991 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 08s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:973:1
    |
973 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 8m 55s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:991:1
    |
991 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 8m 46s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1132:1
     |
1132 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 30s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1117:1
     |
1117 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 33s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:937:1
    |
937 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 53s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1198:1
     |
1198 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 15m 10s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1072:1
     |
1072 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 33s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: failed to parse ABI-generated tokens into a Solidity AST: expected parentheses.
       This is a bug. We would appreciate a bug report: https://github.com/alloy-rs/core/issues/new/choose
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:241:7
    |
241 | sol! (Contract0xa8b62866020970943de4f0e6fc4acf3e31636346, "./abis/Contract0xa8b62866020970943de4f0e6fc4acf3e31636346.json");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1350:55
     |
1350 | ...346(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls),
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346` and 1 other; try using the variant's enum
     |
1350 |    Contract0xa8b62866020970943de4f0e6fc4acf3e31636346(crate::StaticBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~
1350 |    Contract0xa8b62866020970943de4f0e6fc4acf3e31636346(crate::StaticReturnBindings),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
1350 |    Contract0xa8b62866020970943de4f0e6fc4acf3e31636346(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls),
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:3641:75
     |
3641 | ...um, Contract0xa8b62866020970943de4f0e6fc4acf3e31636346::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls);
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `Contract0xa8b62866020970943de4f0e6fc4acf3e31636346`
     |
help: there is an enum variant `crate::StaticBindings::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346` and 1 other; try using the variant's enum
     |
3641 | impl_decode_sol!(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum, crate::StaticBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~
3641 | impl_decode_sol!(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum, crate::StaticReturnBindings);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: an enum with a similar name exists
     |
3641 | impl_decode_sol!(Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum, Contract0xa8b62866020970943de4f0e6fc4acf3e31636346_Enum::Contract0xa8b62866020970943de4f0e6fc4acf3e31636346Calls);
     |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more information about this error, try `rustc --explain E0433`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 3 previous errors; 8 warnings emitted
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1090:1
     |
1090 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 13m 52s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1258:1
     |
1258 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 37s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1105:1
     |
1105 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 02s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1060:1
     |
1060 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 53s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stdout
  147
  200
  197
  231
  298
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:177:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1054:1
     |
1054 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 15m 17s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stdout
  195
  223
  246
  196
  321
  got addresses for chunk

  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:165:14:
  called `Result::unwrap()` on an `Err` value: BadResponse("Code: 241. DB::Exception: Memory limit (total) exceeded: would use 57.73 GiB (attempt to allocate chunk of 8371636 bytes), maximum: 55.61 GiB. OvercommitTracker decision: Query was selected to stop by OvercommitTracker. (MEMORY_LIMIT_EXCEEDED) (version 23.8.2.7 (official build))")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:955:1
    |
955 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 01s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionAborted` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionAborted` redefined here
    |
    = note: `AuctionAborted` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionClosed` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionClosed` redefined here
    |
    = note: `AuctionClosed` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `BidTooLow` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `BidTooLow` redefined here
    |
    = note: `BidTooLow` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` has no field named `minBid`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` does not have this field
    |
    = note: all struct fields are already assigned
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `&Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Uint<256, 4>`, found `u128`
    |
    = note: expected struct `alloy_sol_types::private::Uint<256, 4>`
                 found type `u128`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u128`, found `Uint<256, 4>`
    |
    = note: expected type `u128`
             found struct `alloy_sol_types::private::Uint<256, 4>`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `u128: Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:308:1
    |
308 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `u128`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price as SolTypeValue<Contract0x0b7cbee19e219050e38b419273229fd24590555a::Price>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <Proposal as SolTypeValue<Proposal>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0xe6d48bf4ee912235398b96e16db6f310c21e82cb::TokenOwnership as SolTypeValue<Contract0xe6d48bf4ee912235398b96e16db6f310c21e82cb::TokenOwnership>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
            and 317 others
    = note: required for `u128` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-2b18d29b427bcbae/03b7a39/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0063, E0277, E0308, E0428, E0560, E0609.
For more information about an error, try `rustc --explain E0063`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 13 previous errors; 8 warnings emitted
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionAborted` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionAborted` redefined here
    |
    = note: `AuctionAborted` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionClosed` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionClosed` redefined here
    |
    = note: `AuctionClosed` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `BidTooLow` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `BidTooLow` redefined here
    |
    = note: `BidTooLow` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` has no field named `minBid`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` does not have this field
    |
    = note: all struct fields are already assigned
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `&Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Uint<256, 4>`, found `u128`
    |
    = note: expected struct `alloy_sol_types::private::Uint<256, 4>`
                 found type `u128`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u128`, found `Uint<256, 4>`
    |
    = note: expected type `u128`
             found struct `alloy_sol_types::private::Uint<256, 4>`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `u128: std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:257:1
    |
257 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::borrow::Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `u128`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <ListingTerms as SolTypeValue<ListingTerms>>
              <Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::LoanTerms as SolTypeValue<Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::LoanTerms>>
              <Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::Offer as SolTypeValue<Contract0x6048c06d97ba978a203519a0d079aeaff2b4ade2::Offer>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
            and 250 others
    = note: required for `u128` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-2b18d29b427bcbae/03b7a39/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0063, E0277, E0308, E0428, E0560, E0609.
For more information about an error, try `rustc --explain E0063`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 13 previous errors; 8 warnings emitted
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stdout
  233
  262
  206
  217
  225
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:177:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionAborted` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionAborted` redefined here
    |
    = note: `AuctionAborted` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `AuctionClosed` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `AuctionClosed` redefined here
    |
    = note: `AuctionClosed` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `BidTooLow` is defined multiple times
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `BidTooLow` redefined here
    |
    = note: `BidTooLow` must be defined only once in the type namespace of this module
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing fields `reason` and `refunded` in initializer of `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::AuctionAborted`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `reason` and `refunded`
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` has no field named `minBid`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow` does not have this field
    |
    = note: all struct fields are already assigned
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `&Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Uint<256, 4>`, found `u128`
    |
    = note: expected struct `alloy_sol_types::private::Uint<256, 4>`
                 found type `u128`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `minBid` on type `Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9::BidTooLow`
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u128`, found `Uint<256, 4>`
    |
    = note: expected type `u128`
             found struct `alloy_sol_types::private::Uint<256, 4>`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `u128: Borrow<alloy_sol_types::private::Uint<256, 4>>` is not satisfied
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:280:1
    |
280 | sol! (Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9, "./abis/Contract0xbb37a88508d464a1bb54cf627d05e39883ae0ef9.json");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<alloy_sol_types::private::Uint<256, 4>>` is not implemented for `u128`
    |
    = help: the following other types implement trait `SolTypeValue<T>`:
              <bool as SolTypeValue<alloy_sol_types::sol_data::Bool>>
              <Vec<T> as SolTypeValue<alloy_sol_types::sol_data::Array<U>>>
              <AssetConfigInput as SolTypeValue<AssetConfigInput>>
              <ExchangeRateSnapshot as SolTypeValue<ExchangeRateSnapshot>>
              <FeeStructure as SolTypeValue<FeeStructure>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::Order>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::OrderRFQ>>
              <Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription as SolTypeValue<Contract0x1111111254eeb25477b68fb85ed929f73a960582::SwapDescription>>
            and 302 others
    = note: required for `u128` to implement `SolTypeValue<alloy_sol_types::sol_data::Uint<256>>`
note: required by a bound in `alloy_sol_types::SolType::tokenize`
   --> /root/.cargo/git/checkouts/alloy-core-2b18d29b427bcbae/03b7a39/crates/sol-types/src/types/ty.rs:154:29
    |
154 |     fn tokenize<E: ?Sized + SolTypeValue<Self>>(rust: &E) -> Self::TokenType<'_> {
    |                             ^^^^^^^^^^^^^^^^^^ required by this bound in `SolType::tokenize`
    = note: this error originates in the macro `sol` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0063, E0277, E0308, E0428, E0560, E0609.
For more information about an error, try `rustc --explain E0063`.
warning: `brontes-classifier` (lib) generated 8 warnings
error: could not compile `brontes-classifier` (lib) due to 13 previous errors; 8 warnings emitted
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1018:1
     |
1018 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 48s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:556:10:
  called `Result::unwrap()` on an `Err` value: BadResponse("Code: 241. DB::Exception: Memory limit (total) exceeded: would use 56.12 GiB (attempt to allocate chunk of 4196152 bytes), maximum: 55.61 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero.: (while reading column website_url): (while reading from part /var/lib/clickhouse/store/322/3224efb6-7919-411b-a089-218fdb4ecd87/all_1_332552_4651_37264/ in table ethereum.addresses (3224efb6-7919-411b-a089-218fdb4ecd87) located on disk default of type local, from mark 2193 with max_rows_to_read = 8192): While executing MergeTreeSequentialSource. (MEMORY_LIMIT_EXCEEDED) (version 23.8.2.7 (official build))")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: BadResponse("Code: 241. DB::Exception: Memory limit (total) exceeded: would use 56.04 GiB (attempt to allocate chunk of 16777216 bytes), maximum: 55.61 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero.: While executing ReplacingSorted. (MEMORY_LIMIT_EXCEEDED) (version 23.8.2.7 (official build))")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: BadResponse("Code: 241. DB::Exception: Memory limit (total) exceeded: would use 56.05 GiB (attempt to allocate chunk of 8356296 bytes), maximum: 55.61 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero.: (avg_value_size_hint = 1024, avg_chars_size = 1219.2, limit = 3525): (while reading column abi): (while reading from part /var/lib/clickhouse/store/dba/dbad630a-c5e4-4b3e-8272-79784836b76e/all_1_7272_399_21/ in table ethereum.contracts (dbad630a-c5e4-4b3e-8272-79784836b76e) located on disk default of type local, from mark 94 with max_rows_to_read = 3525): While executing MergeTreeSequentialSource. (MEMORY_LIMIT_EXCEEDED) (version 23.8.2.7 (official build))")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: Network(hyper::Error(Io, Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" }))
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: Network(hyper::Error(Io, Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" }))
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: Network(hyper::Error(Io, Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" }))
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: Network(hyper::Error(Io, Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" }))
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: Network(hyper::Error(Io, Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" }))
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:551:10:
  called `Result::unwrap()` on an `Err` value: BadResponse("Code: 241. DB::Exception: Memory limit (total) exceeded: would use 56.33 GiB (attempt to allocate chunk of 4379248 bytes), maximum: 55.61 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero.: While executing ReplacingSorted. (MEMORY_LIMIT_EXCEEDED) (version 23.8.2.7 (official build))")
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stdout
  249
  208
  205
  268
  241
  got addresses for chunk
  Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984), [
      "0xf56dfc2f506f3fbe85d33fd70653d7bac0907d56",
  ]

  --- stderr
  thread '<unnamed>' panicked at crates/brontes-classifier/build.rs:177:22:
  called `Result::unwrap()` on an `Err` value: Error("invalid value: string \"IBurnRedeemCore.ValidationType\", expected a valid Solidity type specifier", line: 1, column: 1984)
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1033:1
     |
1033 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 43s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:967:1
    |
967 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 38s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:907:1
    |
907 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 17s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
   --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:964:1
    |
964 | _=> panic!("no binding match found")}
    | ^
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 14m 43s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unreachable pattern
    --> /home/shared/brontes/target/debug/build/brontes-classifier-f873492d33538180/out/bindings.rs:1048:1
     |
1048 | _=> panic!("no binding match found")}
     | ^
     |
     = note: `#[warn(unreachable_patterns)]` on by default

warning: method `try_classify_flashloans` is never used
   --> crates/brontes-classifier/src/classifier.rs:360:8
    |
33  | impl Classifier {
    | --------------- method in this implementation
...
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling brontes-inspect v0.1.0 (/home/shared/brontes/crates/brontes-inspect)
warning: unused import: `Stream`
  --> crates/brontes-inspect/src/composer.rs:17:26
   |
17 | use futures::{FutureExt, Stream};
   |                          ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Rational`, `num::conversion::traits::RoundingFrom`, `rounding_modes::RoundingMode`
  --> crates/brontes-inspect/src/sandwich.rs:13:17
   |
13 | use malachite::{num::conversion::traits::RoundingFrom, rounding_modes::RoundingMode, Rational};
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^

   Compiling brontes v0.1.0 (/home/shared/brontes/crates/bin)
warning: `brontes-inspect` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-inspect` to apply 2 suggestions)
warning: unused import: `StreamExt`
  --> crates/bin/src/block_inspector.rs:14:40
   |
14 | use futures::{join, Future, FutureExt, StreamExt};
   |                                        ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (lib) generated 1 warning
warning: `brontes-classifier` (lib) generated 11 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
warning: unused import: `collections::HashMap`
 --> crates/bin/src/main.rs:2:5
  |
2 |     collections::HashMap,
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `brontes` (bin "brontes") generated 1 warning (run `cargo fix --bin "brontes"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 9m 27s
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (lib) generated 9 warnings (run `cargo fix --lib -p brontes-classifier` to apply 6 suggestions)
error: could not compile `brontes-classifier` (lib); 9 warnings emitted

Caused by:
  process didn't exit successfully: `/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name brontes_classifier --edition=2021 crates/brontes-classifier/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C codegen-units=16 -C debuginfo=2 --cfg 'feature="server"' --cfg 'feature="test_run"' -C metadata=c89843282345613f -C extra-filename=-c89843282345613f --out-dir /home/shared/brontes/target/debug/deps -C incremental=/home/shared/brontes/target/debug/incremental -L dependency=/home/shared/brontes/target/debug/deps --extern alloy_dyn_abi=/home/shared/brontes/target/debug/deps/liballoy_dyn_abi-f379cb651abaf166.rmeta --extern alloy_sol_types=/home/shared/brontes/target/debug/deps/liballoy_sol_types-caaf85c9d049f623.rmeta --extern brontes_core=/home/shared/brontes/target/debug/deps/libbrontes_core-0a771d6a80d89b1e.rmeta --extern brontes_database=/home/shared/brontes/target/debug/deps/libbrontes_database-a03073a7f346df10.rmeta --extern brontes_macros=/home/shared/brontes/target/debug/deps/libbrontes_macros-c8277ca016378f18.so --extern brontes_types=/home/shared/brontes/target/debug/deps/libbrontes_types-9fd10fe6b6b57ed1.rmeta --extern hex_literal=/home/shared/brontes/target/debug/deps/libhex_literal-4c6dcf18196dff8b.rmeta --extern itertools=/home/shared/brontes/target/debug/deps/libitertools-06cfbf20318ad594.rmeta --extern lazy_static=/home/shared/brontes/target/debug/deps/liblazy_static-7dbffb3972297545.rmeta --extern malachite=/home/shared/brontes/target/debug/deps/libmalachite-04cc53f3f3aeaa99.rmeta --extern once_cell=/home/shared/brontes/target/debug/deps/libonce_cell-8142b7d982809b17.rmeta --extern parking_lot=/home/shared/brontes/target/debug/deps/libparking_lot-fc533a6d6609afd7.rmeta --extern paste=/home/shared/brontes/target/debug/deps/libpaste-938fb0da6277752f.so --extern phf=/home/shared/brontes/target/debug/deps/libphf-19d2e5f227c90890.rmeta --extern rayon=/home/shared/brontes/target/debug/deps/librayon-cf744265b44d91be.rmeta --extern reth_primitives=/home/shared/brontes/target/debug/deps/libreth_primitives-0b0d80c6b4752659.rmeta --extern reth_rpc_types=/home/shared/brontes/target/debug/deps/libreth_rpc_types-6a80853863ba466b.rmeta --extern serde_json=/home/shared/brontes/target/debug/deps/libserde_json-ac962bf4194fb807.rmeta --extern tracing=/home/shared/brontes/target/debug/deps/libtracing-23b3ac0e7021933b.rmeta -L native=/home/shared/brontes/target/debug/build/ring-ca02007ce0ab3a1f/out -L native=/home/shared/brontes/target/debug/build/c-kzg-771d6245ea5a3c5e/out -L native=/home/shared/brontes/target/debug/build/blst-fb5a3c33baca8c21/out -L native=/home/shared/brontes/target/debug/build/c-kzg-7232f1d03dca1693/out -L native=/home/shared/brontes/target/debug/build/secp256k1-sys-573ac72a92105efc/out -L native=/home/shared/brontes/target/debug/build/zstd-sys-7313a009d97256e1/out -L native=/home/shared/brontes/target/debug/build/reth-mdbx-sys-57b4c0ff6203527b/out -L native=/home/shared/brontes/target/debug/build/clickhouse-rs-cityhash-sys-4a83bf330a4e6825/out -L native=/home/shared/brontes/target/debug/build/lz4-sys-fa81b4d3b488270a/out -L native=/home/shared/brontes/target/debug/build/c-kzg-300ca982e8e7c368/out` (signal: 9, SIGKILL: kill)
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:92:1
   |
92 | action_dispatch!(UniswapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
  --> crates/brontes-classifier/src/impls/uniswap_v2.rs:93:1
   |
93 | action_dispatch!(SushiSwapV2Classifier, V2SwapImpl, V2BurnImpl, V2MintImpl);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
   |
   = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
   = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
   = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
   = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: suffixes on a tuple index are invalid
   --> crates/brontes-classifier/src/impls/uniswap_v3.rs:137:1
    |
137 | action_dispatch!(UniswapV3Classifier, V3SwapImpl, V3BurnImpl, V3MintImpl, V3CollectImpl);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid suffix `usize`
    |
    = help: `usize` is *temporarily* accepted on tuple index fields as it was incorrectly accepted on stable for a few releases
    = help: on proc macros, you'll want to use `syn::Index::from` or `proc_macro::Literal::*_unsuffixed` for code that will desugar to tuple field access
    = help: see issue #60210 <https://github.com/rust-lang/rust/issues/60210> for more information
    = note: this warning originates in the macro `action_dispatch` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `hash_map::Entry`
 --> crates/brontes-classifier/src/classifier.rs:1:24
  |
1 | use std::collections::{hash_map::Entry, HashMap, HashSet};
  |                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `TransactionTrace`
  --> crates/brontes-classifier/src/classifier.rs:16:29
   |
16 |     trace::parity::{Action, TransactionTrace},
   |                             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::info`
  --> crates/brontes-classifier/src/classifier.rs:19:5
   |
19 | use tracing::info;
   |     ^^^^^^^^^^^^^

warning: unused import: `IntoAction`
  --> crates/brontes-classifier/src/classifier.rs:21:13
   |
21 | use crate::{IntoAction, StaticReturnBindings, PROTOCOL_ADDRESS_MAPPING};
   |             ^^^^^^^^^^

warning: unused import: `UniswapV3Events`
  --> crates/brontes-classifier/src/impls/uniswap_v3.rs:13:37
   |
13 |         swapReturn, UniswapV3Calls, UniswapV3Events,
   |                                     ^^^^^^^^^^^^^^^

warning: unused variable: `tree`
   --> crates/brontes-classifier/src/classifier.rs:360:39
    |
360 |     fn try_classify_flashloans(&self, tree: &mut TimeTree<Actions>) {
    |                                       ^^^^ help: if this is intentional, prefix it with an underscore: `_tree`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `brontes-classifier` (build script) generated 5 warnings
warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
error: failed to run custom build command for `brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)`

Caused by:
  process didn't exit successfully: `/home/shared/brontes/target/debug/build/brontes-classifier-8c5b72b35c6492df/build-script-build` (exit status: 101)
  --- stderr
  thread 'main' panicked at crates/brontes-classifier/build.rs:497:37:
  CLICKHOUSE_URL not found in .env: NotPresent
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: /home/shared/brontes/crates/alloy-etherscan/Cargo.toml: unused manifest key: dependencies.alloy-sol-types.package
warning: methods `get_contract_metrics` and `get_function_metrics` are never used
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:19:19
   |
17 | impl DynamicContractMetrics {
   | --------------------------- methods in this implementation
18 |     /// Returns existing or initializes a new instance of [ContractMetrics]
19 |     pub(crate) fn get_contract_metrics(&mut self, _address: String) -> &mut ContractMetrics {
   |                   ^^^^^^^^^^^^^^^^^^^^
...
25 |     pub(crate) fn get_function_metrics(
   |                   ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:48:16
   |
46 | pub(crate) struct ContractMetrics {
   |                   --------------- field in this struct
47 |     /// The number of times the contract has been called
48 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `times_called` is never read
  --> crates/brontes-metrics/src/dyn_contracts/mod.rs:55:16
   |
53 | pub(crate) struct ContractFunctionMetrics {
   |                   ----------------------- field in this struct
54 |     /// The number of times the function on the contract has been called
55 |     pub(crate) times_called: Counter,
   |                ^^^^^^^^^^^^
   |
   = note: `ContractFunctionMetrics` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `brontes-metrics` (lib) generated 3 warnings
warning: unused imports: `JsonRpcClient`, `ProviderError`, `providers::JsonRpcError`
 --> crates/brontes-core/src/decoding/mod.rs:6:21
  |
6 |     prelude::{Http, JsonRpcClient, Middleware, Provider, ProviderError},
  |                     ^^^^^^^^^^^^^                        ^^^^^^^^^^^^^
7 |     providers::JsonRpcError,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `RethResult`
  --> crates/brontes-core/src/decoding/mod.rs:12:34
   |
12 | use reth_interfaces::{RethError, RethResult};
   |                                  ^^^^^^^^^^

warning: unused import: `ReceiptProvider`
  --> crates/brontes-core/src/decoding/mod.rs:14:68
   |
14 | use reth_provider::{BlockIdReader, BlockNumReader, HeaderProvider, ReceiptProvider};
   |                                                                    ^^^^^^^^^^^^^^^

warning: unused import: `reth_primitives::Address`
 --> crates/brontes-core/src/decoding/vm_linker.rs:2:5
  |
2 | use reth_primitives::Address;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `trace`
  --> crates/brontes-core/src/decoding/vm_linker.rs:46:40
   |
46 |         .filter_map(|(mut instruction, trace)| {
   |                                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_trace`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `ethers_core::types::Chain`
  --> crates/brontes-classifier/build.rs:13:5
   |
13 | use ethers_core::types::Chain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `IntoParallelRefIterator`
  --> crates/brontes-classifier/build.rs:16:41
   |
16 | use rayon::iter::{IntoParallelIterator, IntoParallelRefIterator, ParallelIterator};
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/brontes-classifier/build.rs:154:9
    |
154 |     let mut protocol_abis = {
    |         ----^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: constant `DATA_QUERY` is never used
  --> crates/brontes-classifier/build.rs:31:7
   |
31 | const DATA_QUERY: &str = r#"
   |       ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `LOCAL_QUERY` is never used
  --> crates/brontes-classifier/build.rs:47:7
   |
47 | const LOCAL_QUERY: &str = r#"
   |       ^^^^^^^^^^^

warning: `brontes-core` (lib) generated 5 warnings (run `cargo fix --lib -p brontes-core` to apply 5 suggestions)
warning: `brontes-classifier` (build script) generated 5 warnings
   Compiling brontes-classifier v0.1.0 (/home/shared/brontes/crates/brontes-classifier)
warning: unused import: `U256`
  --> crates/brontes-database/src/database/mod.rs:13:40
   |
13 | use reth_primitives::{Address, TxHash, U256};
   |                                        ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
  --> crates/brontes-database/src/database/mod.rs:14:40
   |
14 | use sorella_db_databases::clickhouse::{self, ClickhouseClient};
   |                                        ^^^^

warning: `brontes-database` (lib) generated 2 warnings (run `cargo fix --lib -p brontes-database` to apply 2 suggestions)
