{
  "abi": [
    {
      "type": "function",
      "name": "LIQUIDITY",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VAULT_ID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "LogLiquidate",
      "inputs": [
        {
          "name": "liquidator_",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "colAmt_",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "debtAmt_",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "to_",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "function",
      "name": "absorb",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        { "name": "debtAmt_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "colPerUnitDebt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token0ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token1ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "to_", "type": "address", "internalType": "address" },
        { "name": "absorb_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        { "name": "actualDebt_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "actualColShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "token0Col_", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Col_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidatePerfect",
      "inputs": [
        { "name": "debtAmt_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "colPerUnitDebt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token0ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token1ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "to_", "type": "address", "internalType": "address" },
        { "name": "absorb_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        { "name": "actualDebt_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "actualColShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "token0Col_", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Col_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        {
          "name": "token0DebtAmt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token1DebtAmt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "debtSharesMin_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "colPerUnitDebt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token0ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token1ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "to_", "type": "address", "internalType": "address" },
        { "name": "absorb_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        {
          "name": "actualDebtShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "actualColShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "token0Col_", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Col_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidatePerfect",
      "inputs": [
        { "name": "debtShares_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "token0DebtAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token1DebtAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "colPerUnitDebt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token0ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token1ColAmtPerUnitShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "to_", "type": "address", "internalType": "address" },
        { "name": "absorb_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        {
          "name": "actualDebtShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "token0Debt_", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Debt_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "actualColShares_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "token0Col_", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Col_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "constantsView",
      "inputs": [],
      "outputs": [
        {
          "name": "constantsView_",
          "type": "tuple",
          "internalType": "struct IFluidVaultT1.ConstantViews",
          "components": [
            {
              "name": "liquidity",
              "type": "address",
              "internalType": "address"
            },
            { "name": "factory", "type": "address", "internalType": "address" },
            {
              "name": "adminImplementation",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "secondaryImplementation",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "supplyToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "borrowToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "supplyDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "borrowDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            { "name": "vaultId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquiditySupplyExchangePriceSlot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "liquidityBorrowExchangePriceSlot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "liquidityUserSupplySlot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "liquidityUserBorrowSlot",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "fetchLatestPosition",
      "inputs": [
        { "name": "positionTick_", "type": "int256", "internalType": "int256" },
        {
          "name": "positionTickId_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "positionRawDebt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "tickData_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "int256", "internalType": "int256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        { "name": "debtAmt_", "type": "uint256", "internalType": "uint256" },
        {
          "name": "colPerUnitDebt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "to_", "type": "address", "internalType": "address" },
        { "name": "absorb_", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        {
          "name": "actualDebtAmt_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "actualColAmt_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "operate",
      "inputs": [
        { "name": "nftId_", "type": "uint256", "internalType": "uint256" },
        { "name": "newCol_", "type": "int256", "internalType": "int256" },
        { "name": "newDebt_", "type": "int256", "internalType": "int256" },
        { "name": "to_", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "int256", "internalType": "int256" },
        { "name": "", "type": "int256", "internalType": "int256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "readFromStorage",
      "inputs": [
        { "name": "slot_", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        { "name": "result_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rebalance",
      "inputs": [],
      "outputs": [
        { "name": "supplyAmt_", "type": "int256", "internalType": "int256" },
        { "name": "borrowAmt_", "type": "int256", "internalType": "int256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "updateExchangePrices",
      "inputs": [
        {
          "name": "vaultVariables2_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "liqSupplyExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liqBorrowExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "vaultSupplyExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "vaultBorrowExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateExchangePricesOnStorage",
      "inputs": [],
      "outputs": [
        {
          "name": "liqSupplyExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liqBorrowExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "vaultSupplyExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "vaultBorrowExPrice_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "error",
      "name": "FluidLiquidateResult",
      "inputs": [
        {
          "name": "colLiquidated",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "debtLiquidated",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "LIQUIDITY()": "2861c7d1",
    "VAULT_ID()": "540acabc",
    "absorb()": "ebd93ac6",
    "constantsView()": "b7791bf2",
    "fetchLatestPosition(int256,uint256,uint256,uint256)": "22348cc7",
    "liquidate(uint256,uint256,address,bool)": "8433ea22",
    "operate(uint256,int256,int256,address)": "032d2276",
    "readFromStorage(bytes32)": "b5c736e4",
    "rebalance()": "7d7c2a1c",
    "updateExchangePrices(uint256)": "09f0d8cb",
    "updateExchangePricesOnStorage()": "02161887"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"colLiquidated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtLiquidated\",\"type\":\"uint256\"}],\"name\":\"FluidLiquidateResult\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LIQUIDITY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"absorb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"constantsView\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"secondaryImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"supplyDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"borrowDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"liquiditySupplyExchangePriceSlot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"liquidityBorrowExchangePriceSlot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"liquidityUserSupplySlot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"liquidityUserBorrowSlot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IFluidVaultT1.ConstantViews\",\"name\":\"constantsView_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"positionTick_\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"positionTickId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionRawDebt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tickData_\",\"type\":\"uint256\"}],\"name\":\"fetchLatestPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtAmt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"colPerUnitDebt_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"absorb_\",\"type\":\"bool\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualDebtAmt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualColAmt_\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId_\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"newCol_\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"newDebt_\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"operate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot_\",\"type\":\"bytes32\"}],\"name\":\"readFromStorage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"supplyAmt_\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"borrowAmt_\",\"type\":\"int256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultVariables2_\",\"type\":\"uint256\"}],\"name\":\"updateExchangePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liqSupplyExPrice_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqBorrowExPrice_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultSupplyExPrice_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBorrowExPrice_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateExchangePricesOnStorage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liqSupplyExPrice_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqBorrowExPrice_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultSupplyExPrice_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBorrowExPrice_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"LIQUIDITY()\":{\"notice\":\"returns the liquidity contract address\"},\"VAULT_ID()\":{\"notice\":\"returns the vault id\"},\"constantsView()\":{\"notice\":\"returns all Vault constants\"},\"fetchLatestPosition(int256,uint256,uint256,uint256)\":{\"notice\":\"fetches the latest user position after a liquidation\"},\"readFromStorage(bytes32)\":{\"notice\":\"reads uint256 data `result_` from storage at a bytes32 storage `slot_` key.\"},\"updateExchangePrices(uint256)\":{\"notice\":\"calculates the updated vault exchange prices\"},\"updateExchangePricesOnStorage()\":{\"notice\":\"calculates the updated vault exchange prices and writes them to storage\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocols/vault/interfaces/iVaultT1.sol\":\"IFluidVaultT1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/src/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"contracts/protocols/vault/interfaces/iVaultT1.sol\":{\"keccak256\":\"0x447e05743da212ce720baea2fabb6191ed1a7f3d1e737d4b1ce9bdcdd268d398\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d23261153acce83a4a6e93087db1efdc772bc996553ade2a15c94e74d274196\",\"dweb:/ipfs/QmRj8m9tSrqx3NMUkDRin1PRZzfxg1SZ5ReDiETTvGe3oG\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.21+commit.d9974bed" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "colLiquidated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "debtLiquidated",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "FluidLiquidateResult"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LIQUIDITY",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VAULT_ID",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "absorb"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "constantsView",
          "outputs": [
            {
              "internalType": "struct IFluidVaultT1.ConstantViews",
              "name": "constantsView_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "liquidity",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "adminImplementation",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "secondaryImplementation",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "supplyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "borrowToken",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "supplyDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "borrowDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "liquiditySupplyExchangePriceSlot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "liquidityBorrowExchangePriceSlot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "liquidityUserSupplySlot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "liquidityUserBorrowSlot",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "positionTick_",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "positionTickId_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionRawDebt_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tickData_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "fetchLatestPosition",
          "outputs": [
            { "internalType": "int256", "name": "", "type": "int256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtAmt_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "colPerUnitDebt_",
              "type": "uint256"
            },
            { "internalType": "address", "name": "to_", "type": "address" },
            { "internalType": "bool", "name": "absorb_", "type": "bool" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "actualDebtAmt_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actualColAmt_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "nftId_", "type": "uint256" },
            { "internalType": "int256", "name": "newCol_", "type": "int256" },
            { "internalType": "int256", "name": "newDebt_", "type": "int256" },
            { "internalType": "address", "name": "to_", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "operate",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "int256", "name": "", "type": "int256" },
            { "internalType": "int256", "name": "", "type": "int256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot_", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "readFromStorage",
          "outputs": [
            { "internalType": "uint256", "name": "result_", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "rebalance",
          "outputs": [
            {
              "internalType": "int256",
              "name": "supplyAmt_",
              "type": "int256"
            },
            { "internalType": "int256", "name": "borrowAmt_", "type": "int256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultVariables2_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "updateExchangePrices",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liqSupplyExPrice_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liqBorrowExPrice_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultSupplyExPrice_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBorrowExPrice_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateExchangePricesOnStorage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liqSupplyExPrice_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liqBorrowExPrice_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultSupplyExPrice_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBorrowExPrice_",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": {
        "kind": "user",
        "methods": {
          "LIQUIDITY()": { "notice": "returns the liquidity contract address" },
          "VAULT_ID()": { "notice": "returns the vault id" },
          "constantsView()": { "notice": "returns all Vault constants" },
          "fetchLatestPosition(int256,uint256,uint256,uint256)": {
            "notice": "fetches the latest user position after a liquidation"
          },
          "readFromStorage(bytes32)": {
            "notice": "reads uint256 data `result_` from storage at a bytes32 storage `slot_` key."
          },
          "updateExchangePrices(uint256)": {
            "notice": "calculates the updated vault exchange prices"
          },
          "updateExchangePricesOnStorage()": {
            "notice": "calculates the updated vault exchange prices and writes them to storage"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/solmate/lib/ds-test/src/",
        "erc4626-tests/=lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/src/",
        "solmate/=lib/solmate/"
      ],
      "optimizer": { "enabled": true, "runs": 10000000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "contracts/protocols/vault/interfaces/iVaultT1.sol": "IFluidVaultT1"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/protocols/vault/interfaces/iVaultT1.sol": {
        "keccak256": "0x447e05743da212ce720baea2fabb6191ed1a7f3d1e737d4b1ce9bdcdd268d398",
        "urls": [
          "bzz-raw://0d23261153acce83a4a6e93087db1efdc772bc996553ade2a15c94e74d274196",
          "dweb:/ipfs/QmRj8m9tSrqx3NMUkDRin1PRZzfxg1SZ5ReDiETTvGe3oG"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 236
}
