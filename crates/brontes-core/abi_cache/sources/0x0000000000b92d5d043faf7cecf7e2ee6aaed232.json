{"expiry":1699526945,"data":[{"SourceCode":{"language":"Solidity","sources":{"contracts/matchingPolicies/SafeCollectionBidPolicyERC721.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {Order, AssetType} from \"../lib/OrderStructs.sol\";\nimport {IMatchingPolicy} from \"../interfaces/IMatchingPolicy.sol\";\n\n/**\n * @title SafeCollectionBidPolicyERC721\n * @dev Policy for matching orders where buyer will purchase any NON-SUSPICIOUS token from a collection\n */\ncontract SafeCollectionBidPolicyERC721 is IMatchingPolicy {\n    function canMatchMakerAsk(Order calldata makerAsk, Order calldata takerBid)\n        external\n        pure\n        override\n        returns (\n            bool,\n            uint256,\n            uint256,\n            uint256,\n            AssetType\n        )\n    {\n        revert(\"Cannot be matched\");\n    }\n\n    function canMatchMakerBid(Order calldata makerBid, Order calldata takerAsk)\n        external\n        pure\n        override\n        returns (\n            bool,\n            uint256,\n            uint256,\n            uint256,\n            AssetType\n        )\n    {\n        return (\n            (makerBid.side != takerAsk.side) &&\n            (makerBid.paymentToken == takerAsk.paymentToken) &&\n            (makerBid.collection == takerAsk.collection) &&\n            (makerBid.extraParams.length > 0 && makerBid.extraParams[0] == \"\\x01\") &&\n            (takerAsk.extraParams.length > 0 && takerAsk.extraParams[0] == \"\\x01\") &&\n            (makerBid.amount == 1) &&\n            (takerAsk.amount == 1) &&\n            (makerBid.matchingPolicy == takerAsk.matchingPolicy) &&\n            (makerBid.price == takerAsk.price),\n            makerBid.price,\n            takerAsk.tokenId,\n            1,\n            AssetType.ERC721\n        );\n    }\n}\n"},"contracts/lib/OrderStructs.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nenum Side { Buy, Sell }\nenum SignatureVersion { Single, Bulk }\nenum AssetType { ERC721, ERC1155 }\n\nstruct Fee {\n    uint16 rate;\n    address payable recipient;\n}\n\nstruct Order {\n    address trader;\n    Side side;\n    address matchingPolicy;\n    address collection;\n    uint256 tokenId;\n    uint256 amount;\n    address paymentToken;\n    uint256 price;\n    uint256 listingTime;\n    /* Order expiration timestamp - 0 for oracle cancellations. */\n    uint256 expirationTime;\n    Fee[] fees;\n    uint256 salt;\n    bytes extraParams;\n}\n\nstruct Input {\n    Order order;\n    uint8 v;\n    bytes32 r;\n    bytes32 s;\n    bytes extraSignature;\n    SignatureVersion signatureVersion;\n    uint256 blockNumber;\n}\n\nstruct Execution {\n  Input sell;\n  Input buy;\n}\n"},"contracts/interfaces/IMatchingPolicy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {Order, AssetType} from \"../lib/OrderStructs.sol\";\n\ninterface IMatchingPolicy {\n    function canMatchMakerAsk(Order calldata makerAsk, Order calldata takerBid)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256,\n            uint256,\n            AssetType\n        );\n\n    function canMatchMakerBid(Order calldata makerBid, Order calldata takerAsk)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256,\n            uint256,\n            AssetType\n        );\n}\n"}},"settings":{"libraries":{},"metadata":{"bytecodeHash":"none"},"optimizer":{"enabled":true,"runs":800},"outputSelection":{"*":{"*":["evm.bytecode","evm.deployedBytecode","devdoc","userdoc","metadata","abi"]}}}},"ABI":"[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"takerBid\",\"type\":\"tuple\"}],\"name\":\"canMatchMakerAsk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"makerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"takerAsk\",\"type\":\"tuple\"}],\"name\":\"canMatchMakerBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"SafeCollectionBidPolicyERC721","CompilerVersion":"v0.8.17+commit.8df45f5f","OptimizationUsed":1,"Runs":800,"ConstructorArguments":"0x","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":0,"SwarmSource":""}]}