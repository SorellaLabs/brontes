openapi: 3.0.3
info:
  title: Relay API
  description: |
    API specification for MEV-Boost PBS relays.
  version: dev
  contact:
    name: GitHub Repository
    url: 'https://github.com/flashbots/relay-specs'
  license:
    name: CC0-1.0
    url: 'https://creativecommons.org/publicdomain/zero/1.0/'
servers:
  - url: '{server_url}'
    variables:
      server_url:
        description: Relay URL
        default: 'http://localhost:18550'
tags:
  - name: Builder
    description: Set of endpoints to interact with an external block builder.
  - name: Data
    description: Set of endpoints to provide data about the relay.
paths:
  /relay/v1/builder/validators:
    get:
      operationId: getValidators
      summary: |
        Get a list of validator registrations for validators scheduled to propose
        in the current and next epoch.
      description: |
        * Used by builders to know when to submit bids for an upcoming proposal.

        * Returns an array of validator registrations for the current and next epoch.

        * Each entry includes a slot and the validator with assigned duty.

        * Slots without a registered validator are omitted.
      tags:
        - Builder
      responses:
        '200':
          description: Success response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    slot:
                      type: string
                      example: '1'
                    validator_index:
                      type: string
                      example: '1'
                    entry:
                      type: object
                      description: The `SignedValidatorRegistration` object from the Builder API specification.
                      properties:
                        message:
                          type: object
                          description: The `ValidatorRegistration` object from the Builder API specification.
                          properties:
                            fee_recipient:
                              description: Address to receive fees from the block.
                              type: string
                              format: hex
                              example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                              pattern: '^0x[a-fA-F0-9]{40}$'
                            gas_limit:
                              description: Preferred gas limit of validator.
                              type: string
                              example: '1'
                            timestamp:
                              description: Unix timestamp of registration.
                              type: string
                              example: '1'
                            pubkey:
                              description: BLS public key of validator.
                              type: string
                              format: hex
                              pattern: '^0x[a-fA-F0-9]{96}$'
                              example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                        signature:
                          type: string
                          format: hex
                          pattern: '^0x[a-fA-F0-9]{192}$'
                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
  /relay/v1/builder/blocks:
    post:
      operationId: submitBlock
      summary: Submit a new block to the relay.
      description: |
        * Blocks can be submitted as JSON or SSZ, and optionally GZIP encoded. To be
          clear, there are four options: JSON, JSON+GZIP, SSZ, SSZ+GZIP. If JSON, the
          content type should be `application/json`. If SSZ, the content type should
          be `application/octet-stream`.

        * The relay will simulate the block to verify properties and proposer
          payment in the payment transaction from builder to proposer
          `fee_recipient` at the end of block.

        * For accountability, builder signature is over the SSZ encoded `message`.

        * The `message`, which does not include the transactions, will be made
          public via the data API, allowing anyone to verify the builder signature.

        * Any new submission by a builder will overwrite a previous one by the same
          `builder_pubkey`, even if it is less profitable.
      tags:
        - Builder
      parameters:
        - name: cancellations
          in: query
          required: false
          description: 'If set to 1, opt into bid cancellations.'
          schema:
            type: string
            example: '1'
      requestBody:
        description: A signed bid with an execution payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
                  properties:
                    slot:
                      type: string
                      example: '1'
                    parent_hash:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    block_hash:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    builder_pubkey:
                      type: string
                      format: hex
                      pattern: '^0x[a-fA-F0-9]{96}$'
                      description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                      example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                    proposer_fee_recipient:
                      type: string
                      format: hex
                      description: An address on the execution (Ethereum 1) network.
                      example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                      pattern: '^0x[a-fA-F0-9]{40}$'
                    gas_limit:
                      type: string
                      example: '1'
                    gas_used:
                      type: string
                      example: '1'
                    value:
                      type: string
                      example: '1'
                execution_payload:
                  oneOf:
                    - allOf:
                        - type: object
                          description: 'The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.'
                          properties:
                            parent_hash:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            fee_recipient:
                              type: string
                              format: hex
                              description: An address on the execution (Ethereum 1) network.
                              example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                              pattern: '^0x[a-fA-F0-9]{40}$'
                            state_root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            receipts_root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            logs_bloom:
                              type: string
                              format: hex
                              example: '0x
                              pattern: '^0x[a-fA-F0-9]{512}$'
                            prev_randao:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            block_number:
                              type: string
                              example: '1'
                            gas_limit:
                              type: string
                              example: '1'
                            gas_used:
                              type: string
                              example: '1'
                            timestamp:
                              type: string
                              example: '1'
                            extra_data:
                              type: string
                              format: hex
                              description: Extra data on the execution (Ethereum 1) network.
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{0,64}$'
                            base_fee_per_gas:
                              type: string
                              example: '1'
                            block_hash:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                        - type: object
                          properties:
                            transactions:
                              type: array
                              items:
                                type: string
                                format: hex
                                description: A transaction on the execution (Ethereum 1) network.
                                example: '0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86'
                                pattern: '^0x[a-fA-F0-9]{0,2147483648}$'
                              maxItems: 1048576
                    - allOf:
                        - type: object
                          description: 'The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/master/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.'
                          properties:
                            parent_hash:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            fee_recipient:
                              type: string
                              format: hex
                              description: An address on the execution (Ethereum 1) network.
                              example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                              pattern: '^0x[a-fA-F0-9]{40}$'
                            state_root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            receipts_root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            logs_bloom:
                              type: string
                              format: hex
                              example: '0x
                              pattern: '^0x[a-fA-F0-9]{512}$'
                            prev_randao:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            block_number:
                              type: string
                              example: '1'
                            gas_limit:
                              type: string
                              example: '1'
                            gas_used:
                              type: string
                              example: '1'
                            timestamp:
                              type: string
                              example: '1'
                            extra_data:
                              type: string
                              format: hex
                              description: Extra data on the execution (Ethereum 1) network.
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{0,64}$'
                            base_fee_per_gas:
                              type: string
                              example: '1'
                            block_hash:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                        - type: object
                          properties:
                            transactions:
                              type: array
                              items:
                                type: string
                                format: hex
                                description: A transaction on the execution (Ethereum 1) network.
                                example: '0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86'
                                pattern: '^0x[a-fA-F0-9]{0,2147483648}$'
                              maxItems: 1048576
                            withdrawals:
                              type: array
                              items:
                                type: object
                                properties:
                                  index:
                                    description: The index of the withdrawal.
                                    type: string
                                    example: '1'
                                  validator_index:
                                    description: The index of the withdrawing validator.
                                    type: string
                                    example: '1'
                                  address:
                                    description: The address to which the withdrawal is credited.
                                    type: string
                                    format: hex
                                    example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                                    pattern: '^0x[a-fA-F0-9]{40}$'
                                  amount:
                                    description: The value withdrawn (gwei).
                                    type: string
                                    example: '1'
                              maxItems: 16
                signature:
                  type: string
                  format: hex
                  pattern: '^0x[a-fA-F0-9]{192}$'
                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
          application/octet-stream:
            schema:
              description: SSZ serialized request. Use content type header to indicate that SSZ data is contained in the request body.
      responses:
        '200':
          description: Success response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      receive_timestamp:
                        type: string
                        example: '1'
                      bid_trace:
                        type: object
                        properties:
                          slot:
                            type: string
                            example: '1'
                          parent_hash:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          block_hash:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          builder_pubkey:
                            type: string
                            format: hex
                            pattern: '^0x[a-fA-F0-9]{96}$'
                            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                          proposer_fee_recipient:
                            type: string
                            format: hex
                            description: An address on the execution (Ethereum 1) network.
                            example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                            pattern: '^0x[a-fA-F0-9]{40}$'
                          gas_limit:
                            type: string
                            example: '1'
                          gas_used:
                            type: string
                            example: '1'
                          value:
                            type: string
                            example: '1'
                  signature:
                    type: string
                    format: hex
                    pattern: '^0x[a-fA-F0-9]{192}$'
                    example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        '400':
          description: Error response.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      code:
                        description: Either specific error code in case of invalid request or http status code
                        type: number
                        example: 404
                      message:
                        description: Message describing error
                        type: string
                      stacktraces:
                        description: 'Optional stacktraces, sent when node is in debug mode'
                        type: array
                        items:
                          type: string
                  - example:
                      code: 400
                      message: payload for this slot was already delivered
        '500':
          description: An internal error on the relay.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: 'Optional stacktraces, sent when node is in debug mode'
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: internal server error
  /relay/v1/data/bidtraces/proposer_payload_delivered:
    get:
      operationId: getDeliveredPayloads
      summary: Get payloads that were delivered to proposers.
      description: |
        * Payloads become available after the relay responds to a `getPayload` request from the proposer.

        * Query arguments are used as filters.
      tags:
        - Data
      parameters:
        - name: slot
          in: query
          required: false
          description: A specific slot.
          schema:
            type: string
            example: '1'
        - name: cursor
          in: query
          required: false
          description: A starting slot for multiple results.
          schema:
            type: string
            example: '1'
        - name: limit
          in: query
          required: false
          description: The number of results.
          schema:
            type: string
            example: '1'
        - name: block_hash
          in: query
          required: false
          description: A specific block hash.
          schema:
            type: string
            format: hex
            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
            pattern: '^0x[a-fA-F0-9]{64}$'
        - name: block_number
          in: query
          required: false
          description: A specific block number.
          schema:
            type: string
            example: '1'
        - name: proposer_pubkey
          in: query
          required: false
          description: A specific proposer public key.
          schema:
            type: string
            format: hex
            pattern: '^0x[a-fA-F0-9]{96}$'
            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
        - name: builder_pubkey
          in: query
          required: false
          description: A specific builder public key.
          schema:
            type: string
            format: hex
            pattern: '^0x[a-fA-F0-9]{96}$'
            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
        - name: order_by
          in: query
          required: false
          description: Sort results in order of...
          schema:
            description: |
              Sort results in either ascending or descending values.
               * `-value` - descending value (highest value first)
               * `value` - ascending value (lowest value first)
            type: string
            enum:
              - '-value'
              - value
      responses:
        '200':
          description: Success response.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        slot:
                          type: string
                          example: '1'
                        parent_hash:
                          type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        block_hash:
                          type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        builder_pubkey:
                          type: string
                          format: hex
                          pattern: '^0x[a-fA-F0-9]{96}$'
                          description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                          example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                        proposer_fee_recipient:
                          type: string
                          format: hex
                          description: An address on the execution (Ethereum 1) network.
                          example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                          pattern: '^0x[a-fA-F0-9]{40}$'
                        gas_limit:
                          type: string
                          example: '1'
                        gas_used:
                          type: string
                          example: '1'
                        value:
                          type: string
                          example: '1'
                    - type: object
                      properties:
                        block_number:
                          type: string
                          example: '1'
                        num_tx:
                          type: string
                          example: '1'
        '400':
          description: Error response.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      code:
                        description: Either specific error code in case of invalid request or http status code
                        type: number
                        example: 404
                      message:
                        description: Message describing error
                        type: string
                      stacktraces:
                        description: 'Optional stacktraces, sent when node is in debug mode'
                        type: array
                        items:
                          type: string
                  - example:
                      code: 400
                      message: invalid block_hash argument
        '500':
          description: An internal error on the relay.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: 'Optional stacktraces, sent when node is in debug mode'
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: internal server error
  /relay/v1/data/bidtraces/builder_blocks_received:
    get:
      operationId: getReceivedBids
      summary: Get builder bid submissions.
      description: |
        * Returns a list of builder bids without execution payloads.

        * Only submissions that were successfully verified.
      tags:
        - Data
      parameters:
        - name: slot
          in: query
          required: false
          description: A specific slot.
          schema:
            type: string
            example: '1'
        - name: block_hash
          in: query
          required: false
          description: A specific block hash.
          schema:
            type: string
            format: hex
            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
            pattern: '^0x[a-fA-F0-9]{64}$'
        - name: block_number
          in: query
          required: false
          description: A specific block number.
          schema:
            type: string
            example: '1'
        - name: builder_pubkey
          in: query
          required: false
          description: A specific builder public key.
          schema:
            type: string
            format: hex
            pattern: '^0x[a-fA-F0-9]{96}$'
            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
        - name: limit
          in: query
          required: false
          description: The number of results.
          schema:
            type: string
            example: '1'
      responses:
        '200':
          description: Success response.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - allOf:
                        - type: object
                          properties:
                            slot:
                              type: string
                              example: '1'
                            parent_hash:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            block_hash:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            builder_pubkey:
                              type: string
                              format: hex
                              pattern: '^0x[a-fA-F0-9]{96}$'
                              description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                              example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                            proposer_fee_recipient:
                              type: string
                              format: hex
                              description: An address on the execution (Ethereum 1) network.
                              example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                              pattern: '^0x[a-fA-F0-9]{40}$'
                            gas_limit:
                              type: string
                              example: '1'
                            gas_used:
                              type: string
                              example: '1'
                            value:
                              type: string
                              example: '1'
                        - type: object
                          properties:
                            block_number:
                              type: string
                              example: '1'
                            num_tx:
                              type: string
                              example: '1'
                    - type: object
                      properties:
                        timestamp:
                          type: string
                          example: '1'
                        timestamp_ms:
                          type: string
                          example: '1'
        '400':
          description: Error response.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      code:
                        description: Either specific error code in case of invalid request or http status code
                        type: number
                        example: 404
                      message:
                        description: Message describing error
                        type: string
                      stacktraces:
                        description: 'Optional stacktraces, sent when node is in debug mode'
                        type: array
                        items:
                          type: string
                  - example:
                      code: 400
                      message: cannot specify both slot and cursor
        '500':
          description: An internal error on the relay.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: 'Optional stacktraces, sent when node is in debug mode'
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: internal server error
  /relay/v1/data/validator_registration:
    get:
      operationId: getValidatorRegistration
      summary: Check that a validator is registered with the relay.
      description: |
        * Returns the latest validator registration for a given pubkey.

        * Useful to check whether your own registration was successful.
      tags:
        - Data
      parameters:
        - name: pubkey
          in: query
          required: true
          description: The validator's public key.
          schema:
            type: string
            format: hex
            pattern: '^0x[a-fA-F0-9]{96}$'
            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
      responses:
        '200':
          description: Success response.
          content:
            application/json:
              schema:
                type: object
                description: The `SignedValidatorRegistration` object from the Builder API specification.
                properties:
                  message:
                    type: object
                    description: The `ValidatorRegistration` object from the Builder API specification.
                    properties:
                      fee_recipient:
                        description: Address to receive fees from the block.
                        type: string
                        format: hex
                        example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                        pattern: '^0x[a-fA-F0-9]{40}$'
                      gas_limit:
                        description: Preferred gas limit of validator.
                        type: string
                        example: '1'
                      timestamp:
                        description: Unix timestamp of registration.
                        type: string
                        example: '1'
                      pubkey:
                        description: BLS public key of validator.
                        type: string
                        format: hex
                        pattern: '^0x[a-fA-F0-9]{96}$'
                        example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                  signature:
                    type: string
                    format: hex
                    pattern: '^0x[a-fA-F0-9]{192}$'
                    example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        '400':
          description: Error response.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      code:
                        description: Either specific error code in case of invalid request or http status code
                        type: number
                        example: 404
                      message:
                        description: Message describing error
                        type: string
                      stacktraces:
                        description: 'Optional stacktraces, sent when node is in debug mode'
                        type: array
                        items:
                          type: string
                  - example:
                      code: 400
                      message: missing pubkey argument
        '500':
          description: An internal error on the relay.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Either specific error code in case of invalid request or http status code
                    type: number
                    example: 404
                  message:
                    description: Message describing error
                    type: string
                  stacktraces:
                    description: 'Optional stacktraces, sent when node is in debug mode'
                    type: array
                    items:
                      type: string
              example:
                code: 500
                message: internal server error
components:
  schemas:
    Uint64:
      type: string
      example: '1'
    Root:
      type: string
      format: hex
      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
      pattern: '^0x[a-fA-F0-9]{64}$'
    Pubkey:
      type: string
      format: hex
      pattern: '^0x[a-fA-F0-9]{96}$'
      description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
      example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
    ErrorMessage:
      type: object
      properties:
        code:
          description: Either specific error code in case of invalid request or http status code
          type: number
          example: 404
        message:
          description: Message describing error
          type: string
        stacktraces:
          description: 'Optional stacktraces, sent when node is in debug mode'
          type: array
          items:
            type: string
    OrderBy:
      description: |
        Sort results in either ascending or descending values.
         * `-value` - descending value (highest value first)
         * `value` - ascending value (lowest value first)
      type: string
      enum:
        - '-value'
        - value
    SubmitBlockRequest:
      type: object
      properties:
        message:
          type: object
          properties:
            slot:
              type: string
              example: '1'
            parent_hash:
              type: string
              format: hex
              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
              pattern: '^0x[a-fA-F0-9]{64}$'
            block_hash:
              type: string
              format: hex
              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
              pattern: '^0x[a-fA-F0-9]{64}$'
            builder_pubkey:
              type: string
              format: hex
              pattern: '^0x[a-fA-F0-9]{96}$'
              description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
              example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
            proposer_fee_recipient:
              type: string
              format: hex
              description: An address on the execution (Ethereum 1) network.
              example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
              pattern: '^0x[a-fA-F0-9]{40}$'
            gas_limit:
              type: string
              example: '1'
            gas_used:
              type: string
              example: '1'
            value:
              type: string
              example: '1'
        execution_payload:
          oneOf:
            - allOf:
                - type: object
                  description: 'The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.'
                  properties:
                    parent_hash:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    fee_recipient:
                      type: string
                      format: hex
                      description: An address on the execution (Ethereum 1) network.
                      example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                      pattern: '^0x[a-fA-F0-9]{40}$'
                    state_root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    receipts_root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    logs_bloom:
                      type: string
                      format: hex
                      example: '0x
                      pattern: '^0x[a-fA-F0-9]{512}$'
                    prev_randao:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    block_number:
                      type: string
                      example: '1'
                    gas_limit:
                      type: string
                      example: '1'
                    gas_used:
                      type: string
                      example: '1'
                    timestamp:
                      type: string
                      example: '1'
                    extra_data:
                      type: string
                      format: hex
                      description: Extra data on the execution (Ethereum 1) network.
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{0,64}$'
                    base_fee_per_gas:
                      type: string
                      example: '1'
                    block_hash:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                - type: object
                  properties:
                    transactions:
                      type: array
                      items:
                        type: string
                        format: hex
                        description: A transaction on the execution (Ethereum 1) network.
                        example: '0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86'
                        pattern: '^0x[a-fA-F0-9]{0,2147483648}$'
                      maxItems: 1048576
            - allOf:
                - type: object
                  description: 'The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/master/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.'
                  properties:
                    parent_hash:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    fee_recipient:
                      type: string
                      format: hex
                      description: An address on the execution (Ethereum 1) network.
                      example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                      pattern: '^0x[a-fA-F0-9]{40}$'
                    state_root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    receipts_root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    logs_bloom:
                      type: string
                      format: hex
                      example: '0x
                      pattern: '^0x[a-fA-F0-9]{512}$'
                    prev_randao:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    block_number:
                      type: string
                      example: '1'
                    gas_limit:
                      type: string
                      example: '1'
                    gas_used:
                      type: string
                      example: '1'
                    timestamp:
                      type: string
                      example: '1'
                    extra_data:
                      type: string
                      format: hex
                      description: Extra data on the execution (Ethereum 1) network.
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{0,64}$'
                    base_fee_per_gas:
                      type: string
                      example: '1'
                    block_hash:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                - type: object
                  properties:
                    transactions:
                      type: array
                      items:
                        type: string
                        format: hex
                        description: A transaction on the execution (Ethereum 1) network.
                        example: '0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86'
                        pattern: '^0x[a-fA-F0-9]{0,2147483648}$'
                      maxItems: 1048576
                    withdrawals:
                      type: array
                      items:
                        type: object
                        properties:
                          index:
                            description: The index of the withdrawal.
                            type: string
                            example: '1'
                          validator_index:
                            description: The index of the withdrawing validator.
                            type: string
                            example: '1'
                          address:
                            description: The address to which the withdrawal is credited.
                            type: string
                            format: hex
                            example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                            pattern: '^0x[a-fA-F0-9]{40}$'
                          amount:
                            description: The value withdrawn (gwei).
                            type: string
                            example: '1'
                      maxItems: 16
        signature:
          type: string
          format: hex
          pattern: '^0x[a-fA-F0-9]{192}$'
          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    ValidatorsResponse:
      type: array
      items:
        type: object
        properties:
          slot:
            type: string
            example: '1'
          validator_index:
            type: string
            example: '1'
          entry:
            type: object
            description: The `SignedValidatorRegistration` object from the Builder API specification.
            properties:
              message:
                type: object
                description: The `ValidatorRegistration` object from the Builder API specification.
                properties:
                  fee_recipient:
                    description: Address to receive fees from the block.
                    type: string
                    format: hex
                    example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                    pattern: '^0x[a-fA-F0-9]{40}$'
                  gas_limit:
                    description: Preferred gas limit of validator.
                    type: string
                    example: '1'
                  timestamp:
                    description: Unix timestamp of registration.
                    type: string
                    example: '1'
                  pubkey:
                    description: BLS public key of validator.
                    type: string
                    format: hex
                    pattern: '^0x[a-fA-F0-9]{96}$'
                    example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
              signature:
                type: string
                format: hex
                pattern: '^0x[a-fA-F0-9]{192}$'
                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    SubmitBlockResponse:
      type: object
      properties:
        message:
          type: object
          properties:
            receive_timestamp:
              type: string
              example: '1'
            bid_trace:
              type: object
              properties:
                slot:
                  type: string
                  example: '1'
                parent_hash:
                  type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
                block_hash:
                  type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
                builder_pubkey:
                  type: string
                  format: hex
                  pattern: '^0x[a-fA-F0-9]{96}$'
                  description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                  example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                proposer_fee_recipient:
                  type: string
                  format: hex
                  description: An address on the execution (Ethereum 1) network.
                  example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                  pattern: '^0x[a-fA-F0-9]{40}$'
                gas_limit:
                  type: string
                  example: '1'
                gas_used:
                  type: string
                  example: '1'
                value:
                  type: string
                  example: '1'
        signature:
          type: string
          format: hex
          pattern: '^0x[a-fA-F0-9]{192}$'
          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    DeliveredPayloadsResponse:
      type: array
      items:
        allOf:
          - type: object
            properties:
              slot:
                type: string
                example: '1'
              parent_hash:
                type: string
                format: hex
                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                pattern: '^0x[a-fA-F0-9]{64}$'
              block_hash:
                type: string
                format: hex
                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                pattern: '^0x[a-fA-F0-9]{64}$'
              builder_pubkey:
                type: string
                format: hex
                pattern: '^0x[a-fA-F0-9]{96}$'
                description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
              proposer_fee_recipient:
                type: string
                format: hex
                description: An address on the execution (Ethereum 1) network.
                example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                pattern: '^0x[a-fA-F0-9]{40}$'
              gas_limit:
                type: string
                example: '1'
              gas_used:
                type: string
                example: '1'
              value:
                type: string
                example: '1'
          - type: object
            properties:
              block_number:
                type: string
                example: '1'
              num_tx:
                type: string
                example: '1'
    ReceivedBlocksResponse:
      type: array
      items:
        allOf:
          - allOf:
              - type: object
                properties:
                  slot:
                    type: string
                    example: '1'
                  parent_hash:
                    type: string
                    format: hex
                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                    pattern: '^0x[a-fA-F0-9]{64}$'
                  block_hash:
                    type: string
                    format: hex
                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                    pattern: '^0x[a-fA-F0-9]{64}$'
                  builder_pubkey:
                    type: string
                    format: hex
                    pattern: '^0x[a-fA-F0-9]{96}$'
                    description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                    example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                  proposer_fee_recipient:
                    type: string
                    format: hex
                    description: An address on the execution (Ethereum 1) network.
                    example: '0xabcf8e0d4e9587369b2301d0790347320302cc09'
                    pattern: '^0x[a-fA-F0-9]{40}$'
                  gas_limit:
                    type: string
                    example: '1'
                  gas_used:
                    type: string
                    example: '1'
                  value:
                    type: string
                    example: '1'
              - type: object
                properties:
                  block_number:
                    type: string
                    example: '1'
                  num_tx:
                    type: string
                    example: '1'
          - type: object
            properties:
              timestamp:
                type: string
                example: '1'
              timestamp_ms:
                type: string
                example: '1'
  responses:
    InternalError:
      description: An internal error on the relay.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                description: Either specific error code in case of invalid request or http status code
                type: number
                example: 404
              message:
                description: Message describing error
                type: string
              stacktraces:
                description: 'Optional stacktraces, sent when node is in debug mode'
                type: array
                items:
                  type: string
          example:
            code: 500
            message: internal server error
