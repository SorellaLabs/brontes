[package]
name = "brontes"
version = "0.1.0"
edition = "2021"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
# poirot
brontes-core.workspace = true
brontes-inspect.workspace = true
brontes-types.workspace = true
brontes-classifier.workspace = true
brontes-database.workspace = true
brontes-metrics.workspace = true
malachite.workspace = true
toml = "0.8.2"

# Async
tokio = { workspace = true, features = ["full", "tracing"] }
futures.workspace = true

# Reth
reth-tasks.workspace = true
reth-rpc.workspace = true
reth-rpc-api.workspace = true
reth-rpc-types.workspace = true
reth-provider.workspace = true
reth-transaction-pool.workspace = true
reth-network-api.workspace = true
reth-primitives.workspace = true
reth-db.workspace = true
reth-blockchain-tree.workspace = true
reth-beacon-consensus.workspace = true
#reth-revm.workspace = true
reth-interfaces.workspace = true

# Alloy
alloy-sol-macro = { workspace = true, features = ["json"] }
alloy-sol-types = { workspace = true, features = ["json"] }

# logging
log.workspace = true

# tracing
tracing.workspace = true
tracing-subscriber.workspace = true
reth-tracing-ext.workspace = true
colored.workspace = true

# misc
eyre.workspace = true
dotenv.workspace = true

# http/rpc
hyper.workspace = true

# cli
clap = { version = "4.4.6", features = ["derive"] }

# logging
indoc = "2"
rayon.workspace = true
cfg-if = "1.0.0"

# prometheus
metrics-process.workspace = true



[features]
server = [
  "brontes-types/server",
  "brontes-classifier/server",
  "brontes-core/server"
]

test_run = [
  "brontes-core/test_run",
  "brontes-database/test_run",
  "brontes-classifier/test_run",
  "brontes-inspect/test_run",
]

tests = [
  "brontes-core/tests",
  "brontes-database/tests",
  "brontes-classifier/tests",
  "brontes-inspect/tests",
]

dyn-decode = ["brontes-core/dyn-decode"]
