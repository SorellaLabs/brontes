[package]
name = "brontes-inspect"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# brontes
brontes-types.workspace = true
brontes-database.workspace = true
brontes-database-libmdbx.workspace = true

# database
clickhouse = { git = "https://github.com/SorellaLabs/clickhouse.rs" }

# web
hyper-tls.workspace = true
hyper.workspace = true

# alloy
alloy-sol-macro.workspace = true
alloy-sol-types.workspace = true
alloy-primitives.workspace = true
alloy-json-abi.workspace = true
alloy-rpc-types = { git = "https://github.com/alloy-rs/alloy.git" }

reqwest.workspace = true
# async
async-trait.workspace = true
rayon.workspace = true
futures.workspace = true
tokio.workspace = true
async-scoped = { version = "0.7.1", features = ["use-tokio"] }

# reth
reth-primitives.workspace = true
reth-rpc-types.workspace = true

# tracing
tracing.workspace = true

# error handling
thiserror.workspace = true


# serde
serde_with = { workspace = true, features = ["macros"] }
serde.workspace = true
serde_json.workspace = true

# numbers
malachite.workspace = true

# misc
strum = { workspace = true, features = ["derive"] }
lazy_static.workspace = true
auto_impl.workspace = true
itertools.workspace = true

brontes-core = { workspace = true, optional = true }
brontes-classifier = { workspace = true, optional = true }

[dev-dependencies]
dotenv.workspace = true
serial_test.workspace = true
brontes-classifier = { workspace = true, features = ["tests"] }
brontes-core = { workspace = true, features = ["tests"] }
brontes-inspect = { workspace = true, features = ["tests"] }
tracing-subscriber.workspace = true
reth-db.workspace = true
brontes-types.workspace = true
brontes-database.workspace = true
brontes-database-libmdbx.workspace = true
tokio.workspace = true
reth-tracing-ext.workspace = true
criterion = { version = "0.5" }
rand = "0.8.5"


[features]
tests = ["brontes-classifier/tests", "brontes-core/tests"]
local = ["brontes-core/local", "tests"]
