on:
  push:
    branches:
      - main
      - reth-patch
  pull_request:
    branches: [main]

name: CI

jobs:
  clippy:
    name: "clippy"
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85.0
          components: clippy,rustfmt

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          key: "clippy-stable"

      - run: git config --global url."https://x-access-token:${{ secrets.CI }}@github.com/".insteadOf "https://github.com/"
        shell: bash
      - run: git config --global url."https://${{ secrets.CI }}@github.com/".insteadOf "git@github.com:"
        shell: bash

      - name: "clippy all"
        run: cargo clippy --workspace --lib --examples --tests --benches --all-features
        env:
          RUSTFLAGS: -D warnings

  build:
    name: "build"
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85.0
          components: clippy

      - uses: Swatinem/rust-cache@v2
        with:
          key: "buildfmt-stable"
          cache-on-failure: true

      - run: git config --global url."https://x-access-token:${{ secrets.CI }}@github.com/".insteadOf "https://github.com/"
        shell: bash
      - run: git config --global url."https://${{ secrets.CI }}@github.com/".insteadOf "git@github.com:"
        shell: bash

      - name: "build stable"
        run: cargo build --workspace --all-features
        env:
          RUSTFLAGS: -D warnings

  cargo-fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4

      - run: git config --global url."https://x-access-token:${{ secrets.CI }}@github.com/".insteadOf "https://github.com/"
        shell: bash
      - run: git config --global url."https://${{ secrets.CI }}@github.com/".insteadOf "git@github.com:"
        shell: bash

      - name: Install Nightly
        run: |
          rustup toolchain install nightly
          rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt

      - name: cargo build
        run: cargo build --workspace --all-features

      - name: cargo +nightly fmt
        run: cargo +nightly fmt --all -- --check

  test:
    runs-on: ubuntu-latest
    if: always() && !cancelled() && !contains(needs.*.result, 'failure') && github.event.pull_request.draft == false
    needs: [clippy, build]
    strategy:
      fail-fast: false
      matrix:
        features: ["sorella-server"]
    steps:
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8
      
      - name: Init ssh config
        run: |
          mkdir ~/.ssh/
          echo "${{ secrets.BASTION_SSH }}" > ~/.ssh/bastion
          chmod 600 ~/.ssh/bastion
          echo "${{ secrets.BRONTES_SSH }}" > ~/.ssh/brontes_server
          chmod 600 ~/.ssh/brontes_server
          echo "${{ secrets.SSH_CONFIG }}" > ~/.ssh/config

      - name: cargo test
        id: run_tests
        continue-on-error: true
        run: |
          ssh brontes_server -tt "bash --login -c '
            source ~/.bashrc
            cd \$HOME
            mkdir -p ${{ steps.branch-names.outputs.current_branch }}-test-${{ matrix.features }}
            cd ${{ steps.branch-names.outputs.current_branch }}-test-${{ matrix.features }}
            git clone https://github.com/SorellaLabs/brontes.git
            cd brontes
            git checkout ${{ steps.branch-names.outputs.current_branch }}
            ./scripts/run-tests.sh ${{ steps.branch-names.outputs.current_branch }} ${{ steps.branch-names.outputs.current_branch }}-test-${{ matrix.features }} test ${{ matrix.features }}
          '"
      - name: Cleanup
        if: always()
        run: |
          ssh brontes_server -tt "bash --login -c '
            set -x
            rm -rf \$HOME/${{ steps.branch-names.outputs.current_branch }}-test-${{ matrix.features }}
            rm -rf /home/brontes-ci/data/${{ steps.branch-names.outputs.current_branch }}-test-${{ matrix.features }}
          '"

      - name: Check test result
        if: steps.run_tests.outcome == 'failure'
        run: exit 1

  it-test:
    runs-on: ubuntu-latest
    if: always() && !cancelled() && !contains(needs.*.result, 'failure') && github.event.pull_request.draft == false
    needs: [clippy, build]
    strategy:
      fail-fast: false
      matrix:
        features: ["sorella-server"]
    steps:
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Init ssh config
        run: |
          mkdir ~/.ssh/
          echo "${{ secrets.BASTION_SSH }}" > ~/.ssh/bastion
          chmod 600 ~/.ssh/bastion
          echo "${{ secrets.BRONTES_SSH }}" > ~/.ssh/brontes_server
          chmod 600 ~/.ssh/brontes_server
          echo "${{ secrets.SSH_CONFIG }}" > ~/.ssh/config

      - name: cargo it test
        id: run_it_tests
        continue-on-error: true
        run: |
          ssh brontes_server -tt "bash --login -c '
            source ~/.bashrc
            cd \$HOME
            mkdir -p ${{ steps.branch-names.outputs.current_branch }}-it-${{ matrix.features }}
            cd ${{ steps.branch-names.outputs.current_branch }}-it-${{ matrix.features }}
            git clone https://github.com/SorellaLabs/brontes.git
            cd brontes
            git checkout ${{ steps.branch-names.outputs.current_branch }}
            ./scripts/run-tests.sh ${{ steps.branch-names.outputs.current_branch }} ${{ steps.branch-names.outputs.current_branch }}-it-${{ matrix.features }} it ${{ matrix.features }}
          '"

      - name: Cleanup
        if: always()
        run: |
          ssh brontes_server -tt "bash --login -c '
            set -x
            rm -rf \$HOME/${{ steps.branch-names.outputs.current_branch }}-it-${{ matrix.features }}
            rm -rf /home/brontes-ci/data/${{ steps.branch-names.outputs.current_branch }}-it-${{ matrix.features }}
          '"

      - name: Check integration test result
        if: steps.run_it_tests.outcome == 'failure'
        run: exit 1

  cleanup:
    name: "Cleanup"
    needs: [test, it-test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Init ssh config
        run: |
          mkdir ~/.ssh/
          echo "${{ secrets.BASTION_SSH }}" > ~/.ssh/bastion
          chmod 600 ~/.ssh/bastion
          echo "${{ secrets.BRONTES_SSH }}" > ~/.ssh/brontes_server
          chmod 600 ~/.ssh/brontes_server
          echo "${{ secrets.SSH_CONFIG }}" > ~/.ssh/config

      - name: Run cleanup
        run: |
          ssh brontes_server -tt "bash --login -c '
            set -x
            rm -rf \$HOME/*/
            echo \"Cleanup completed\"
          '"
