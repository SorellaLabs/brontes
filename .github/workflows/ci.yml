on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

name: CI

jobs:
  clippy:
    name: "clippy"
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI }}
      - uses: dtolnay/rust-toolchain@clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          key: "clippy"

      - run: git config --global url."https://x-access-token:${{ secrets.CI }}@github.com/".insteadOf "https://github.com/"
        shell: bash
      - run: git config --global url."https://${{ secrets.CI }}@github.com/".insteadOf "git@github.com:"
        shell: bash

      - name: "clippy all"
        run: cargo clippy --workspace --lib --examples --tests --benches --all-features
        env:
          RUSTFLAGS: -D warnings

  build:
      name: "build and fmt"
      if: github.event.pull_request.draft == false
      runs-on: ubuntu-latest
      timeout-minutes: 30
      steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@nightly
          with:
              components: rustfmt
        - uses: Swatinem/rust-cache@v2
          with:
            key: "buildfmt"
            cache-on-failure: true

        # allow for downloads
        - run: git config --global url."https://x-access-token:${{ secrets.CI }}@github.com/".insteadOf "https://github.com/"
          shell: bash
        - run: git config --global url."https://${{ secrets.CI }}@github.com/".insteadOf "git@github.com:"
          shell: bash

        - name: "build nightly"
          run: cargo build --workspace --all-features
          env:
            RUSTFLAGS: -D warnings

        - name: "cargo fmt"
          run: cargo fmt --all --check

  test: 
    runs-on: ubuntu-latest
    if: always() && !cancelled() && !contains(needs.*.result, 'failure') && github.event.pull_request.draft == false
    needs: [clippy, build]
    steps:
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8
      - name: Init ssh config
        run: |
          mkdir ~/.ssh/ 
          echo "${{ secrets.BASTION_SSH }}" > ~/.ssh/bastion 
          chmod 600 ~/.ssh/bastion 
          echo "${{ secrets.BRONTES_SSH }}" > ~/.ssh/brontes_server 
          chmod 600 ~/.ssh/brontes_server
          echo "${{ secrets.SSH_CONFIG }}" > ~/.ssh/config 

      - name: cargo test and bench
        run: 
          ssh brontes_server -tt "cd brontes && bash --login -c 'source ~/.bashrc ./test-bench-ci.sh ${{ steps.branch-names.outputs.current_branch }}'" 

