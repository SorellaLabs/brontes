<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1301.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1301.00"> </text><svg id="frames" x="10" width="1180" total_samples="1652"><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="0.0000%" y="1237" width="0.0605%" height="15" fill="rgb(212,174,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1247.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="0.0000%" y="1221" width="0.0605%" height="15" fill="rgb(242,57,32)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1231.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="0.0000%" y="1205" width="0.0605%" height="15" fill="rgb(213,225,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="0.0000%" y="1189" width="0.0605%" height="15" fill="rgb(213,225,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>reqwest::connect::with_timeout::{{closure}} (1 samples, 0.06%)</title><rect x="0.0000%" y="1173" width="0.0605%" height="15" fill="rgb(247,17,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (1 samples, 0.06%)</title><rect x="0.0000%" y="1157" width="0.0605%" height="15" fill="rgb(223,47,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 0.06%)</title><rect x="0.0000%" y="1141" width="0.0605%" height="15" fill="rgb(218,93,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 0.06%)</title><rect x="0.0000%" y="1125" width="0.0605%" height="15" fill="rgb(218,214,9)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>hyper::client::connect::http::connect (1 samples, 0.06%)</title><rect x="0.0000%" y="1109" width="0.0605%" height="15" fill="rgb(224,62,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>socket2::socket::Socket::new (1 samples, 0.06%)</title><rect x="0.0000%" y="1093" width="0.0605%" height="15" fill="rgb(248,31,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>__GI_socket (1 samples, 0.06%)</title><rect x="0.0000%" y="1077" width="0.0605%" height="15" fill="rgb(220,158,33)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="0.0000%" y="1061" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="0.0000%" y="1045" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="0.0000%" y="1029" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="0.0000%" y="1013" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="0.0000%" y="997" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>__arm64_sys_socket (1 samples, 0.06%)</title><rect x="0.0000%" y="981" width="0.0605%" height="15" fill="rgb(223,210,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>__sys_socket (1 samples, 0.06%)</title><rect x="0.0000%" y="965" width="0.0605%" height="15" fill="rgb(250,37,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>__sock_create (1 samples, 0.06%)</title><rect x="0.0000%" y="949" width="0.0605%" height="15" fill="rgb(222,146,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>security_socket_create (1 samples, 0.06%)</title><rect x="0.0000%" y="933" width="0.0605%" height="15" fill="rgb(235,34,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>selinux_socket_create (1 samples, 0.06%)</title><rect x="0.0000%" y="917" width="0.0605%" height="15" fill="rgb(226,25,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>EVP_KEYMGMT_is_a (1 samples, 0.06%)</title><rect x="0.1211%" y="901" width="0.0605%" height="15" fill="rgb(212,106,6)" fg:x="2" fg:w="1"/><text x="0.3711%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.1211%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="2" fg:w="1"/><text x="0.3711%" y="895.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.06%)</title><rect x="0.1211%" y="869" width="0.0605%" height="15" fill="rgb(231,206,42)" fg:x="2" fg:w="1"/><text x="0.3711%" y="879.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.06%)</title><rect x="0.1211%" y="853" width="0.0605%" height="15" fill="rgb(239,157,37)" fg:x="2" fg:w="1"/><text x="0.3711%" y="863.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (2 samples, 0.12%)</title><rect x="0.1211%" y="917" width="0.1211%" height="15" fill="rgb(250,130,40)" fg:x="2" fg:w="2"/><text x="0.3711%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.1816%" y="901" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="3" fg:w="1"/><text x="0.4316%" y="911.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.06%)</title><rect x="0.1816%" y="885" width="0.0605%" height="15" fill="rgb(234,106,4)" fg:x="3" fg:w="1"/><text x="0.4316%" y="895.50"></text></g><g><title>ASN1_item_d2i_ex (3 samples, 0.18%)</title><rect x="0.1211%" y="1029" width="0.1816%" height="15" fill="rgb(235,7,46)" fg:x="2" fg:w="3"/><text x="0.3711%" y="1039.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="0.1211%" y="1013" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="2" fg:w="3"/><text x="0.3711%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="0.1211%" y="997" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="2" fg:w="3"/><text x="0.3711%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="0.1211%" y="981" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="2" fg:w="3"/><text x="0.3711%" y="991.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="0.1211%" y="965" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="2" fg:w="3"/><text x="0.3711%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="0.1211%" y="949" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="2" fg:w="3"/><text x="0.3711%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="0.1211%" y="933" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="2" fg:w="3"/><text x="0.3711%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.2421%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="4" fg:w="1"/><text x="0.4921%" y="927.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.06%)</title><rect x="0.2421%" y="901" width="0.0605%" height="15" fill="rgb(209,156,11)" fg:x="4" fg:w="1"/><text x="0.4921%" y="911.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.06%)</title><rect x="0.2421%" y="885" width="0.0605%" height="15" fill="rgb(209,156,11)" fg:x="4" fg:w="1"/><text x="0.4921%" y="895.50"></text></g><g><title>ASN1_item_free (1 samples, 0.06%)</title><rect x="0.2421%" y="869" width="0.0605%" height="15" fill="rgb(239,204,25)" fg:x="4" fg:w="1"/><text x="0.4921%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.2421%" y="853" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="4" fg:w="1"/><text x="0.4921%" y="863.50"></text></g><g><title>X509_new_ex (1 samples, 0.06%)</title><rect x="0.3027%" y="1029" width="0.0605%" height="15" fill="rgb(232,63,8)" fg:x="5" fg:w="1"/><text x="0.5527%" y="1039.50"></text></g><g><title>ASN1_item_new_ex (1 samples, 0.06%)</title><rect x="0.3027%" y="1013" width="0.0605%" height="15" fill="rgb(233,154,24)" fg:x="5" fg:w="1"/><text x="0.5527%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3027%" y="997" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="5" fg:w="1"/><text x="0.5527%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3027%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="5" fg:w="1"/><text x="0.5527%" y="991.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3027%" y="965" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="5" fg:w="1"/><text x="0.5527%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3027%" y="949" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="5" fg:w="1"/><text x="0.5527%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3027%" y="933" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="5" fg:w="1"/><text x="0.5527%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3027%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="5" fg:w="1"/><text x="0.5527%" y="927.50"></text></g><g><title>ASN1_item_new (1 samples, 0.06%)</title><rect x="0.3027%" y="901" width="0.0605%" height="15" fill="rgb(229,203,41)" fg:x="5" fg:w="1"/><text x="0.5527%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3027%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="5" fg:w="1"/><text x="0.5527%" y="895.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.06%)</title><rect x="0.3027%" y="869" width="0.0605%" height="15" fill="rgb(224,93,23)" fg:x="5" fg:w="1"/><text x="0.5527%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="0.3027%" y="853" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="5" fg:w="1"/><text x="0.5527%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="0.3027%" y="837" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="5" fg:w="1"/><text x="0.5527%" y="847.50"></text></g><g><title>EVP_PKEY_derive_set_peer_ex (1 samples, 0.06%)</title><rect x="0.3632%" y="1013" width="0.0605%" height="15" fill="rgb(235,170,30)" fg:x="6" fg:w="1"/><text x="0.6132%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3632%" y="997" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="6" fg:w="1"/><text x="0.6132%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3632%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="6" fg:w="1"/><text x="0.6132%" y="991.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.06%)</title><rect x="0.3632%" y="965" width="0.0605%" height="15" fill="rgb(234,106,4)" fg:x="6" fg:w="1"/><text x="0.6132%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.3632%" y="949" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="6" fg:w="1"/><text x="0.6132%" y="959.50"></text></g><g><title>BN_MONT_CTX_set_locked (1 samples, 0.06%)</title><rect x="0.4237%" y="853" width="0.0605%" height="15" fill="rgb(252,186,29)" fg:x="7" fg:w="1"/><text x="0.6737%" y="863.50"></text></g><g><title>BN_MONT_CTX_set (1 samples, 0.06%)</title><rect x="0.4237%" y="837" width="0.0605%" height="15" fill="rgb(215,88,30)" fg:x="7" fg:w="1"/><text x="0.6737%" y="847.50"></text></g><g><title>BN_mod_inverse (1 samples, 0.06%)</title><rect x="0.4237%" y="821" width="0.0605%" height="15" fill="rgb(213,155,49)" fg:x="7" fg:w="1"/><text x="0.6737%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.4237%" y="805" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="7" fg:w="1"/><text x="0.6737%" y="815.50"></text></g><g><title>BN_is_bit_set (1 samples, 0.06%)</title><rect x="0.4237%" y="789" width="0.0605%" height="15" fill="rgb(243,106,32)" fg:x="7" fg:w="1"/><text x="0.6737%" y="799.50"></text></g><g><title>BN_mod_exp_mont (2 samples, 0.12%)</title><rect x="0.4843%" y="853" width="0.1211%" height="15" fill="rgb(205,202,25)" fg:x="8" fg:w="2"/><text x="0.7343%" y="863.50"></text></g><g><title>BN_from_montgomery (2 samples, 0.12%)</title><rect x="0.4843%" y="837" width="0.1211%" height="15" fill="rgb(223,68,35)" fg:x="8" fg:w="2"/><text x="0.7343%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="0.4843%" y="821" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="8" fg:w="2"/><text x="0.7343%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="0.4843%" y="805" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="8" fg:w="2"/><text x="0.7343%" y="815.50"></text></g><g><title>ASN1_item_verify_ex (4 samples, 0.24%)</title><rect x="0.4237%" y="965" width="0.2421%" height="15" fill="rgb(234,195,36)" fg:x="7" fg:w="4"/><text x="0.6737%" y="975.50"></text></g><g><title>ASN1_item_verify_ctx (4 samples, 0.24%)</title><rect x="0.4237%" y="949" width="0.2421%" height="15" fill="rgb(222,105,26)" fg:x="7" fg:w="4"/><text x="0.6737%" y="959.50"></text></g><g><title>EVP_DigestVerifyFinal (4 samples, 0.24%)</title><rect x="0.4237%" y="933" width="0.2421%" height="15" fill="rgb(210,79,9)" fg:x="7" fg:w="4"/><text x="0.6737%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="0.4237%" y="917" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="7" fg:w="4"/><text x="0.6737%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="0.4237%" y="901" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="7" fg:w="4"/><text x="0.6737%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="0.4237%" y="885" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="7" fg:w="4"/><text x="0.6737%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="0.4237%" y="869" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="7" fg:w="4"/><text x="0.6737%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.6053%" y="853" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="10" fg:w="1"/><text x="0.8553%" y="863.50"></text></g><g><title>X509_STORE_CTX_get1_issuer (1 samples, 0.06%)</title><rect x="0.6659%" y="965" width="0.0605%" height="15" fill="rgb(244,61,51)" fg:x="11" fg:w="1"/><text x="0.9159%" y="975.50"></text></g><g><title>X509_STORE_CTX_get_by_subject (1 samples, 0.06%)</title><rect x="0.6659%" y="949" width="0.0605%" height="15" fill="rgb(246,88,28)" fg:x="11" fg:w="1"/><text x="0.9159%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.6659%" y="933" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="11" fg:w="1"/><text x="0.9159%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.6659%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="11" fg:w="1"/><text x="0.9159%" y="927.50"></text></g><g><title>OSSL_STORE_open_ex (1 samples, 0.06%)</title><rect x="0.6659%" y="901" width="0.0605%" height="15" fill="rgb(242,78,43)" fg:x="11" fg:w="1"/><text x="0.9159%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.6659%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="11" fg:w="1"/><text x="0.9159%" y="895.50"></text></g><g><title>OPENSSL_strncasecmp (1 samples, 0.06%)</title><rect x="0.6659%" y="869" width="0.0605%" height="15" fill="rgb(224,80,27)" fg:x="11" fg:w="1"/><text x="0.9159%" y="879.50"></text></g><g><title>X509_verify_cert (6 samples, 0.36%)</title><rect x="0.4237%" y="1013" width="0.3632%" height="15" fill="rgb(252,18,26)" fg:x="7" fg:w="6"/><text x="0.6737%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 0.36%)</title><rect x="0.4237%" y="997" width="0.3632%" height="15" fill="rgb(222,124,3)" fg:x="7" fg:w="6"/><text x="0.6737%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 0.36%)</title><rect x="0.4237%" y="981" width="0.3632%" height="15" fill="rgb(222,124,3)" fg:x="7" fg:w="6"/><text x="0.6737%" y="991.50"></text></g><g><title>X509_self_signed (1 samples, 0.06%)</title><rect x="0.7264%" y="965" width="0.0605%" height="15" fill="rgb(236,146,53)" fg:x="12" fg:w="1"/><text x="0.9764%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.7264%" y="949" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="12" fg:w="1"/><text x="0.9764%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.7264%" y="933" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="12" fg:w="1"/><text x="0.9764%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.7264%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="12" fg:w="1"/><text x="0.9764%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="0.7869%" y="1013" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="13" fg:w="2"/><text x="1.0369%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="0.7869%" y="997" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="13" fg:w="2"/><text x="1.0369%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.8475%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="14" fg:w="1"/><text x="1.0975%" y="991.50"></text></g><g><title>EVP_KDF_fetch (1 samples, 0.06%)</title><rect x="0.9080%" y="997" width="0.0605%" height="15" fill="rgb(222,187,0)" fg:x="15" fg:w="1"/><text x="1.1580%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.9080%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="15" fg:w="1"/><text x="1.1580%" y="991.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.9080%" y="965" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="15" fg:w="1"/><text x="1.1580%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.9080%" y="949" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="15" fg:w="1"/><text x="1.1580%" y="959.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.06%)</title><rect x="0.9080%" y="933" width="0.0605%" height="15" fill="rgb(251,110,52)" fg:x="15" fg:w="1"/><text x="1.1580%" y="943.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.06%)</title><rect x="0.9080%" y="917" width="0.0605%" height="15" fill="rgb(226,98,8)" fg:x="15" fg:w="1"/><text x="1.1580%" y="927.50"></text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (16 samples, 0.97%)</title><rect x="0.0605%" y="1093" width="0.9685%" height="15" fill="rgb(240,115,36)" fg:x="1" fg:w="16"/><text x="0.3105%" y="1103.50"></text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (16 samples, 0.97%)</title><rect x="0.0605%" y="1077" width="0.9685%" height="15" fill="rgb(221,180,35)" fg:x="1" fg:w="16"/><text x="0.3105%" y="1087.50"></text></g><g><title>[libssl.so.3.0.8] (16 samples, 0.97%)</title><rect x="0.0605%" y="1061" width="0.9685%" height="15" fill="rgb(243,173,28)" fg:x="1" fg:w="16"/><text x="0.3105%" y="1071.50"></text></g><g><title>[libssl.so.3.0.8] (16 samples, 0.97%)</title><rect x="0.0605%" y="1045" width="0.9685%" height="15" fill="rgb(243,173,28)" fg:x="1" fg:w="16"/><text x="0.3105%" y="1055.50"></text></g><g><title>[libssl.so.3.0.8] (11 samples, 0.67%)</title><rect x="0.3632%" y="1029" width="0.6659%" height="15" fill="rgb(243,173,28)" fg:x="6" fg:w="11"/><text x="0.6132%" y="1039.50"></text></g><g><title>[libssl.so.3.0.8] (2 samples, 0.12%)</title><rect x="0.9080%" y="1013" width="0.1211%" height="15" fill="rgb(243,173,28)" fg:x="15" fg:w="2"/><text x="1.1580%" y="1023.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="0.9685%" y="997" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="16" fg:w="1"/><text x="1.2185%" y="1007.50"></text></g><g><title>SHA384_Update (1 samples, 0.06%)</title><rect x="0.9685%" y="981" width="0.0605%" height="15" fill="rgb(236,224,40)" fg:x="16" fg:w="1"/><text x="1.2185%" y="991.50"></text></g><g><title>EVP_PKEY_CTX_set_group_name (1 samples, 0.06%)</title><rect x="1.1501%" y="949" width="0.0605%" height="15" fill="rgb(214,20,11)" fg:x="19" fg:w="1"/><text x="1.4001%" y="959.50"></text></g><g><title>EVP_PKEY_CTX_set_params (1 samples, 0.06%)</title><rect x="1.1501%" y="933" width="0.0605%" height="15" fill="rgb(236,61,3)" fg:x="19" fg:w="1"/><text x="1.4001%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.1501%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="19" fg:w="1"/><text x="1.4001%" y="927.50"></text></g><g><title>EVP_PKEY_generate (1 samples, 0.06%)</title><rect x="1.2107%" y="949" width="0.0605%" height="15" fill="rgb(206,9,8)" fg:x="20" fg:w="1"/><text x="1.4607%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.2107%" y="933" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="20" fg:w="1"/><text x="1.4607%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.2107%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="20" fg:w="1"/><text x="1.4607%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.2107%" y="901" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="20" fg:w="1"/><text x="1.4607%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.2107%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="20" fg:w="1"/><text x="1.4607%" y="895.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (21 samples, 1.27%)</title><rect x="0.0605%" y="1237" width="1.2712%" height="15" fill="rgb(218,177,49)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1247.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (21 samples, 1.27%)</title><rect x="0.0605%" y="1221" width="1.2712%" height="15" fill="rgb(221,17,0)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1231.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (21 samples, 1.27%)</title><rect x="0.0605%" y="1205" width="1.2712%" height="15" fill="rgb(212,174,39)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1215.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (21 samples, 1.27%)</title><rect x="0.0605%" y="1189" width="1.2712%" height="15" fill="rgb(242,57,32)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 1.27%)</title><rect x="0.0605%" y="1173" width="1.2712%" height="15" fill="rgb(213,225,48)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 1.27%)</title><rect x="0.0605%" y="1157" width="1.2712%" height="15" fill="rgb(213,225,48)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1167.50"></text></g><g><title>reqwest::connect::with_timeout::{{closure}} (21 samples, 1.27%)</title><rect x="0.0605%" y="1141" width="1.2712%" height="15" fill="rgb(247,17,34)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1151.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (21 samples, 1.27%)</title><rect x="0.0605%" y="1125" width="1.2712%" height="15" fill="rgb(223,47,26)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1135.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (21 samples, 1.27%)</title><rect x="0.0605%" y="1109" width="1.2712%" height="15" fill="rgb(218,93,28)" fg:x="1" fg:w="21"/><text x="0.3105%" y="1119.50"></text></g><g><title>&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (5 samples, 0.30%)</title><rect x="1.0291%" y="1093" width="0.3027%" height="15" fill="rgb(240,184,38)" fg:x="17" fg:w="5"/><text x="1.2791%" y="1103.50"></text></g><g><title>native_tls::imp::TlsConnector::connect (5 samples, 0.30%)</title><rect x="1.0291%" y="1077" width="0.3027%" height="15" fill="rgb(221,17,27)" fg:x="17" fg:w="5"/><text x="1.2791%" y="1087.50"></text></g><g><title>openssl::ssl::connector::ConnectConfiguration::connect (5 samples, 0.30%)</title><rect x="1.0291%" y="1061" width="0.3027%" height="15" fill="rgb(235,189,48)" fg:x="17" fg:w="5"/><text x="1.2791%" y="1071.50"></text></g><g><title>openssl::ssl::Ssl::connect (5 samples, 0.30%)</title><rect x="1.0291%" y="1045" width="0.3027%" height="15" fill="rgb(214,221,29)" fg:x="17" fg:w="5"/><text x="1.2791%" y="1055.50"></text></g><g><title>[libssl.so.3.0.8] (5 samples, 0.30%)</title><rect x="1.0291%" y="1029" width="0.3027%" height="15" fill="rgb(243,173,28)" fg:x="17" fg:w="5"/><text x="1.2791%" y="1039.50"></text></g><g><title>[libssl.so.3.0.8] (4 samples, 0.24%)</title><rect x="1.0896%" y="1013" width="0.2421%" height="15" fill="rgb(243,173,28)" fg:x="18" fg:w="4"/><text x="1.3396%" y="1023.50"></text></g><g><title>[libssl.so.3.0.8] (4 samples, 0.24%)</title><rect x="1.0896%" y="997" width="0.2421%" height="15" fill="rgb(243,173,28)" fg:x="18" fg:w="4"/><text x="1.3396%" y="1007.50"></text></g><g><title>[libssl.so.3.0.8] (3 samples, 0.18%)</title><rect x="1.1501%" y="981" width="0.1816%" height="15" fill="rgb(243,173,28)" fg:x="19" fg:w="3"/><text x="1.4001%" y="991.50"></text></g><g><title>[libssl.so.3.0.8] (3 samples, 0.18%)</title><rect x="1.1501%" y="965" width="0.1816%" height="15" fill="rgb(243,173,28)" fg:x="19" fg:w="3"/><text x="1.4001%" y="975.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.2712%" y="949" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="21" fg:w="1"/><text x="1.5212%" y="959.50"></text></g><g><title>&lt;reqwest::connect::Connector as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call (1 samples, 0.06%)</title><rect x="1.3317%" y="1237" width="0.0605%" height="15" fill="rgb(237,145,42)" fg:x="22" fg:w="1"/><text x="1.5817%" y="1247.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="1.3317%" y="1221" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="22" fg:w="1"/><text x="1.5817%" y="1231.50"></text></g><g><title>OSSL_DECODER_is_a (1 samples, 0.06%)</title><rect x="1.3923%" y="1237" width="0.0605%" height="15" fill="rgb(220,153,48)" fg:x="23" fg:w="1"/><text x="1.6423%" y="1247.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.06%)</title><rect x="1.3923%" y="1221" width="0.0605%" height="15" fill="rgb(251,110,52)" fg:x="23" fg:w="1"/><text x="1.6423%" y="1231.50"></text></g><g><title>pthread_rwlock_rdlock@plt (1 samples, 0.06%)</title><rect x="1.3923%" y="1205" width="0.0605%" height="15" fill="rgb(249,161,53)" fg:x="23" fg:w="1"/><text x="1.6423%" y="1215.50"></text></g><g><title>SHA512_Update (1 samples, 0.06%)</title><rect x="1.4528%" y="1237" width="0.0605%" height="15" fill="rgb(212,194,15)" fg:x="24" fg:w="1"/><text x="1.7028%" y="1247.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.4528%" y="1221" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="24" fg:w="1"/><text x="1.7028%" y="1231.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="1.4528%" y="1205" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="24" fg:w="1"/><text x="1.7028%" y="1215.50"></text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 0.42%)</title><rect x="1.5133%" y="1237" width="0.4237%" height="15" fill="rgb(222,124,3)" fg:x="25" fg:w="7"/><text x="1.7633%" y="1247.50"></text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 0.36%)</title><rect x="1.5738%" y="1221" width="0.3632%" height="15" fill="rgb(222,124,3)" fg:x="26" fg:w="6"/><text x="1.8238%" y="1231.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.06%)</title><rect x="1.8765%" y="1205" width="0.0605%" height="15" fill="rgb(220,49,37)" fg:x="31" fg:w="1"/><text x="2.1265%" y="1215.50"></text></g><g><title>pthread_once@plt (1 samples, 0.06%)</title><rect x="1.8765%" y="1189" width="0.0605%" height="15" fill="rgb(226,43,27)" fg:x="31" fg:w="1"/><text x="2.1265%" y="1199.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.06%)</title><rect x="1.9370%" y="1205" width="0.0605%" height="15" fill="rgb(231,211,11)" fg:x="32" fg:w="1"/><text x="2.1870%" y="1215.50"></text></g><g><title>__kernel_clock_gettime (1 samples, 0.06%)</title><rect x="1.9370%" y="1189" width="0.0605%" height="15" fill="rgb(249,105,20)" fg:x="32" fg:w="1"/><text x="2.1870%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.12%)</title><rect x="1.9370%" y="1237" width="0.1211%" height="15" fill="rgb(227,28,50)" fg:x="32" fg:w="2"/><text x="2.1870%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.12%)</title><rect x="1.9370%" y="1221" width="0.1211%" height="15" fill="rgb(227,28,50)" fg:x="32" fg:w="2"/><text x="2.1870%" y="1231.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.06%)</title><rect x="1.9976%" y="1205" width="0.0605%" height="15" fill="rgb(207,13,40)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1215.50"></text></g><g><title>std::path::PathBuf::push (1 samples, 0.06%)</title><rect x="1.9976%" y="1189" width="0.0605%" height="15" fill="rgb(246,17,12)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1199.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.06%)</title><rect x="1.9976%" y="1173" width="0.0605%" height="15" fill="rgb(240,21,49)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1183.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.06%)</title><rect x="1.9976%" y="1157" width="0.0605%" height="15" fill="rgb(238,142,43)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1167.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.06%)</title><rect x="1.9976%" y="1141" width="0.0605%" height="15" fill="rgb(229,185,38)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="1.9976%" y="1125" width="0.0605%" height="15" fill="rgb(243,52,34)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="1.9976%" y="1109" width="0.0605%" height="15" fill="rgb(224,207,30)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="1.9976%" y="1093" width="0.0605%" height="15" fill="rgb(251,49,54)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.06%)</title><rect x="1.9976%" y="1077" width="0.0605%" height="15" fill="rgb(214,20,35)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1087.50"></text></g><g><title>memcpy@plt (1 samples, 0.06%)</title><rect x="1.9976%" y="1061" width="0.0605%" height="15" fill="rgb(221,70,25)" fg:x="33" fg:w="1"/><text x="2.2476%" y="1071.50"></text></g><g><title>tokio::runtime::builder::Builder::build (1 samples, 0.06%)</title><rect x="2.0581%" y="981" width="0.0605%" height="15" fill="rgb(234,158,45)" fg:x="34" fg:w="1"/><text x="2.3081%" y="991.50"></text></g><g><title>tokio::loom::std::sys::num_cpus (1 samples, 0.06%)</title><rect x="2.0581%" y="965" width="0.0605%" height="15" fill="rgb(251,26,25)" fg:x="34" fg:w="1"/><text x="2.3081%" y="975.50"></text></g><g><title>num_cpus::linux::get_num_cpus (1 samples, 0.06%)</title><rect x="2.0581%" y="949" width="0.0605%" height="15" fill="rgb(209,64,17)" fg:x="34" fg:w="1"/><text x="2.3081%" y="959.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.06%)</title><rect x="2.0581%" y="933" width="0.0605%" height="15" fill="rgb(246,168,49)" fg:x="34" fg:w="1"/><text x="2.3081%" y="943.50"></text></g><g><title>num_cpus::linux::init_cgroups (1 samples, 0.06%)</title><rect x="2.0581%" y="917" width="0.0605%" height="15" fill="rgb(252,169,2)" fg:x="34" fg:w="1"/><text x="2.3081%" y="927.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="2.0581%" y="901" width="0.0605%" height="15" fill="rgb(246,125,29)" fg:x="34" fg:w="1"/><text x="2.3081%" y="911.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.06%)</title><rect x="2.0581%" y="885" width="0.0605%" height="15" fill="rgb(252,185,13)" fg:x="34" fg:w="1"/><text x="2.3081%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.06%)</title><rect x="2.0581%" y="869" width="0.0605%" height="15" fill="rgb(231,30,27)" fg:x="34" fg:w="1"/><text x="2.3081%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.06%)</title><rect x="2.0581%" y="853" width="0.0605%" height="15" fill="rgb(240,23,8)" fg:x="34" fg:w="1"/><text x="2.3081%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.06%)</title><rect x="2.0581%" y="837" width="0.0605%" height="15" fill="rgb(233,98,11)" fg:x="34" fg:w="1"/><text x="2.3081%" y="847.50"></text></g><g><title>__libc_read (1 samples, 0.06%)</title><rect x="2.0581%" y="821" width="0.0605%" height="15" fill="rgb(241,36,44)" fg:x="34" fg:w="1"/><text x="2.3081%" y="831.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="2.0581%" y="805" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="34" fg:w="1"/><text x="2.3081%" y="815.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="2.0581%" y="789" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="34" fg:w="1"/><text x="2.3081%" y="799.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="2.0581%" y="773" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="34" fg:w="1"/><text x="2.3081%" y="783.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="2.0581%" y="757" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="34" fg:w="1"/><text x="2.3081%" y="767.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="2.0581%" y="741" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="34" fg:w="1"/><text x="2.3081%" y="751.50"></text></g><g><title>__arm64_sys_read (1 samples, 0.06%)</title><rect x="2.0581%" y="725" width="0.0605%" height="15" fill="rgb(238,10,16)" fg:x="34" fg:w="1"/><text x="2.3081%" y="735.50"></text></g><g><title>ksys_read (1 samples, 0.06%)</title><rect x="2.0581%" y="709" width="0.0605%" height="15" fill="rgb(233,96,2)" fg:x="34" fg:w="1"/><text x="2.3081%" y="719.50"></text></g><g><title>vfs_read (1 samples, 0.06%)</title><rect x="2.0581%" y="693" width="0.0605%" height="15" fill="rgb(232,76,33)" fg:x="34" fg:w="1"/><text x="2.3081%" y="703.50"></text></g><g><title>seq_read_iter (1 samples, 0.06%)</title><rect x="2.0581%" y="677" width="0.0605%" height="15" fill="rgb(230,110,51)" fg:x="34" fg:w="1"/><text x="2.3081%" y="687.50"></text></g><g><title>m_show (1 samples, 0.06%)</title><rect x="2.0581%" y="661" width="0.0605%" height="15" fill="rgb(216,146,2)" fg:x="34" fg:w="1"/><text x="2.3081%" y="671.50"></text></g><g><title>kernfs_sop_show_options (1 samples, 0.06%)</title><rect x="2.0581%" y="645" width="0.0605%" height="15" fill="rgb(212,199,40)" fg:x="34" fg:w="1"/><text x="2.3081%" y="655.50"></text></g><g><title>__aarch64_cas8_acq (2 samples, 0.12%)</title><rect x="2.2397%" y="901" width="0.1211%" height="15" fill="rgb(220,70,35)" fg:x="37" fg:w="2"/><text x="2.4897%" y="911.50"></text></g><g><title>plist_add (1 samples, 0.06%)</title><rect x="2.3608%" y="741" width="0.0605%" height="15" fill="rgb(216,223,40)" fg:x="39" fg:w="1"/><text x="2.6108%" y="751.50"></text></g><g><title>futex_wait (20 samples, 1.21%)</title><rect x="2.3608%" y="773" width="1.2107%" height="15" fill="rgb(242,80,18)" fg:x="39" fg:w="20"/><text x="2.6108%" y="783.50"></text></g><g><title>futex_wait_queue (20 samples, 1.21%)</title><rect x="2.3608%" y="757" width="1.2107%" height="15" fill="rgb(206,76,33)" fg:x="39" fg:w="20"/><text x="2.6108%" y="767.50"></text></g><g><title>schedule (19 samples, 1.15%)</title><rect x="2.4213%" y="741" width="1.1501%" height="15" fill="rgb(213,215,35)" fg:x="40" fg:w="19"/><text x="2.6713%" y="751.50"></text></g><g><title>__schedule (19 samples, 1.15%)</title><rect x="2.4213%" y="725" width="1.1501%" height="15" fill="rgb(207,40,26)" fg:x="40" fg:w="19"/><text x="2.6713%" y="735.50"></text></g><g><title>arch_local_irq_enable (19 samples, 1.15%)</title><rect x="2.4213%" y="709" width="1.1501%" height="15" fill="rgb(232,216,33)" fg:x="40" fg:w="19"/><text x="2.6713%" y="719.50"></text></g><g><title>el1h_64_irq (1 samples, 0.06%)</title><rect x="3.5109%" y="693" width="0.0605%" height="15" fill="rgb(223,86,28)" fg:x="58" fg:w="1"/><text x="3.7609%" y="703.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.06%)</title><rect x="3.5109%" y="677" width="0.0605%" height="15" fill="rgb(231,46,5)" fg:x="58" fg:w="1"/><text x="3.7609%" y="687.50"></text></g><g><title>el1_interrupt (1 samples, 0.06%)</title><rect x="3.5109%" y="661" width="0.0605%" height="15" fill="rgb(254,19,43)" fg:x="58" fg:w="1"/><text x="3.7609%" y="671.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="3.5109%" y="645" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="58" fg:w="1"/><text x="3.7609%" y="655.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="3.5109%" y="629" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="58" fg:w="1"/><text x="3.7609%" y="639.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="3.5109%" y="613" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="58" fg:w="1"/><text x="3.7609%" y="623.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="3.5109%" y="597" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="58" fg:w="1"/><text x="3.7609%" y="607.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="3.5109%" y="581" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="58" fg:w="1"/><text x="3.7609%" y="591.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="3.5109%" y="565" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="58" fg:w="1"/><text x="3.7609%" y="575.50"></text></g><g><title>el0_svc_common.constprop.0 (21 samples, 1.27%)</title><rect x="2.3608%" y="837" width="1.2712%" height="15" fill="rgb(219,7,42)" fg:x="39" fg:w="21"/><text x="2.6108%" y="847.50"></text></g><g><title>invoke_syscall (21 samples, 1.27%)</title><rect x="2.3608%" y="821" width="1.2712%" height="15" fill="rgb(234,209,2)" fg:x="39" fg:w="21"/><text x="2.6108%" y="831.50"></text></g><g><title>__arm64_sys_futex (21 samples, 1.27%)</title><rect x="2.3608%" y="805" width="1.2712%" height="15" fill="rgb(221,106,0)" fg:x="39" fg:w="21"/><text x="2.6108%" y="815.50"></text></g><g><title>do_futex (21 samples, 1.27%)</title><rect x="2.3608%" y="789" width="1.2712%" height="15" fill="rgb(249,126,29)" fg:x="39" fg:w="21"/><text x="2.6108%" y="799.50"></text></g><g><title>futex_wait_setup (1 samples, 0.06%)</title><rect x="3.5714%" y="773" width="0.0605%" height="15" fill="rgb(219,66,52)" fg:x="59" fg:w="1"/><text x="3.8214%" y="783.50"></text></g><g><title>do_el0_svc (22 samples, 1.33%)</title><rect x="2.3608%" y="853" width="1.3317%" height="15" fill="rgb(221,53,8)" fg:x="39" fg:w="22"/><text x="2.6108%" y="863.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="3.6320%" y="837" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="60" fg:w="1"/><text x="3.8820%" y="847.50"></text></g><g><title>rseq_update_cpu_id (1 samples, 0.06%)</title><rect x="3.8136%" y="821" width="0.0605%" height="15" fill="rgb(211,154,25)" fg:x="63" fg:w="1"/><text x="4.0636%" y="831.50"></text></g><g><title>__rseq_handle_notify_resume (2 samples, 0.12%)</title><rect x="3.8136%" y="837" width="0.1211%" height="15" fill="rgb(205,7,40)" fg:x="63" fg:w="2"/><text x="4.0636%" y="847.50"></text></g><g><title>uaccess_ttbr0_enable (1 samples, 0.06%)</title><rect x="3.8741%" y="821" width="0.0605%" height="15" fill="rgb(205,92,53)" fg:x="64" fg:w="1"/><text x="4.1241%" y="831.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="3.9952%" y="821" width="0.0605%" height="15" fill="rgb(252,29,18)" fg:x="66" fg:w="1"/><text x="4.2452%" y="831.50"></text></g><g><title>__libc_start_main_alias_2 (34 samples, 2.06%)</title><rect x="2.0581%" y="1221" width="2.0581%" height="15" fill="rgb(220,160,23)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1231.50">_..</text></g><g><title>__libc_start_call_main (34 samples, 2.06%)</title><rect x="2.0581%" y="1205" width="2.0581%" height="15" fill="rgb(249,173,1)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1215.50">_..</text></g><g><title>main (34 samples, 2.06%)</title><rect x="2.0581%" y="1189" width="2.0581%" height="15" fill="rgb(238,28,47)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1199.50">m..</text></g><g><title>std::rt::lang_start_internal (34 samples, 2.06%)</title><rect x="2.0581%" y="1173" width="2.0581%" height="15" fill="rgb(240,177,54)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1183.50">s..</text></g><g><title>std::panic::catch_unwind (34 samples, 2.06%)</title><rect x="2.0581%" y="1157" width="2.0581%" height="15" fill="rgb(216,75,8)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1167.50">s..</text></g><g><title>std::panicking::try (34 samples, 2.06%)</title><rect x="2.0581%" y="1141" width="2.0581%" height="15" fill="rgb(212,61,29)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1151.50">s..</text></g><g><title>std::panicking::try::do_call (34 samples, 2.06%)</title><rect x="2.0581%" y="1125" width="2.0581%" height="15" fill="rgb(232,162,46)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1135.50">s..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (34 samples, 2.06%)</title><rect x="2.0581%" y="1109" width="2.0581%" height="15" fill="rgb(219,15,13)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1119.50">s..</text></g><g><title>std::panic::catch_unwind (34 samples, 2.06%)</title><rect x="2.0581%" y="1093" width="2.0581%" height="15" fill="rgb(216,75,8)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1103.50">s..</text></g><g><title>std::panicking::try (34 samples, 2.06%)</title><rect x="2.0581%" y="1077" width="2.0581%" height="15" fill="rgb(212,61,29)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1087.50">s..</text></g><g><title>std::panicking::try::do_call (34 samples, 2.06%)</title><rect x="2.0581%" y="1061" width="2.0581%" height="15" fill="rgb(232,162,46)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1071.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (34 samples, 2.06%)</title><rect x="2.0581%" y="1045" width="2.0581%" height="15" fill="rgb(212,73,0)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1055.50">c..</text></g><g><title>std::rt::lang_start::{{closure}} (34 samples, 2.06%)</title><rect x="2.0581%" y="1029" width="2.0581%" height="15" fill="rgb(213,78,9)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1039.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 2.06%)</title><rect x="2.0581%" y="1013" width="2.0581%" height="15" fill="rgb(210,88,34)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1023.50">s..</text></g><g><title>bin::main (34 samples, 2.06%)</title><rect x="2.0581%" y="997" width="2.0581%" height="15" fill="rgb(245,212,21)" fg:x="34" fg:w="34"/><text x="2.3081%" y="1007.50">b..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (33 samples, 2.00%)</title><rect x="2.1186%" y="981" width="1.9976%" height="15" fill="rgb(226,51,19)" fg:x="35" fg:w="33"/><text x="2.3686%" y="991.50">t..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (33 samples, 2.00%)</title><rect x="2.1186%" y="965" width="1.9976%" height="15" fill="rgb(250,218,41)" fg:x="35" fg:w="33"/><text x="2.3686%" y="975.50">t..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (33 samples, 2.00%)</title><rect x="2.1186%" y="949" width="1.9976%" height="15" fill="rgb(238,208,28)" fg:x="35" fg:w="33"/><text x="2.3686%" y="959.50">t..</text></g><g><title>tokio::runtime::park::Inner::park (31 samples, 1.88%)</title><rect x="2.2397%" y="933" width="1.8765%" height="15" fill="rgb(229,53,25)" fg:x="37" fg:w="31"/><text x="2.4897%" y="943.50">t..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (31 samples, 1.88%)</title><rect x="2.2397%" y="917" width="1.8765%" height="15" fill="rgb(237,57,41)" fg:x="37" fg:w="31"/><text x="2.4897%" y="927.50">p..</text></g><g><title>syscall (29 samples, 1.76%)</title><rect x="2.3608%" y="901" width="1.7554%" height="15" fill="rgb(207,84,5)" fg:x="39" fg:w="29"/><text x="2.6108%" y="911.50"></text></g><g><title>el0t_64_sync_handler (29 samples, 1.76%)</title><rect x="2.3608%" y="885" width="1.7554%" height="15" fill="rgb(232,35,33)" fg:x="39" fg:w="29"/><text x="2.6108%" y="895.50"></text></g><g><title>el0_svc (29 samples, 1.76%)</title><rect x="2.3608%" y="869" width="1.7554%" height="15" fill="rgb(225,46,33)" fg:x="39" fg:w="29"/><text x="2.6108%" y="879.50"></text></g><g><title>do_notify_resume (7 samples, 0.42%)</title><rect x="3.6925%" y="853" width="0.4237%" height="15" fill="rgb(233,34,11)" fg:x="61" fg:w="7"/><text x="3.9425%" y="863.50"></text></g><g><title>fpsimd_restore_current_state (3 samples, 0.18%)</title><rect x="3.9346%" y="837" width="0.1816%" height="15" fill="rgb(218,94,51)" fg:x="65" fg:w="3"/><text x="4.1846%" y="847.50"></text></g><g><title>fpsimd_load_state (1 samples, 0.06%)</title><rect x="4.0557%" y="821" width="0.0605%" height="15" fill="rgb(241,82,32)" fg:x="67" fg:w="1"/><text x="4.3057%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.06%)</title><rect x="4.1162%" y="1141" width="0.0605%" height="15" fill="rgb(208,68,2)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1151.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.06%)</title><rect x="4.1162%" y="1125" width="0.0605%" height="15" fill="rgb(238,71,42)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1135.50"></text></g><g><title>openaux (1 samples, 0.06%)</title><rect x="4.1162%" y="1109" width="0.0605%" height="15" fill="rgb(215,55,1)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1119.50"></text></g><g><title>_dl_map_object (1 samples, 0.06%)</title><rect x="4.1162%" y="1093" width="0.0605%" height="15" fill="rgb(247,77,9)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1103.50"></text></g><g><title>open_path (1 samples, 0.06%)</title><rect x="4.1162%" y="1077" width="0.0605%" height="15" fill="rgb(245,82,9)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1087.50"></text></g><g><title>open_verify.constprop.0 (1 samples, 0.06%)</title><rect x="4.1162%" y="1061" width="0.0605%" height="15" fill="rgb(207,185,8)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1071.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.06%)</title><rect x="4.1162%" y="1045" width="0.0605%" height="15" fill="rgb(216,127,2)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1055.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="4.1162%" y="1029" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1039.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="4.1162%" y="1013" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1023.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="4.1162%" y="997" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="68" fg:w="1"/><text x="4.3662%" y="1007.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="4.1162%" y="981" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="68" fg:w="1"/><text x="4.3662%" y="991.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="4.1162%" y="965" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="68" fg:w="1"/><text x="4.3662%" y="975.50"></text></g><g><title>__arm64_sys_openat (1 samples, 0.06%)</title><rect x="4.1162%" y="949" width="0.0605%" height="15" fill="rgb(225,123,44)" fg:x="68" fg:w="1"/><text x="4.3662%" y="959.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.06%)</title><rect x="4.1162%" y="933" width="0.0605%" height="15" fill="rgb(208,111,23)" fg:x="68" fg:w="1"/><text x="4.3662%" y="943.50"></text></g><g><title>do_filp_open (1 samples, 0.06%)</title><rect x="4.1162%" y="917" width="0.0605%" height="15" fill="rgb(219,26,10)" fg:x="68" fg:w="1"/><text x="4.3662%" y="927.50"></text></g><g><title>path_openat (1 samples, 0.06%)</title><rect x="4.1162%" y="901" width="0.0605%" height="15" fill="rgb(228,25,37)" fg:x="68" fg:w="1"/><text x="4.3662%" y="911.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (1 samples, 0.06%)</title><rect x="4.1162%" y="885" width="0.0605%" height="15" fill="rgb(228,149,52)" fg:x="68" fg:w="1"/><text x="4.3662%" y="895.50"></text></g><g><title>_start (36 samples, 2.18%)</title><rect x="2.0581%" y="1237" width="2.1792%" height="15" fill="rgb(210,219,27)" fg:x="34" fg:w="36"/><text x="2.3081%" y="1247.50">_..</text></g><g><title>_start (2 samples, 0.12%)</title><rect x="4.1162%" y="1221" width="0.1211%" height="15" fill="rgb(210,219,27)" fg:x="68" fg:w="2"/><text x="4.3662%" y="1231.50"></text></g><g><title>_dl_start (2 samples, 0.12%)</title><rect x="4.1162%" y="1205" width="0.1211%" height="15" fill="rgb(214,13,30)" fg:x="68" fg:w="2"/><text x="4.3662%" y="1215.50"></text></g><g><title>_dl_start_final (2 samples, 0.12%)</title><rect x="4.1162%" y="1189" width="0.1211%" height="15" fill="rgb(222,52,46)" fg:x="68" fg:w="2"/><text x="4.3662%" y="1199.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.12%)</title><rect x="4.1162%" y="1173" width="0.1211%" height="15" fill="rgb(238,104,49)" fg:x="68" fg:w="2"/><text x="4.3662%" y="1183.50"></text></g><g><title>dl_main (2 samples, 0.12%)</title><rect x="4.1162%" y="1157" width="0.1211%" height="15" fill="rgb(253,59,10)" fg:x="68" fg:w="2"/><text x="4.3662%" y="1167.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.06%)</title><rect x="4.1768%" y="1141" width="0.0605%" height="15" fill="rgb(244,75,35)" fg:x="69" fg:w="1"/><text x="4.4268%" y="1151.50"></text></g><g><title>alloy_etherscan::contract::&lt;impl alloy_etherscan::Client&gt;::contract_abi::{{closure}} (1 samples, 0.06%)</title><rect x="4.2373%" y="1237" width="0.0605%" height="15" fill="rgb(238,164,6)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1247.50"></text></g><g><title>alloy_etherscan::Client::get::{{closure}} (1 samples, 0.06%)</title><rect x="4.2373%" y="1221" width="0.0605%" height="15" fill="rgb(236,161,47)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1231.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="4.2373%" y="1205" width="0.0605%" height="15" fill="rgb(218,177,49)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1215.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (1 samples, 0.06%)</title><rect x="4.2373%" y="1189" width="0.0605%" height="15" fill="rgb(221,17,0)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1199.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="4.2373%" y="1173" width="0.0605%" height="15" fill="rgb(212,174,39)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1183.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="4.2373%" y="1157" width="0.0605%" height="15" fill="rgb(250,228,2)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1167.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="4.2373%" y="1141" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1151.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="4.2373%" y="1125" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="70" fg:w="1"/><text x="4.4873%" y="1135.50"></text></g><g><title>__GI___memcpy_simd (3 samples, 0.18%)</title><rect x="4.3584%" y="1189" width="0.1816%" height="15" fill="rgb(208,42,30)" fg:x="72" fg:w="3"/><text x="4.6084%" y="1199.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="4.4794%" y="1173" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1183.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="4.4794%" y="1157" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1167.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="4.4794%" y="1141" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1151.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="4.4794%" y="1125" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1135.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="4.4794%" y="1109" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1119.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="4.4794%" y="1093" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1103.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="4.4794%" y="1077" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1087.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="4.4794%" y="1061" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1071.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="4.4794%" y="1045" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1055.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.06%)</title><rect x="4.4794%" y="1029" width="0.0605%" height="15" fill="rgb(242,29,16)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1039.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.06%)</title><rect x="4.4794%" y="1013" width="0.0605%" height="15" fill="rgb(231,38,23)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1023.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="4.4794%" y="997" width="0.0605%" height="15" fill="rgb(214,74,36)" fg:x="74" fg:w="1"/><text x="4.7294%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (4 samples, 0.24%)</title><rect x="4.3584%" y="1205" width="0.2421%" height="15" fill="rgb(226,14,45)" fg:x="72" fg:w="4"/><text x="4.6084%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="4.5400%" y="1189" width="0.0605%" height="15" fill="rgb(249,2,22)" fg:x="75" fg:w="1"/><text x="4.7900%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="4.5400%" y="1173" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="75" fg:w="1"/><text x="4.7900%" y="1183.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="4.5400%" y="1157" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="75" fg:w="1"/><text x="4.7900%" y="1167.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="4.5400%" y="1141" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="75" fg:w="1"/><text x="4.7900%" y="1151.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="4.5400%" y="1125" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="75" fg:w="1"/><text x="4.7900%" y="1135.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="4.5400%" y="1109" width="0.0605%" height="15" fill="rgb(237,173,29)" fg:x="75" fg:w="1"/><text x="4.7900%" y="1119.50"></text></g><g><title>&lt;mime::Mime as core::str::traits::FromStr&gt;::from_str (1 samples, 0.06%)</title><rect x="4.6005%" y="1205" width="0.0605%" height="15" fill="rgb(244,207,50)" fg:x="76" fg:w="1"/><text x="4.8505%" y="1215.50"></text></g><g><title>mime::parse::parse (1 samples, 0.06%)</title><rect x="4.6005%" y="1189" width="0.0605%" height="15" fill="rgb(213,155,42)" fg:x="76" fg:w="1"/><text x="4.8505%" y="1199.50"></text></g><g><title>__aarch64_cas4_acq (1 samples, 0.06%)</title><rect x="4.6610%" y="1109" width="0.0605%" height="15" fill="rgb(239,219,12)" fg:x="77" fg:w="1"/><text x="4.9110%" y="1119.50"></text></g><g><title>futures_channel::mpsc::SenderTask::notify (1 samples, 0.06%)</title><rect x="4.7215%" y="1109" width="0.0605%" height="15" fill="rgb(207,146,0)" fg:x="78" fg:w="1"/><text x="4.9715%" y="1119.50"></text></g><g><title>&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (3 samples, 0.18%)</title><rect x="4.6610%" y="1205" width="0.1816%" height="15" fill="rgb(206,43,11)" fg:x="77" fg:w="3"/><text x="4.9110%" y="1215.50"></text></g><g><title>&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (3 samples, 0.18%)</title><rect x="4.6610%" y="1189" width="0.1816%" height="15" fill="rgb(243,119,3)" fg:x="77" fg:w="3"/><text x="4.9110%" y="1199.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (3 samples, 0.18%)</title><rect x="4.6610%" y="1173" width="0.1816%" height="15" fill="rgb(227,2,18)" fg:x="77" fg:w="3"/><text x="4.9110%" y="1183.50"></text></g><g><title>hyper::body::body::Body::poll_inner (3 samples, 0.18%)</title><rect x="4.6610%" y="1157" width="0.1816%" height="15" fill="rgb(242,16,17)" fg:x="77" fg:w="3"/><text x="4.9110%" y="1167.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.18%)</title><rect x="4.6610%" y="1141" width="0.1816%" height="15" fill="rgb(237,214,52)" fg:x="77" fg:w="3"/><text x="4.9110%" y="1151.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (3 samples, 0.18%)</title><rect x="4.6610%" y="1125" width="0.1816%" height="15" fill="rgb(237,15,16)" fg:x="77" fg:w="3"/><text x="4.9110%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.06%)</title><rect x="4.7821%" y="1109" width="0.0605%" height="15" fill="rgb(252,227,42)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.06%)</title><rect x="4.7821%" y="1093" width="0.0605%" height="15" fill="rgb(218,87,16)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1103.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.06%)</title><rect x="4.7821%" y="1077" width="0.0605%" height="15" fill="rgb(239,226,45)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1087.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.06%)</title><rect x="4.7821%" y="1061" width="0.0605%" height="15" fill="rgb(234,68,35)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1071.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.06%)</title><rect x="4.7821%" y="1045" width="0.0605%" height="15" fill="rgb(242,138,15)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.06%)</title><rect x="4.7821%" y="1029" width="0.0605%" height="15" fill="rgb(248,211,26)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1039.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.06%)</title><rect x="4.7821%" y="1013" width="0.0605%" height="15" fill="rgb(247,26,49)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1023.50"></text></g><g><title>__GI___write (1 samples, 0.06%)</title><rect x="4.7821%" y="997" width="0.0605%" height="15" fill="rgb(225,125,48)" fg:x="79" fg:w="1"/><text x="5.0321%" y="1007.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="4.7821%" y="981" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="79" fg:w="1"/><text x="5.0321%" y="991.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="4.7821%" y="965" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="79" fg:w="1"/><text x="5.0321%" y="975.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="4.7821%" y="949" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="79" fg:w="1"/><text x="5.0321%" y="959.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="4.7821%" y="933" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="79" fg:w="1"/><text x="5.0321%" y="943.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="4.7821%" y="917" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="79" fg:w="1"/><text x="5.0321%" y="927.50"></text></g><g><title>__arm64_sys_write (1 samples, 0.06%)</title><rect x="4.7821%" y="901" width="0.0605%" height="15" fill="rgb(249,177,38)" fg:x="79" fg:w="1"/><text x="5.0321%" y="911.50"></text></g><g><title>ksys_write (1 samples, 0.06%)</title><rect x="4.7821%" y="885" width="0.0605%" height="15" fill="rgb(223,155,43)" fg:x="79" fg:w="1"/><text x="5.0321%" y="895.50"></text></g><g><title>__fdget_pos (1 samples, 0.06%)</title><rect x="4.7821%" y="869" width="0.0605%" height="15" fill="rgb(205,61,45)" fg:x="79" fg:w="1"/><text x="5.0321%" y="879.50"></text></g><g><title>__fget_light (1 samples, 0.06%)</title><rect x="4.7821%" y="853" width="0.0605%" height="15" fill="rgb(243,103,32)" fg:x="79" fg:w="1"/><text x="5.0321%" y="863.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="4.8426%" y="1205" width="0.1211%" height="15" fill="rgb(218,177,49)" fg:x="80" fg:w="2"/><text x="5.0926%" y="1215.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (2 samples, 0.12%)</title><rect x="4.8426%" y="1189" width="0.1211%" height="15" fill="rgb(221,17,0)" fg:x="80" fg:w="2"/><text x="5.0926%" y="1199.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="4.9031%" y="1173" width="0.0605%" height="15" fill="rgb(212,174,39)" fg:x="81" fg:w="1"/><text x="5.1531%" y="1183.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="4.9031%" y="1157" width="0.0605%" height="15" fill="rgb(250,228,2)" fg:x="81" fg:w="1"/><text x="5.1531%" y="1167.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="4.9637%" y="1205" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="82" fg:w="1"/><text x="5.2137%" y="1215.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="4.9637%" y="1189" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="82" fg:w="1"/><text x="5.2137%" y="1199.50"></text></g><g><title>__GI___memcpy_simd (2 samples, 0.12%)</title><rect x="5.0242%" y="1205" width="0.1211%" height="15" fill="rgb(208,42,30)" fg:x="83" fg:w="2"/><text x="5.2742%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.06%)</title><rect x="5.1453%" y="1205" width="0.0605%" height="15" fill="rgb(225,131,44)" fg:x="85" fg:w="1"/><text x="5.3953%" y="1215.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="5.1453%" y="1189" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="85" fg:w="1"/><text x="5.3953%" y="1199.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="5.1453%" y="1173" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="85" fg:w="1"/><text x="5.3953%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::decoder::Decoder&gt; (1 samples, 0.06%)</title><rect x="5.2058%" y="1205" width="0.0605%" height="15" fill="rgb(237,166,47)" fg:x="86" fg:w="1"/><text x="5.4558%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::body::WrapHyper&gt; (1 samples, 0.06%)</title><rect x="5.2058%" y="1189" width="0.0605%" height="15" fill="rgb(223,211,46)" fg:x="86" fg:w="1"/><text x="5.4558%" y="1199.50"></text></g><g><title>&lt;hyper::common::watch::Sender as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="5.2058%" y="1173" width="0.0605%" height="15" fill="rgb(242,220,31)" fg:x="86" fg:w="1"/><text x="5.4558%" y="1183.50"></text></g><g><title>encoding_rs::Encoding::decode_without_bom_handling (3 samples, 0.18%)</title><rect x="5.2663%" y="1205" width="0.1816%" height="15" fill="rgb(237,143,4)" fg:x="87" fg:w="3"/><text x="5.5163%" y="1215.50"></text></g><g><title>encoding_rs::utf_8::utf8_valid_up_to (3 samples, 0.18%)</title><rect x="5.2663%" y="1189" width="0.1816%" height="15" fill="rgb(232,227,46)" fg:x="87" fg:w="3"/><text x="5.5163%" y="1199.50"></text></g><g><title>alloy_etherscan::Client::get::{{closure}} (20 samples, 1.21%)</title><rect x="4.2978%" y="1221" width="1.2107%" height="15" fill="rgb(236,161,47)" fg:x="71" fg:w="20"/><text x="4.5478%" y="1231.50"></text></g><g><title>reqwest::async_impl::request::RequestBuilder::query (1 samples, 0.06%)</title><rect x="5.4479%" y="1205" width="0.0605%" height="15" fill="rgb(215,36,50)" fg:x="90" fg:w="1"/><text x="5.6979%" y="1215.50"></text></g><g><title>alloy_etherscan::_::&lt;impl serde::ser::Serialize for alloy_etherscan::Query&lt;T&gt;&gt;::serialize (1 samples, 0.06%)</title><rect x="5.4479%" y="1189" width="0.0605%" height="15" fill="rgb(241,89,34)" fg:x="90" fg:w="1"/><text x="5.6979%" y="1199.50"></text></g><g><title>&lt;serde_urlencoded::ser::key::KeySink&lt;End&gt; as serde_urlencoded::ser::part::Sink&gt;::serialize_str (1 samples, 0.06%)</title><rect x="5.4479%" y="1173" width="0.0605%" height="15" fill="rgb(207,94,24)" fg:x="90" fg:w="1"/><text x="5.6979%" y="1183.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="5.5085%" y="1061" width="0.0605%" height="15" fill="rgb(226,51,34)" fg:x="91" fg:w="1"/><text x="5.7585%" y="1071.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="5.5085%" y="1045" width="0.0605%" height="15" fill="rgb(236,156,46)" fg:x="91" fg:w="1"/><text x="5.7585%" y="1055.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::Visitor&gt;::visit_str (1 samples, 0.06%)</title><rect x="5.5085%" y="1029" width="0.0605%" height="15" fill="rgb(234,14,44)" fg:x="91" fg:w="1"/><text x="5.7585%" y="1039.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="5.5690%" y="997" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="92" fg:w="1"/><text x="5.8190%" y="1007.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.18%)</title><rect x="5.5085%" y="1077" width="0.1816%" height="15" fill="rgb(226,51,34)" fg:x="91" fg:w="3"/><text x="5.7585%" y="1087.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.12%)</title><rect x="5.5690%" y="1061" width="0.1211%" height="15" fill="rgb(217,83,49)" fg:x="92" fg:w="2"/><text x="5.8190%" y="1071.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.12%)</title><rect x="5.5690%" y="1045" width="0.1211%" height="15" fill="rgb(225,128,1)" fg:x="92" fg:w="2"/><text x="5.8190%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.12%)</title><rect x="5.5690%" y="1029" width="0.1211%" height="15" fill="rgb(206,203,39)" fg:x="92" fg:w="2"/><text x="5.8190%" y="1039.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.12%)</title><rect x="5.5690%" y="1013" width="0.1211%" height="15" fill="rgb(252,110,42)" fg:x="92" fg:w="2"/><text x="5.8190%" y="1023.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="5.6295%" y="997" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="93" fg:w="1"/><text x="5.8795%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.12%)</title><rect x="5.6901%" y="981" width="0.1211%" height="15" fill="rgb(254,103,39)" fg:x="94" fg:w="2"/><text x="5.9401%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.12%)</title><rect x="5.6901%" y="965" width="0.1211%" height="15" fill="rgb(237,133,22)" fg:x="94" fg:w="2"/><text x="5.9401%" y="975.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.12%)</title><rect x="5.6901%" y="949" width="0.1211%" height="15" fill="rgb(206,112,53)" fg:x="94" fg:w="2"/><text x="5.9401%" y="959.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="5.8111%" y="965" width="0.0605%" height="15" fill="rgb(245,180,7)" fg:x="96" fg:w="1"/><text x="6.0611%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="5.8111%" y="949" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="96" fg:w="1"/><text x="6.0611%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="5.8111%" y="933" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="96" fg:w="1"/><text x="6.0611%" y="943.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="5.8111%" y="917" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="96" fg:w="1"/><text x="6.0611%" y="927.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (25 samples, 1.51%)</title><rect x="5.8717%" y="965" width="1.5133%" height="15" fill="rgb(249,130,0)" fg:x="97" fg:w="25"/><text x="6.1217%" y="975.50"></text></g><g><title>serde_json::read::parse_escape (5 samples, 0.30%)</title><rect x="7.0823%" y="949" width="0.3027%" height="15" fill="rgb(233,67,45)" fg:x="117" fg:w="5"/><text x="7.3323%" y="959.50"></text></g><g><title>alloy_etherscan::Client::sanitize_response (32 samples, 1.94%)</title><rect x="5.5085%" y="1221" width="1.9370%" height="15" fill="rgb(235,59,14)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1231.50">a..</text></g><g><title>serde_json::de::from_str (32 samples, 1.94%)</title><rect x="5.5085%" y="1205" width="1.9370%" height="15" fill="rgb(217,198,13)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1215.50">s..</text></g><g><title>alloy_etherscan::_::&lt;impl serde::de::Deserialize for alloy_etherscan::ResponseData&lt;T&gt;&gt;::deserialize (32 samples, 1.94%)</title><rect x="5.5085%" y="1189" width="1.9370%" height="15" fill="rgb(238,174,1)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1199.50">a..</text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (32 samples, 1.94%)</title><rect x="5.5085%" y="1173" width="1.9370%" height="15" fill="rgb(206,203,39)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1183.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (32 samples, 1.94%)</title><rect x="5.5085%" y="1157" width="1.9370%" height="15" fill="rgb(207,173,28)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1167.50">&lt;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (32 samples, 1.94%)</title><rect x="5.5085%" y="1141" width="1.9370%" height="15" fill="rgb(217,166,7)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1151.50">&lt;..</text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (32 samples, 1.94%)</title><rect x="5.5085%" y="1125" width="1.9370%" height="15" fill="rgb(206,203,39)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1135.50">&lt;..</text></g><g><title>alloy_etherscan::utils::deserialize_source_code (32 samples, 1.94%)</title><rect x="5.5085%" y="1109" width="1.9370%" height="15" fill="rgb(251,216,1)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1119.50">a..</text></g><g><title>serde_json::de::from_str (32 samples, 1.94%)</title><rect x="5.5085%" y="1093" width="1.9370%" height="15" fill="rgb(217,198,13)" fg:x="91" fg:w="32"/><text x="5.7585%" y="1103.50">s..</text></g><g><title>serde::de::Deserializer::__deserialize_content (29 samples, 1.76%)</title><rect x="5.6901%" y="1077" width="1.7554%" height="15" fill="rgb(237,93,40)" fg:x="94" fg:w="29"/><text x="5.9401%" y="1087.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 1.76%)</title><rect x="5.6901%" y="1061" width="1.7554%" height="15" fill="rgb(245,180,7)" fg:x="94" fg:w="29"/><text x="5.9401%" y="1071.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (29 samples, 1.76%)</title><rect x="5.6901%" y="1045" width="1.7554%" height="15" fill="rgb(237,93,40)" fg:x="94" fg:w="29"/><text x="5.9401%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 1.76%)</title><rect x="5.6901%" y="1029" width="1.7554%" height="15" fill="rgb(245,180,7)" fg:x="94" fg:w="29"/><text x="5.9401%" y="1039.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (29 samples, 1.76%)</title><rect x="5.6901%" y="1013" width="1.7554%" height="15" fill="rgb(237,93,40)" fg:x="94" fg:w="29"/><text x="5.9401%" y="1023.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 1.76%)</title><rect x="5.6901%" y="997" width="1.7554%" height="15" fill="rgb(245,180,7)" fg:x="94" fg:w="29"/><text x="5.9401%" y="1007.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (27 samples, 1.63%)</title><rect x="5.8111%" y="981" width="1.6344%" height="15" fill="rgb(237,93,40)" fg:x="96" fg:w="27"/><text x="6.0611%" y="991.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="7.3850%" y="965" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="122" fg:w="1"/><text x="7.6350%" y="975.50"></text></g><g><title>&lt;mime::Mime as core::str::traits::FromStr&gt;::from_str (3 samples, 0.18%)</title><rect x="7.5061%" y="1189" width="0.1816%" height="15" fill="rgb(244,207,50)" fg:x="124" fg:w="3"/><text x="7.7561%" y="1199.50"></text></g><g><title>mime::parse::parse (2 samples, 0.12%)</title><rect x="7.5666%" y="1173" width="0.1211%" height="15" fill="rgb(213,155,42)" fg:x="125" fg:w="2"/><text x="7.8166%" y="1183.50"></text></g><g><title>mime::parse::params_from_str (1 samples, 0.06%)</title><rect x="7.6271%" y="1157" width="0.0605%" height="15" fill="rgb(231,102,16)" fg:x="126" fg:w="1"/><text x="7.8771%" y="1167.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 0.06%)</title><rect x="7.7482%" y="1157" width="0.0605%" height="15" fill="rgb(227,2,18)" fg:x="128" fg:w="1"/><text x="7.9982%" y="1167.50"></text></g><g><title>hyper::body::body::Body::poll_inner (1 samples, 0.06%)</title><rect x="7.7482%" y="1141" width="0.0605%" height="15" fill="rgb(242,16,17)" fg:x="128" fg:w="1"/><text x="7.9982%" y="1151.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.06%)</title><rect x="7.7482%" y="1125" width="0.0605%" height="15" fill="rgb(237,214,52)" fg:x="128" fg:w="1"/><text x="7.9982%" y="1135.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.06%)</title><rect x="7.7482%" y="1109" width="0.0605%" height="15" fill="rgb(237,15,16)" fg:x="128" fg:w="1"/><text x="7.9982%" y="1119.50"></text></g><g><title>__aarch64_ldadd8_acq_rel (1 samples, 0.06%)</title><rect x="7.7482%" y="1093" width="0.0605%" height="15" fill="rgb(244,110,8)" fg:x="128" fg:w="1"/><text x="7.9982%" y="1103.50"></text></g><g><title>&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (3 samples, 0.18%)</title><rect x="7.6877%" y="1189" width="0.1816%" height="15" fill="rgb(206,43,11)" fg:x="127" fg:w="3"/><text x="7.9377%" y="1199.50"></text></g><g><title>&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (2 samples, 0.12%)</title><rect x="7.7482%" y="1173" width="0.1211%" height="15" fill="rgb(243,119,3)" fg:x="128" fg:w="2"/><text x="7.9982%" y="1183.50"></text></g><g><title>hyper::body::body::Body::poll_inner (1 samples, 0.06%)</title><rect x="7.8087%" y="1157" width="0.0605%" height="15" fill="rgb(242,16,17)" fg:x="129" fg:w="1"/><text x="8.0587%" y="1167.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.06%)</title><rect x="7.8087%" y="1141" width="0.0605%" height="15" fill="rgb(237,214,52)" fg:x="129" fg:w="1"/><text x="8.0587%" y="1151.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.06%)</title><rect x="7.8087%" y="1125" width="0.0605%" height="15" fill="rgb(237,15,16)" fg:x="129" fg:w="1"/><text x="8.0587%" y="1135.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1 samples, 0.06%)</title><rect x="7.8087%" y="1109" width="0.0605%" height="15" fill="rgb(225,20,8)" fg:x="129" fg:w="1"/><text x="8.0587%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="7.8692%" y="1173" width="0.0605%" height="15" fill="rgb(251,65,42)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="7.8692%" y="1157" width="0.0605%" height="15" fill="rgb(239,104,10)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.06%)</title><rect x="7.8692%" y="1141" width="0.0605%" height="15" fill="rgb(229,121,46)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.06%)</title><rect x="7.8692%" y="1125" width="0.0605%" height="15" fill="rgb(221,172,50)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="7.8692%" y="1109" width="0.0605%" height="15" fill="rgb(216,42,52)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="7.8692%" y="1093" width="0.0605%" height="15" fill="rgb(249,207,12)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="7.8692%" y="1077" width="0.0605%" height="15" fill="rgb(224,194,14)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="7.8692%" y="1061" width="0.0605%" height="15" fill="rgb(227,204,5)" fg:x="130" fg:w="1"/><text x="8.1192%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="8.0508%" y="1109" width="0.0605%" height="15" fill="rgb(223,178,53)" fg:x="133" fg:w="1"/><text x="8.3008%" y="1119.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="8.1114%" y="1109" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="134" fg:w="1"/><text x="8.3614%" y="1119.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="8.1114%" y="1093" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="134" fg:w="1"/><text x="8.3614%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.06%)</title><rect x="8.1719%" y="1109" width="0.0605%" height="15" fill="rgb(225,73,9)" fg:x="135" fg:w="1"/><text x="8.4219%" y="1119.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.06%)</title><rect x="8.1719%" y="1093" width="0.0605%" height="15" fill="rgb(212,12,23)" fg:x="135" fg:w="1"/><text x="8.4219%" y="1103.50"></text></g><g><title>__aarch64_ldadd8_acq_rel (1 samples, 0.06%)</title><rect x="8.1719%" y="1077" width="0.0605%" height="15" fill="rgb(244,110,8)" fg:x="135" fg:w="1"/><text x="8.4219%" y="1087.50"></text></g><g><title>tokio::sync::oneshot::State::load (1 samples, 0.06%)</title><rect x="8.2324%" y="1109" width="0.0605%" height="15" fill="rgb(236,27,2)" fg:x="136" fg:w="1"/><text x="8.4824%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.36%)</title><rect x="7.9903%" y="1141" width="0.3632%" height="15" fill="rgb(213,225,48)" fg:x="132" fg:w="6"/><text x="8.2403%" y="1151.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.36%)</title><rect x="7.9903%" y="1125" width="0.3632%" height="15" fill="rgb(220,7,36)" fg:x="132" fg:w="6"/><text x="8.2403%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (1 samples, 0.06%)</title><rect x="8.2930%" y="1109" width="0.0605%" height="15" fill="rgb(232,92,9)" fg:x="137" fg:w="1"/><text x="8.5430%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (8 samples, 0.48%)</title><rect x="7.9903%" y="1157" width="0.4843%" height="15" fill="rgb(208,61,0)" fg:x="132" fg:w="8"/><text x="8.2403%" y="1167.50"></text></g><g><title>__GI___memcpy_simd (2 samples, 0.12%)</title><rect x="8.3535%" y="1141" width="0.1211%" height="15" fill="rgb(208,42,30)" fg:x="138" fg:w="2"/><text x="8.6035%" y="1151.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="8.4746%" y="1141" width="0.0605%" height="15" fill="rgb(250,228,2)" fg:x="140" fg:w="1"/><text x="8.7246%" y="1151.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.06%)</title><rect x="8.4746%" y="1125" width="0.0605%" height="15" fill="rgb(222,198,6)" fg:x="140" fg:w="1"/><text x="8.7246%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="8.4746%" y="1109" width="0.0605%" height="15" fill="rgb(236,225,40)" fg:x="140" fg:w="1"/><text x="8.7246%" y="1119.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="8.4746%" y="1157" width="0.1211%" height="15" fill="rgb(212,174,39)" fg:x="140" fg:w="2"/><text x="8.7246%" y="1167.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="8.5351%" y="1141" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="141" fg:w="1"/><text x="8.7851%" y="1151.50"></text></g><g><title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (2 samples, 0.12%)</title><rect x="8.5956%" y="1157" width="0.1211%" height="15" fill="rgb(209,96,17)" fg:x="142" fg:w="2"/><text x="8.8456%" y="1167.50"></text></g><g><title>bytes::bytes::shared_clone (1 samples, 0.06%)</title><rect x="8.6562%" y="1141" width="0.0605%" height="15" fill="rgb(213,143,48)" fg:x="143" fg:w="1"/><text x="8.9062%" y="1151.50"></text></g><g><title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (1 samples, 0.06%)</title><rect x="8.7167%" y="1157" width="0.0605%" height="15" fill="rgb(216,224,12)" fg:x="144" fg:w="1"/><text x="8.9667%" y="1167.50"></text></g><g><title>http::extensions::Extensions::insert (1 samples, 0.06%)</title><rect x="8.7167%" y="1141" width="0.0605%" height="15" fill="rgb(244,77,15)" fg:x="144" fg:w="1"/><text x="8.9667%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.06%)</title><rect x="8.7167%" y="1125" width="0.0605%" height="15" fill="rgb(207,42,35)" fg:x="144" fg:w="1"/><text x="8.9667%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;&gt; (1 samples, 0.06%)</title><rect x="8.7772%" y="1157" width="0.0605%" height="15" fill="rgb(206,123,9)" fg:x="145" fg:w="1"/><text x="9.0272%" y="1167.50"></text></g><g><title>&lt;hyper::client::client::PoolClient&lt;B&gt; as hyper::client::pool::Poolable&gt;::is_open (1 samples, 0.06%)</title><rect x="8.8378%" y="1125" width="0.0605%" height="15" fill="rgb(251,192,42)" fg:x="146" fg:w="1"/><text x="9.0878%" y="1135.50"></text></g><g><title>hyper::client::connect::PoisonPill::poisoned (1 samples, 0.06%)</title><rect x="8.8378%" y="1109" width="0.0605%" height="15" fill="rgb(206,186,47)" fg:x="146" fg:w="1"/><text x="9.0878%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="8.9588%" y="1109" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="148" fg:w="1"/><text x="9.2088%" y="1119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.12%)</title><rect x="9.0194%" y="1109" width="0.1211%" height="15" fill="rgb(222,198,6)" fg:x="149" fg:w="2"/><text x="9.2694%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="9.0799%" y="1093" width="0.0605%" height="15" fill="rgb(236,225,40)" fg:x="150" fg:w="1"/><text x="9.3299%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (7 samples, 0.42%)</title><rect x="8.8378%" y="1157" width="0.4237%" height="15" fill="rgb(242,43,17)" fg:x="146" fg:w="7"/><text x="9.0878%" y="1167.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.42%)</title><rect x="8.8378%" y="1141" width="0.4237%" height="15" fill="rgb(248,36,42)" fg:x="146" fg:w="7"/><text x="9.0878%" y="1151.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (6 samples, 0.36%)</title><rect x="8.8983%" y="1125" width="0.3632%" height="15" fill="rgb(221,4,34)" fg:x="147" fg:w="6"/><text x="9.1483%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.12%)</title><rect x="9.1404%" y="1109" width="0.1211%" height="15" fill="rgb(227,203,15)" fg:x="151" fg:w="2"/><text x="9.3904%" y="1119.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.06%)</title><rect x="9.2010%" y="1093" width="0.0605%" height="15" fill="rgb(231,211,11)" fg:x="152" fg:w="1"/><text x="9.4510%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::common::lazy::Lazy&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}},futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error::new_connect&lt;alloc::boxed::Box&lt;dyn core::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;&gt;,futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;,hyper::error::Error&gt;&gt;&gt;,hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;,hyper::error::Error&gt;&gt;&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="9.2615%" y="1157" width="0.0605%" height="15" fill="rgb(208,115,19)" fg:x="153" fg:w="1"/><text x="9.5115%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.06%)</title><rect x="9.2615%" y="1141" width="0.0605%" height="15" fill="rgb(239,65,2)" fg:x="153" fg:w="1"/><text x="9.5115%" y="1151.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.06%)</title><rect x="9.2615%" y="1125" width="0.0605%" height="15" fill="rgb(219,160,23)" fg:x="153" fg:w="1"/><text x="9.5115%" y="1135.50"></text></g><g><title>__aarch64_ldadd8_rel (1 samples, 0.06%)</title><rect x="9.2615%" y="1109" width="0.0605%" height="15" fill="rgb(205,223,40)" fg:x="153" fg:w="1"/><text x="9.5115%" y="1119.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert_phase_two (1 samples, 0.06%)</title><rect x="9.3826%" y="1141" width="0.0605%" height="15" fill="rgb(226,56,21)" fg:x="155" fg:w="1"/><text x="9.6326%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="9.3826%" y="1125" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="155" fg:w="1"/><text x="9.6326%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="9.3826%" y="1109" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="155" fg:w="1"/><text x="9.6326%" y="1119.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="9.3826%" y="1093" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="155" fg:w="1"/><text x="9.6326%" y="1103.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="9.3826%" y="1077" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="155" fg:w="1"/><text x="9.6326%" y="1087.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="9.3826%" y="1061" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="155" fg:w="1"/><text x="9.6326%" y="1071.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (3 samples, 0.18%)</title><rect x="9.3220%" y="1157" width="0.1816%" height="15" fill="rgb(242,213,12)" fg:x="154" fg:w="3"/><text x="9.5720%" y="1167.50"></text></g><g><title>hyper::client::client::get_non_default_port (1 samples, 0.06%)</title><rect x="9.4431%" y="1141" width="0.0605%" height="15" fill="rgb(229,91,17)" fg:x="156" fg:w="1"/><text x="9.6931%" y="1151.50"></text></g><g><title>hyper::client::client::domain_as_uri (1 samples, 0.06%)</title><rect x="9.5036%" y="1157" width="0.0605%" height="15" fill="rgb(252,16,44)" fg:x="157" fg:w="1"/><text x="9.7536%" y="1167.50"></text></g><g><title>http::uri::builder::Builder::path_and_query (1 samples, 0.06%)</title><rect x="9.5036%" y="1141" width="0.0605%" height="15" fill="rgb(229,211,8)" fg:x="157" fg:w="1"/><text x="9.7536%" y="1151.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (1 samples, 0.06%)</title><rect x="9.5036%" y="1125" width="0.0605%" height="15" fill="rgb(227,169,33)" fg:x="157" fg:w="1"/><text x="9.7536%" y="1135.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="9.5036%" y="1109" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="157" fg:w="1"/><text x="9.7536%" y="1119.50"></text></g><g><title>__memmove_simd (1 samples, 0.06%)</title><rect x="9.6852%" y="1125" width="0.0605%" height="15" fill="rgb(243,180,21)" fg:x="160" fg:w="1"/><text x="9.9352%" y="1135.50"></text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (4 samples, 0.24%)</title><rect x="9.5642%" y="1157" width="0.2421%" height="15" fill="rgb(239,124,3)" fg:x="158" fg:w="4"/><text x="9.8142%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (3 samples, 0.18%)</title><rect x="9.6247%" y="1141" width="0.1816%" height="15" fill="rgb(236,93,24)" fg:x="159" fg:w="3"/><text x="9.8747%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.06%)</title><rect x="9.7458%" y="1125" width="0.0605%" height="15" fill="rgb(252,227,42)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.06%)</title><rect x="9.7458%" y="1109" width="0.0605%" height="15" fill="rgb(218,87,16)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1119.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.06%)</title><rect x="9.7458%" y="1093" width="0.0605%" height="15" fill="rgb(221,89,13)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1103.50"></text></g><g><title>syscall (1 samples, 0.06%)</title><rect x="9.7458%" y="1077" width="0.0605%" height="15" fill="rgb(207,84,5)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="9.7458%" y="1061" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1071.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="9.7458%" y="1045" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1055.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="9.7458%" y="1029" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1039.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="9.7458%" y="1013" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1023.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="9.7458%" y="997" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="161" fg:w="1"/><text x="9.9958%" y="1007.50"></text></g><g><title>__arm64_sys_futex (1 samples, 0.06%)</title><rect x="9.7458%" y="981" width="0.0605%" height="15" fill="rgb(221,106,0)" fg:x="161" fg:w="1"/><text x="9.9958%" y="991.50"></text></g><g><title>do_futex (1 samples, 0.06%)</title><rect x="9.7458%" y="965" width="0.0605%" height="15" fill="rgb(249,126,29)" fg:x="161" fg:w="1"/><text x="9.9958%" y="975.50"></text></g><g><title>futex_wake (1 samples, 0.06%)</title><rect x="9.7458%" y="949" width="0.0605%" height="15" fill="rgb(247,80,14)" fg:x="161" fg:w="1"/><text x="9.9958%" y="959.50"></text></g><g><title>wake_up_q (1 samples, 0.06%)</title><rect x="9.7458%" y="933" width="0.0605%" height="15" fill="rgb(236,117,44)" fg:x="161" fg:w="1"/><text x="9.9958%" y="943.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="9.7458%" y="917" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="161" fg:w="1"/><text x="9.9958%" y="927.50"></text></g><g><title>hyper::client::connect::Extra::set (1 samples, 0.06%)</title><rect x="9.8063%" y="1157" width="0.0605%" height="15" fill="rgb(236,142,21)" fg:x="162" fg:w="1"/><text x="10.0563%" y="1167.50"></text></g><g><title>eventfd_write (1 samples, 0.06%)</title><rect x="9.8668%" y="853" width="0.0605%" height="15" fill="rgb(214,207,35)" fg:x="163" fg:w="1"/><text x="10.1168%" y="863.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (35 samples, 2.12%)</title><rect x="7.8692%" y="1189" width="2.1186%" height="15" fill="rgb(218,177,49)" fg:x="130" fg:w="35"/><text x="8.1192%" y="1199.50">&lt;..</text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (34 samples, 2.06%)</title><rect x="7.9298%" y="1173" width="2.0581%" height="15" fill="rgb(221,17,0)" fg:x="131" fg:w="34"/><text x="8.1798%" y="1183.50">h..</text></g><g><title>hyper::common::exec::Exec::execute (2 samples, 0.12%)</title><rect x="9.8668%" y="1157" width="0.1211%" height="15" fill="rgb(215,198,44)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1167.50"></text></g><g><title>tokio::task::spawn::spawn (2 samples, 0.12%)</title><rect x="9.8668%" y="1141" width="0.1211%" height="15" fill="rgb(212,62,21)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1151.50"></text></g><g><title>tokio::runtime::context::current::with_current (2 samples, 0.12%)</title><rect x="9.8668%" y="1125" width="0.1211%" height="15" fill="rgb(228,145,16)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (2 samples, 0.12%)</title><rect x="9.8668%" y="1109" width="0.1211%" height="15" fill="rgb(244,135,35)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (2 samples, 0.12%)</title><rect x="9.8668%" y="1093" width="0.1211%" height="15" fill="rgb(218,87,16)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1103.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (2 samples, 0.12%)</title><rect x="9.8668%" y="1077" width="0.1211%" height="15" fill="rgb(239,226,45)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1087.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (2 samples, 0.12%)</title><rect x="9.8668%" y="1061" width="0.1211%" height="15" fill="rgb(234,68,35)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1071.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.12%)</title><rect x="9.8668%" y="1045" width="0.1211%" height="15" fill="rgb(242,138,15)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.12%)</title><rect x="9.8668%" y="1029" width="0.1211%" height="15" fill="rgb(248,211,26)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1039.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.12%)</title><rect x="9.8668%" y="1013" width="0.1211%" height="15" fill="rgb(247,26,49)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1023.50"></text></g><g><title>__GI___write (2 samples, 0.12%)</title><rect x="9.8668%" y="997" width="0.1211%" height="15" fill="rgb(225,125,48)" fg:x="163" fg:w="2"/><text x="10.1168%" y="1007.50"></text></g><g><title>el0t_64_sync_handler (2 samples, 0.12%)</title><rect x="9.8668%" y="981" width="0.1211%" height="15" fill="rgb(232,35,33)" fg:x="163" fg:w="2"/><text x="10.1168%" y="991.50"></text></g><g><title>el0_svc (2 samples, 0.12%)</title><rect x="9.8668%" y="965" width="0.1211%" height="15" fill="rgb(225,46,33)" fg:x="163" fg:w="2"/><text x="10.1168%" y="975.50"></text></g><g><title>do_el0_svc (2 samples, 0.12%)</title><rect x="9.8668%" y="949" width="0.1211%" height="15" fill="rgb(221,53,8)" fg:x="163" fg:w="2"/><text x="10.1168%" y="959.50"></text></g><g><title>el0_svc_common.constprop.0 (2 samples, 0.12%)</title><rect x="9.8668%" y="933" width="0.1211%" height="15" fill="rgb(219,7,42)" fg:x="163" fg:w="2"/><text x="10.1168%" y="943.50"></text></g><g><title>invoke_syscall (2 samples, 0.12%)</title><rect x="9.8668%" y="917" width="0.1211%" height="15" fill="rgb(234,209,2)" fg:x="163" fg:w="2"/><text x="10.1168%" y="927.50"></text></g><g><title>__arm64_sys_write (2 samples, 0.12%)</title><rect x="9.8668%" y="901" width="0.1211%" height="15" fill="rgb(249,177,38)" fg:x="163" fg:w="2"/><text x="10.1168%" y="911.50"></text></g><g><title>ksys_write (2 samples, 0.12%)</title><rect x="9.8668%" y="885" width="0.1211%" height="15" fill="rgb(223,155,43)" fg:x="163" fg:w="2"/><text x="10.1168%" y="895.50"></text></g><g><title>vfs_write (2 samples, 0.12%)</title><rect x="9.8668%" y="869" width="0.1211%" height="15" fill="rgb(216,184,13)" fg:x="163" fg:w="2"/><text x="10.1168%" y="879.50"></text></g><g><title>rw_verify_area (1 samples, 0.06%)</title><rect x="9.9274%" y="853" width="0.0605%" height="15" fill="rgb(249,222,17)" fg:x="164" fg:w="1"/><text x="10.1774%" y="863.50"></text></g><g><title>security_file_permission (1 samples, 0.06%)</title><rect x="9.9274%" y="837" width="0.0605%" height="15" fill="rgb(224,58,37)" fg:x="164" fg:w="1"/><text x="10.1774%" y="847.50"></text></g><g><title>selinux_file_permission (1 samples, 0.06%)</title><rect x="9.9274%" y="821" width="0.0605%" height="15" fill="rgb(235,59,31)" fg:x="164" fg:w="1"/><text x="10.1774%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="9.9879%" y="1189" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="165" fg:w="1"/><text x="10.2379%" y="1199.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="9.9879%" y="1173" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="165" fg:w="1"/><text x="10.2379%" y="1183.50"></text></g><g><title>bytes::bytes::static_drop (1 samples, 0.06%)</title><rect x="10.0484%" y="1189" width="0.0605%" height="15" fill="rgb(210,11,7)" fg:x="166" fg:w="1"/><text x="10.2984%" y="1199.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.06%)</title><rect x="10.1090%" y="1189" width="0.0605%" height="15" fill="rgb(218,110,40)" fg:x="167" fg:w="1"/><text x="10.3590%" y="1199.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="10.1090%" y="1173" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="167" fg:w="1"/><text x="10.3590%" y="1183.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="10.1090%" y="1157" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="167" fg:w="1"/><text x="10.3590%" y="1167.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="10.1090%" y="1141" width="0.0605%" height="15" fill="rgb(228,194,39)" fg:x="167" fg:w="1"/><text x="10.3590%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.06%)</title><rect x="10.1695%" y="1189" width="0.0605%" height="15" fill="rgb(225,131,44)" fg:x="168" fg:w="1"/><text x="10.4195%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="10.1695%" y="1173" width="0.0605%" height="15" fill="rgb(249,14,2)" fg:x="168" fg:w="1"/><text x="10.4195%" y="1183.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.06%)</title><rect x="10.1695%" y="1157" width="0.0605%" height="15" fill="rgb(218,110,40)" fg:x="168" fg:w="1"/><text x="10.4195%" y="1167.50"></text></g><g><title>__aarch64_ldadd8_rel (1 samples, 0.06%)</title><rect x="10.1695%" y="1141" width="0.0605%" height="15" fill="rgb(205,223,40)" fg:x="168" fg:w="1"/><text x="10.4195%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::client::Pending&gt; (2 samples, 0.12%)</title><rect x="10.2300%" y="1189" width="0.1211%" height="15" fill="rgb(232,125,18)" fg:x="169" fg:w="2"/><text x="10.4800%" y="1199.50"></text></g><g><title>__free (2 samples, 0.12%)</title><rect x="10.2300%" y="1173" width="0.1211%" height="15" fill="rgb(211,107,33)" fg:x="169" fg:w="2"/><text x="10.4800%" y="1183.50"></text></g><g><title>_int_free (2 samples, 0.12%)</title><rect x="10.2300%" y="1157" width="0.1211%" height="15" fill="rgb(221,113,48)" fg:x="169" fg:w="2"/><text x="10.4800%" y="1167.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.06%)</title><rect x="10.4116%" y="1125" width="0.0605%" height="15" fill="rgb(208,114,25)" fg:x="172" fg:w="1"/><text x="10.6616%" y="1135.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.06%)</title><rect x="10.4722%" y="1125" width="0.0605%" height="15" fill="rgb(253,102,50)" fg:x="173" fg:w="1"/><text x="10.7222%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.06%)</title><rect x="10.4722%" y="1109" width="0.0605%" height="15" fill="rgb(241,228,42)" fg:x="173" fg:w="1"/><text x="10.7222%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (3 samples, 0.18%)</title><rect x="10.4116%" y="1141" width="0.1816%" height="15" fill="rgb(218,87,16)" fg:x="172" fg:w="3"/><text x="10.6616%" y="1151.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.06%)</title><rect x="10.5327%" y="1125" width="0.0605%" height="15" fill="rgb(239,226,45)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1135.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.06%)</title><rect x="10.5327%" y="1109" width="0.0605%" height="15" fill="rgb(234,68,35)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1119.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.06%)</title><rect x="10.5327%" y="1093" width="0.0605%" height="15" fill="rgb(242,138,15)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.06%)</title><rect x="10.5327%" y="1077" width="0.0605%" height="15" fill="rgb(248,211,26)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1087.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.06%)</title><rect x="10.5327%" y="1061" width="0.0605%" height="15" fill="rgb(247,26,49)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1071.50"></text></g><g><title>__GI___write (1 samples, 0.06%)</title><rect x="10.5327%" y="1045" width="0.0605%" height="15" fill="rgb(225,125,48)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1055.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="10.5327%" y="1029" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1039.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="10.5327%" y="1013" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1023.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="10.5327%" y="997" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="174" fg:w="1"/><text x="10.7827%" y="1007.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="10.5327%" y="981" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="174" fg:w="1"/><text x="10.7827%" y="991.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="10.5327%" y="965" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="174" fg:w="1"/><text x="10.7827%" y="975.50"></text></g><g><title>__arm64_sys_write (1 samples, 0.06%)</title><rect x="10.5327%" y="949" width="0.0605%" height="15" fill="rgb(249,177,38)" fg:x="174" fg:w="1"/><text x="10.7827%" y="959.50"></text></g><g><title>ksys_write (1 samples, 0.06%)</title><rect x="10.5327%" y="933" width="0.0605%" height="15" fill="rgb(223,155,43)" fg:x="174" fg:w="1"/><text x="10.7827%" y="943.50"></text></g><g><title>vfs_write (1 samples, 0.06%)</title><rect x="10.5327%" y="917" width="0.0605%" height="15" fill="rgb(216,184,13)" fg:x="174" fg:w="1"/><text x="10.7827%" y="927.50"></text></g><g><title>eventfd_write (1 samples, 0.06%)</title><rect x="10.5327%" y="901" width="0.0605%" height="15" fill="rgb(214,207,35)" fg:x="174" fg:w="1"/><text x="10.7827%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::decoder::Decoder&gt; (5 samples, 0.30%)</title><rect x="10.3511%" y="1189" width="0.3027%" height="15" fill="rgb(237,166,47)" fg:x="171" fg:w="5"/><text x="10.6011%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::body::WrapHyper&gt; (5 samples, 0.30%)</title><rect x="10.3511%" y="1173" width="0.3027%" height="15" fill="rgb(223,211,46)" fg:x="171" fg:w="5"/><text x="10.6011%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (4 samples, 0.24%)</title><rect x="10.4116%" y="1157" width="0.2421%" height="15" fill="rgb(252,227,42)" fg:x="172" fg:w="4"/><text x="10.6616%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.06%)</title><rect x="10.5932%" y="1141" width="0.0605%" height="15" fill="rgb(231,3,13)" fg:x="175" fg:w="1"/><text x="10.8432%" y="1151.50"></text></g><g><title>encoding_rs::Encoding::decode_without_bom_handling (2 samples, 0.12%)</title><rect x="10.6538%" y="1189" width="0.1211%" height="15" fill="rgb(237,143,4)" fg:x="176" fg:w="2"/><text x="10.9038%" y="1199.50"></text></g><g><title>encoding_rs::utf_8::utf8_valid_up_to (1 samples, 0.06%)</title><rect x="10.7143%" y="1173" width="0.0605%" height="15" fill="rgb(232,227,46)" fg:x="177" fg:w="1"/><text x="10.9643%" y="1183.50"></text></g><g><title>encoding_rs::Encoding::for_label (1 samples, 0.06%)</title><rect x="10.7748%" y="1189" width="0.0605%" height="15" fill="rgb(253,224,5)" fg:x="178" fg:w="1"/><text x="11.0248%" y="1199.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (1 samples, 0.06%)</title><rect x="10.8354%" y="1189" width="0.0605%" height="15" fill="rgb(212,167,40)" fg:x="179" fg:w="1"/><text x="11.0854%" y="1199.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.06%)</title><rect x="10.8354%" y="1173" width="0.0605%" height="15" fill="rgb(240,209,8)" fg:x="179" fg:w="1"/><text x="11.0854%" y="1183.50"></text></g><g><title>reqwest::async_impl::client::Client::get (1 samples, 0.06%)</title><rect x="10.8959%" y="1189" width="0.0605%" height="15" fill="rgb(250,38,12)" fg:x="180" fg:w="1"/><text x="11.1459%" y="1199.50"></text></g><g><title>reqwest::async_impl::request::RequestBuilder::new (1 samples, 0.06%)</title><rect x="10.8959%" y="1173" width="0.0605%" height="15" fill="rgb(212,55,43)" fg:x="180" fg:w="1"/><text x="11.1459%" y="1183.50"></text></g><g><title>reqwest::async_impl::request::RequestBuilder::header (2 samples, 0.12%)</title><rect x="10.9564%" y="1189" width="0.1211%" height="15" fill="rgb(211,203,32)" fg:x="181" fg:w="2"/><text x="11.2064%" y="1199.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (1 samples, 0.06%)</title><rect x="11.0169%" y="1173" width="0.0605%" height="15" fill="rgb(227,169,33)" fg:x="182" fg:w="1"/><text x="11.2669%" y="1183.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="11.0169%" y="1157" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="182" fg:w="1"/><text x="11.2669%" y="1167.50"></text></g><g><title>reqwest::async_impl::request::RequestBuilder::query (2 samples, 0.12%)</title><rect x="11.0775%" y="1189" width="0.1211%" height="15" fill="rgb(215,36,50)" fg:x="183" fg:w="2"/><text x="11.3275%" y="1199.50"></text></g><g><title>alloy_etherscan::_::&lt;impl serde::ser::Serialize for alloy_etherscan::Query&lt;T&gt;&gt;::serialize (2 samples, 0.12%)</title><rect x="11.0775%" y="1173" width="0.1211%" height="15" fill="rgb(241,89,34)" fg:x="183" fg:w="2"/><text x="11.3275%" y="1183.50"></text></g><g><title>&lt;serde_urlencoded::ser::key::KeySink&lt;End&gt; as serde_urlencoded::ser::part::Sink&gt;::serialize_str (1 samples, 0.06%)</title><rect x="11.1380%" y="1157" width="0.0605%" height="15" fill="rgb(207,94,24)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1167.50"></text></g><g><title>form_urlencoded::append_pair (1 samples, 0.06%)</title><rect x="11.1380%" y="1141" width="0.0605%" height="15" fill="rgb(213,135,12)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (1 samples, 0.06%)</title><rect x="11.1380%" y="1125" width="0.0605%" height="15" fill="rgb(247,27,42)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="11.1380%" y="1109" width="0.0605%" height="15" fill="rgb(249,2,22)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="11.1380%" y="1093" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1103.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="11.1380%" y="1077" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1087.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="11.1380%" y="1061" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1071.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="11.1380%" y="1045" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="184" fg:w="1"/><text x="11.3880%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.06%)</title><rect x="11.1985%" y="1157" width="0.0605%" height="15" fill="rgb(225,131,44)" fg:x="185" fg:w="1"/><text x="11.4485%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="11.1985%" y="1141" width="0.0605%" height="15" fill="rgb(249,14,2)" fg:x="185" fg:w="1"/><text x="11.4485%" y="1151.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::entry (1 samples, 0.06%)</title><rect x="11.2591%" y="1157" width="0.0605%" height="15" fill="rgb(235,42,23)" fg:x="186" fg:w="1"/><text x="11.5091%" y="1167.50"></text></g><g><title>http::request::Builder::version (1 samples, 0.06%)</title><rect x="11.3196%" y="1157" width="0.0605%" height="15" fill="rgb(244,94,48)" fg:x="187" fg:w="1"/><text x="11.5696%" y="1167.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (2 samples, 0.12%)</title><rect x="11.4407%" y="1141" width="0.1211%" height="15" fill="rgb(236,215,24)" fg:x="189" fg:w="2"/><text x="11.6907%" y="1151.50"></text></g><g><title>http::uri::Uri::from_shared (4 samples, 0.24%)</title><rect x="11.3801%" y="1157" width="0.2421%" height="15" fill="rgb(228,65,39)" fg:x="188" fg:w="4"/><text x="11.6301%" y="1167.50"></text></g><g><title>http::uri::scheme::Scheme2&lt;usize&gt;::parse (1 samples, 0.06%)</title><rect x="11.5617%" y="1141" width="0.0605%" height="15" fill="rgb(216,135,15)" fg:x="191" fg:w="1"/><text x="11.8117%" y="1151.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.36%)</title><rect x="11.6828%" y="1141" width="0.3632%" height="15" fill="rgb(206,112,53)" fg:x="193" fg:w="6"/><text x="11.9328%" y="1151.50"></text></g><g><title>_int_malloc (6 samples, 0.36%)</title><rect x="11.6828%" y="1125" width="0.3632%" height="15" fill="rgb(222,219,51)" fg:x="193" fg:w="6"/><text x="11.9328%" y="1135.50"></text></g><g><title>malloc_consolidate (4 samples, 0.24%)</title><rect x="11.8039%" y="1109" width="0.2421%" height="15" fill="rgb(228,194,39)" fg:x="195" fg:w="4"/><text x="12.0539%" y="1119.50"></text></g><g><title>alloy_etherscan::Client::get::{{closure}} (77 samples, 4.66%)</title><rect x="7.4455%" y="1205" width="4.6610%" height="15" fill="rgb(236,161,47)" fg:x="123" fg:w="77"/><text x="7.6955%" y="1215.50">alloy..</text></g><g><title>reqwest::async_impl::request::RequestBuilder::send (15 samples, 0.91%)</title><rect x="11.1985%" y="1189" width="0.9080%" height="15" fill="rgb(233,44,49)" fg:x="185" fg:w="15"/><text x="11.4485%" y="1199.50"></text></g><g><title>reqwest::async_impl::client::Client::execute_request (15 samples, 0.91%)</title><rect x="11.1985%" y="1173" width="0.9080%" height="15" fill="rgb(213,55,18)" fg:x="185" fg:w="15"/><text x="11.4485%" y="1183.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::request (8 samples, 0.48%)</title><rect x="11.6223%" y="1157" width="0.4843%" height="15" fill="rgb(243,179,47)" fg:x="192" fg:w="8"/><text x="11.8723%" y="1167.50"></text></g><g><title>hyper::client::client::extract_domain (1 samples, 0.06%)</title><rect x="12.0460%" y="1141" width="0.0605%" height="15" fill="rgb(216,43,54)" fg:x="199" fg:w="1"/><text x="12.2960%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.06%)</title><rect x="12.0460%" y="1125" width="0.0605%" height="15" fill="rgb(239,65,2)" fg:x="199" fg:w="1"/><text x="12.2960%" y="1135.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.06%)</title><rect x="12.1065%" y="1045" width="0.0605%" height="15" fill="rgb(248,218,43)" fg:x="200" fg:w="1"/><text x="12.3565%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.18%)</title><rect x="12.1065%" y="1061" width="0.1816%" height="15" fill="rgb(226,35,37)" fg:x="200" fg:w="3"/><text x="12.3565%" y="1071.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.12%)</title><rect x="12.1671%" y="1045" width="0.1211%" height="15" fill="rgb(223,146,53)" fg:x="201" fg:w="2"/><text x="12.4171%" y="1055.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.24%)</title><rect x="12.2881%" y="1061" width="0.2421%" height="15" fill="rgb(206,112,53)" fg:x="203" fg:w="4"/><text x="12.5381%" y="1071.50"></text></g><g><title>_int_malloc (2 samples, 0.12%)</title><rect x="12.4092%" y="1045" width="0.1211%" height="15" fill="rgb(222,219,51)" fg:x="205" fg:w="2"/><text x="12.6592%" y="1055.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="12.4697%" y="1029" width="0.0605%" height="15" fill="rgb(237,173,29)" fg:x="206" fg:w="1"/><text x="12.7197%" y="1039.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="12.5303%" y="1061" width="0.0605%" height="15" fill="rgb(241,201,43)" fg:x="207" fg:w="1"/><text x="12.7803%" y="1071.50"></text></g><g><title>alloy_sol_type_parser::ident::is_valid_identifier::is_valid_identifier (2 samples, 0.12%)</title><rect x="12.5908%" y="1061" width="0.1211%" height="15" fill="rgb(237,149,3)" fg:x="208" fg:w="2"/><text x="12.8408%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.06%)</title><rect x="12.7724%" y="1045" width="0.0605%" height="15" fill="rgb(212,9,50)" fg:x="211" fg:w="1"/><text x="13.0224%" y="1055.50"></text></g><g><title>alloy_sol_type_parser::type_spec::TypeSpecifier::parse (4 samples, 0.24%)</title><rect x="12.7119%" y="1061" width="0.2421%" height="15" fill="rgb(246,41,25)" fg:x="210" fg:w="4"/><text x="12.9619%" y="1071.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (2 samples, 0.12%)</title><rect x="12.8329%" y="1045" width="0.1211%" height="15" fill="rgb(210,198,33)" fg:x="212" fg:w="2"/><text x="13.0829%" y="1055.50"></text></g><g><title>core::slice::memchr::memrchr (1 samples, 0.06%)</title><rect x="12.8935%" y="1029" width="0.0605%" height="15" fill="rgb(253,59,53)" fg:x="213" fg:w="1"/><text x="13.1435%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (1 samples, 0.06%)</title><rect x="12.8935%" y="1013" width="0.0605%" height="15" fill="rgb(218,223,4)" fg:x="213" fg:w="1"/><text x="13.1435%" y="1023.50"></text></g><g><title>&lt;alloy_json_abi::param::EventParam as serde::de::Deserialize&gt;::deserialize (17 samples, 1.03%)</title><rect x="12.1065%" y="1077" width="1.0291%" height="15" fill="rgb(209,170,24)" fg:x="200" fg:w="17"/><text x="12.3565%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.18%)</title><rect x="12.9540%" y="1061" width="0.1816%" height="15" fill="rgb(254,35,30)" fg:x="214" fg:w="3"/><text x="13.2040%" y="1071.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.18%)</title><rect x="12.9540%" y="1045" width="0.1816%" height="15" fill="rgb(206,112,53)" fg:x="214" fg:w="3"/><text x="13.2040%" y="1055.50"></text></g><g><title>_int_malloc (3 samples, 0.18%)</title><rect x="12.9540%" y="1029" width="0.1816%" height="15" fill="rgb(222,219,51)" fg:x="214" fg:w="3"/><text x="13.2040%" y="1039.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="13.0751%" y="1013" width="0.0605%" height="15" fill="rgb(237,173,29)" fg:x="216" fg:w="1"/><text x="13.3251%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="13.3172%" y="1045" width="0.0605%" height="15" fill="rgb(242,69,50)" fg:x="220" fg:w="1"/><text x="13.5672%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.12%)</title><rect x="13.3777%" y="1045" width="0.1211%" height="15" fill="rgb(248,218,43)" fg:x="221" fg:w="2"/><text x="13.6277%" y="1055.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (2 samples, 0.12%)</title><rect x="13.3777%" y="1029" width="0.1211%" height="15" fill="rgb(246,217,1)" fg:x="221" fg:w="2"/><text x="13.6277%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.06%)</title><rect x="13.4383%" y="1013" width="0.0605%" height="15" fill="rgb(227,27,28)" fg:x="222" fg:w="1"/><text x="13.6883%" y="1023.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.06%)</title><rect x="13.4988%" y="981" width="0.0605%" height="15" fill="rgb(248,218,43)" fg:x="223" fg:w="1"/><text x="13.7488%" y="991.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.06%)</title><rect x="13.4988%" y="965" width="0.0605%" height="15" fill="rgb(246,217,1)" fg:x="223" fg:w="1"/><text x="13.7488%" y="975.50"></text></g><g><title>alloy_json_abi::internal_type::BorrowedInternalType::parse (1 samples, 0.06%)</title><rect x="13.4988%" y="949" width="0.0605%" height="15" fill="rgb(253,28,2)" fg:x="223" fg:w="1"/><text x="13.7488%" y="959.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.06%)</title><rect x="13.5593%" y="981" width="0.0605%" height="15" fill="rgb(210,197,34)" fg:x="224" fg:w="1"/><text x="13.8093%" y="991.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.06%)</title><rect x="13.5593%" y="965" width="0.0605%" height="15" fill="rgb(217,166,7)" fg:x="224" fg:w="1"/><text x="13.8093%" y="975.50"></text></g><g><title>&lt;alloy_json_abi::param::Param as serde::de::Deserialize&gt;::deserialize (1 samples, 0.06%)</title><rect x="13.5593%" y="949" width="0.0605%" height="15" fill="rgb(245,108,33)" fg:x="224" fg:w="1"/><text x="13.8093%" y="959.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.06%)</title><rect x="13.5593%" y="933" width="0.0605%" height="15" fill="rgb(226,35,37)" fg:x="224" fg:w="1"/><text x="13.8093%" y="943.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.06%)</title><rect x="13.5593%" y="917" width="0.0605%" height="15" fill="rgb(223,146,53)" fg:x="224" fg:w="1"/><text x="13.8093%" y="927.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.18%)</title><rect x="13.4988%" y="997" width="0.1816%" height="15" fill="rgb(226,35,37)" fg:x="223" fg:w="3"/><text x="13.7488%" y="1007.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.06%)</title><rect x="13.6199%" y="981" width="0.0605%" height="15" fill="rgb(223,146,53)" fg:x="225" fg:w="1"/><text x="13.8699%" y="991.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="13.6804%" y="997" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="226" fg:w="1"/><text x="13.9304%" y="1007.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="13.6804%" y="981" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="226" fg:w="1"/><text x="13.9304%" y="991.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="13.6804%" y="965" width="0.0605%" height="15" fill="rgb(237,173,29)" fg:x="226" fg:w="1"/><text x="13.9304%" y="975.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (5 samples, 0.30%)</title><rect x="13.4988%" y="1045" width="0.3027%" height="15" fill="rgb(210,197,34)" fg:x="223" fg:w="5"/><text x="13.7488%" y="1055.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.30%)</title><rect x="13.4988%" y="1029" width="0.3027%" height="15" fill="rgb(217,166,7)" fg:x="223" fg:w="5"/><text x="13.7488%" y="1039.50"></text></g><g><title>&lt;alloy_json_abi::param::Param as serde::de::Deserialize&gt;::deserialize (5 samples, 0.30%)</title><rect x="13.4988%" y="1013" width="0.3027%" height="15" fill="rgb(245,108,33)" fg:x="223" fg:w="5"/><text x="13.7488%" y="1023.50"></text></g><g><title>alloy_sol_type_parser::type_spec::TypeSpecifier::parse (1 samples, 0.06%)</title><rect x="13.7409%" y="997" width="0.0605%" height="15" fill="rgb(246,41,25)" fg:x="227" fg:w="1"/><text x="13.9909%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="13.7409%" y="981" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="227" fg:w="1"/><text x="13.9909%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="13.7409%" y="965" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="227" fg:w="1"/><text x="13.9909%" y="975.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="13.7409%" y="949" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="227" fg:w="1"/><text x="13.9909%" y="959.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="13.7409%" y="933" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="227" fg:w="1"/><text x="13.9909%" y="943.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.18%)</title><rect x="14.3462%" y="1029" width="0.1816%" height="15" fill="rgb(249,176,17)" fg:x="237" fg:w="3"/><text x="14.5962%" y="1039.50"></text></g><g><title>&lt;alloy_json_abi::param::_::&lt;impl serde::de::Deserialize for alloy_json_abi::param::BorrowedParam&lt;T&gt;&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.06%)</title><rect x="14.4673%" y="1013" width="0.0605%" height="15" fill="rgb(242,3,34)" fg:x="239" fg:w="1"/><text x="14.7173%" y="1023.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (24 samples, 1.45%)</title><rect x="13.1356%" y="1061" width="1.4528%" height="15" fill="rgb(226,35,37)" fg:x="217" fg:w="24"/><text x="13.3856%" y="1071.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (13 samples, 0.79%)</title><rect x="13.8015%" y="1045" width="0.7869%" height="15" fill="rgb(223,146,53)" fg:x="228" fg:w="13"/><text x="14.0515%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.06%)</title><rect x="14.5278%" y="1029" width="0.0605%" height="15" fill="rgb(227,27,28)" fg:x="240" fg:w="1"/><text x="14.7778%" y="1039.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.18%)</title><rect x="14.5884%" y="1061" width="0.1816%" height="15" fill="rgb(206,112,53)" fg:x="241" fg:w="3"/><text x="14.8384%" y="1071.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="14.7094%" y="1045" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="243" fg:w="1"/><text x="14.9594%" y="1055.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="14.7094%" y="1029" width="0.0605%" height="15" fill="rgb(237,173,29)" fg:x="243" fg:w="1"/><text x="14.9594%" y="1039.50"></text></g><g><title>__GI_memcmp (1 samples, 0.06%)</title><rect x="14.8910%" y="1029" width="0.0605%" height="15" fill="rgb(230,39,14)" fg:x="246" fg:w="1"/><text x="15.1410%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (1 samples, 0.06%)</title><rect x="14.9516%" y="1013" width="0.0605%" height="15" fill="rgb(218,223,4)" fg:x="247" fg:w="1"/><text x="15.2016%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.06%)</title><rect x="14.9516%" y="997" width="0.0605%" height="15" fill="rgb(214,167,1)" fg:x="247" fg:w="1"/><text x="15.2016%" y="1007.50"></text></g><g><title>alloy_sol_type_parser::type_spec::TypeSpecifier::parse (5 samples, 0.30%)</title><rect x="14.7700%" y="1061" width="0.3027%" height="15" fill="rgb(246,41,25)" fg:x="244" fg:w="5"/><text x="15.0200%" y="1071.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (4 samples, 0.24%)</title><rect x="14.8305%" y="1045" width="0.2421%" height="15" fill="rgb(210,198,33)" fg:x="245" fg:w="4"/><text x="15.0805%" y="1055.50"></text></g><g><title>core::slice::memchr::memrchr (2 samples, 0.12%)</title><rect x="14.9516%" y="1029" width="0.1211%" height="15" fill="rgb(253,59,53)" fg:x="247" fg:w="2"/><text x="15.2016%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to (1 samples, 0.06%)</title><rect x="15.0121%" y="1013" width="0.0605%" height="15" fill="rgb(229,8,49)" fg:x="248" fg:w="1"/><text x="15.2621%" y="1023.50"></text></g><g><title>core::ptr::align_offset (1 samples, 0.06%)</title><rect x="15.0121%" y="997" width="0.0605%" height="15" fill="rgb(218,59,43)" fg:x="248" fg:w="1"/><text x="15.2621%" y="1007.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (52 samples, 3.15%)</title><rect x="12.1065%" y="1125" width="3.1477%" height="15" fill="rgb(226,35,37)" fg:x="200" fg:w="52"/><text x="12.3565%" y="1135.50">&lt;se..</text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (52 samples, 3.15%)</title><rect x="12.1065%" y="1109" width="3.1477%" height="15" fill="rgb(210,197,34)" fg:x="200" fg:w="52"/><text x="12.3565%" y="1119.50">&lt;se..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (52 samples, 3.15%)</title><rect x="12.1065%" y="1093" width="3.1477%" height="15" fill="rgb(217,166,7)" fg:x="200" fg:w="52"/><text x="12.3565%" y="1103.50">&lt;se..</text></g><g><title>&lt;alloy_json_abi::param::Param as serde::de::Deserialize&gt;::deserialize (35 samples, 2.12%)</title><rect x="13.1356%" y="1077" width="2.1186%" height="15" fill="rgb(245,108,33)" fg:x="217" fg:w="35"/><text x="13.3856%" y="1087.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.18%)</title><rect x="15.0726%" y="1061" width="0.1816%" height="15" fill="rgb(254,35,30)" fg:x="249" fg:w="3"/><text x="15.3226%" y="1071.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.12%)</title><rect x="15.1332%" y="1045" width="0.1211%" height="15" fill="rgb(206,112,53)" fg:x="250" fg:w="2"/><text x="15.3832%" y="1055.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="15.1937%" y="1029" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="251" fg:w="1"/><text x="15.4437%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.06%)</title><rect x="15.2542%" y="949" width="0.0605%" height="15" fill="rgb(219,51,17)" fg:x="252" fg:w="1"/><text x="15.5042%" y="959.50"></text></g><g><title>alloy_etherscan::contract::&lt;impl alloy_etherscan::Client&gt;::contract_abi::{{closure}} (131 samples, 7.93%)</title><rect x="7.4455%" y="1221" width="7.9298%" height="15" fill="rgb(238,164,6)" fg:x="123" fg:w="131"/><text x="7.6955%" y="1231.50">alloy_ether..</text></g><g><title>serde_json::de::from_str (54 samples, 3.27%)</title><rect x="12.1065%" y="1205" width="3.2688%" height="15" fill="rgb(217,198,13)" fg:x="200" fg:w="54"/><text x="12.3565%" y="1215.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (54 samples, 3.27%)</title><rect x="12.1065%" y="1189" width="3.2688%" height="15" fill="rgb(211,112,39)" fg:x="200" fg:w="54"/><text x="12.3565%" y="1199.50">&lt;&amp;m..</text></g><g><title>&lt;alloy_json_abi::abi::JsonAbiVisitor as serde::de::Visitor&gt;::visit_seq (54 samples, 3.27%)</title><rect x="12.1065%" y="1173" width="3.2688%" height="15" fill="rgb(231,180,14)" fg:x="200" fg:w="54"/><text x="12.3565%" y="1183.50">&lt;al..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (54 samples, 3.27%)</title><rect x="12.1065%" y="1157" width="3.2688%" height="15" fill="rgb(230,9,2)" fg:x="200" fg:w="54"/><text x="12.3565%" y="1167.50">&lt;se..</text></g><g><title>alloy_json_abi::item::private::_::&lt;impl serde::de::Deserialize for alloy_json_abi::item::private::AbiItem&gt;::deserialize (54 samples, 3.27%)</title><rect x="12.1065%" y="1141" width="3.2688%" height="15" fill="rgb(234,149,20)" fg:x="200" fg:w="54"/><text x="12.3565%" y="1151.50">all..</text></g><g><title>&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.12%)</title><rect x="15.2542%" y="1125" width="0.1211%" height="15" fill="rgb(253,229,0)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1135.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (2 samples, 0.12%)</title><rect x="15.2542%" y="1109" width="0.1211%" height="15" fill="rgb(237,93,40)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1119.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.12%)</title><rect x="15.2542%" y="1093" width="0.1211%" height="15" fill="rgb(225,164,41)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1103.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.12%)</title><rect x="15.2542%" y="1077" width="0.1211%" height="15" fill="rgb(230,9,2)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1087.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (2 samples, 0.12%)</title><rect x="15.2542%" y="1061" width="0.1211%" height="15" fill="rgb(237,93,40)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1071.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.12%)</title><rect x="15.2542%" y="1045" width="0.1211%" height="15" fill="rgb(245,180,7)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1055.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (2 samples, 0.12%)</title><rect x="15.2542%" y="1029" width="0.1211%" height="15" fill="rgb(237,93,40)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1039.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.12%)</title><rect x="15.2542%" y="1013" width="0.1211%" height="15" fill="rgb(225,164,41)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1023.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.12%)</title><rect x="15.2542%" y="997" width="0.1211%" height="15" fill="rgb(230,9,2)" fg:x="252" fg:w="2"/><text x="15.5042%" y="1007.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (2 samples, 0.12%)</title><rect x="15.2542%" y="981" width="0.1211%" height="15" fill="rgb(237,93,40)" fg:x="252" fg:w="2"/><text x="15.5042%" y="991.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.12%)</title><rect x="15.2542%" y="965" width="0.1211%" height="15" fill="rgb(245,180,7)" fg:x="252" fg:w="2"/><text x="15.5042%" y="975.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (1 samples, 0.06%)</title><rect x="15.3148%" y="949" width="0.0605%" height="15" fill="rgb(237,93,40)" fg:x="253" fg:w="1"/><text x="15.5648%" y="959.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.06%)</title><rect x="15.3148%" y="933" width="0.0605%" height="15" fill="rgb(249,130,0)" fg:x="253" fg:w="1"/><text x="15.5648%" y="943.50"></text></g><g><title>EVP_KEYMGMT_is_a (1 samples, 0.06%)</title><rect x="15.3753%" y="885" width="0.0605%" height="15" fill="rgb(212,106,6)" fg:x="254" fg:w="1"/><text x="15.6253%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="15.3753%" y="869" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="1"/><text x="15.6253%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="15.3753%" y="853" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="1"/><text x="15.6253%" y="863.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.06%)</title><rect x="15.3753%" y="837" width="0.0605%" height="15" fill="rgb(251,110,52)" fg:x="254" fg:w="1"/><text x="15.6253%" y="847.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.06%)</title><rect x="15.3753%" y="821" width="0.0605%" height="15" fill="rgb(226,98,8)" fg:x="254" fg:w="1"/><text x="15.6253%" y="831.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.12%)</title><rect x="15.6174%" y="821" width="0.1211%" height="15" fill="rgb(251,110,52)" fg:x="258" fg:w="2"/><text x="15.8674%" y="831.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 0.12%)</title><rect x="15.6174%" y="805" width="0.1211%" height="15" fill="rgb(226,98,8)" fg:x="258" fg:w="2"/><text x="15.8674%" y="815.50"></text></g><g><title>CRYPTO_THREAD_unlock (2 samples, 0.12%)</title><rect x="15.7385%" y="821" width="0.1211%" height="15" fill="rgb(231,206,42)" fg:x="260" fg:w="2"/><text x="15.9885%" y="831.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 0.12%)</title><rect x="15.7385%" y="805" width="0.1211%" height="15" fill="rgb(239,157,37)" fg:x="260" fg:w="2"/><text x="15.9885%" y="815.50"></text></g><g><title>OPENSSL_strcasecmp (2 samples, 0.12%)</title><rect x="15.9201%" y="789" width="0.1211%" height="15" fill="rgb(229,15,51)" fg:x="263" fg:w="2"/><text x="16.1701%" y="799.50"></text></g><g><title>OPENSSL_LH_retrieve (4 samples, 0.24%)</title><rect x="15.8596%" y="821" width="0.2421%" height="15" fill="rgb(211,135,50)" fg:x="262" fg:w="4"/><text x="16.1096%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="15.8596%" y="805" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="262" fg:w="4"/><text x="16.1096%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.0412%" y="789" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="265" fg:w="1"/><text x="16.2912%" y="799.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (13 samples, 0.79%)</title><rect x="15.4358%" y="885" width="0.7869%" height="15" fill="rgb(243,10,12)" fg:x="255" fg:w="13"/><text x="15.6858%" y="895.50"></text></g><g><title>OSSL_DECODER_is_a (13 samples, 0.79%)</title><rect x="15.4358%" y="869" width="0.7869%" height="15" fill="rgb(220,153,48)" fg:x="255" fg:w="13"/><text x="15.6858%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (12 samples, 0.73%)</title><rect x="15.4964%" y="853" width="0.7264%" height="15" fill="rgb(222,124,3)" fg:x="256" fg:w="12"/><text x="15.7464%" y="863.50"></text></g><g><title>[libcrypto.so.3.0.8] (12 samples, 0.73%)</title><rect x="15.4964%" y="837" width="0.7264%" height="15" fill="rgb(222,124,3)" fg:x="256" fg:w="12"/><text x="15.7464%" y="847.50"></text></g><g><title>___pthread_getspecific (2 samples, 0.12%)</title><rect x="16.1017%" y="821" width="0.1211%" height="15" fill="rgb(226,150,32)" fg:x="266" fg:w="2"/><text x="16.3517%" y="831.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.12%)</title><rect x="16.2228%" y="773" width="0.1211%" height="15" fill="rgb(251,110,52)" fg:x="268" fg:w="2"/><text x="16.4728%" y="783.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 0.12%)</title><rect x="16.2228%" y="757" width="0.1211%" height="15" fill="rgb(226,98,8)" fg:x="268" fg:w="2"/><text x="16.4728%" y="767.50"></text></g><g><title>OSSL_DECODER_is_a (3 samples, 0.18%)</title><rect x="16.2228%" y="821" width="0.1816%" height="15" fill="rgb(220,153,48)" fg:x="268" fg:w="3"/><text x="16.4728%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="16.2228%" y="805" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="268" fg:w="3"/><text x="16.4728%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="16.2228%" y="789" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="268" fg:w="3"/><text x="16.4728%" y="799.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.06%)</title><rect x="16.3438%" y="773" width="0.0605%" height="15" fill="rgb(211,135,50)" fg:x="270" fg:w="1"/><text x="16.5938%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.3438%" y="757" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="270" fg:w="1"/><text x="16.5938%" y="767.50"></text></g><g><title>OPENSSL_strcasecmp (1 samples, 0.06%)</title><rect x="16.3438%" y="741" width="0.0605%" height="15" fill="rgb(229,15,51)" fg:x="270" fg:w="1"/><text x="16.5938%" y="751.50"></text></g><g><title>OSSL_DECODER_do_all_provided (4 samples, 0.24%)</title><rect x="16.2228%" y="885" width="0.2421%" height="15" fill="rgb(214,174,22)" fg:x="268" fg:w="4"/><text x="16.4728%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="16.2228%" y="869" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="268" fg:w="4"/><text x="16.4728%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="16.2228%" y="853" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="268" fg:w="4"/><text x="16.4728%" y="863.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="16.2228%" y="837" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="268" fg:w="4"/><text x="16.4728%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.4044%" y="821" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="271" fg:w="1"/><text x="16.6544%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.4044%" y="805" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="271" fg:w="1"/><text x="16.6544%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.4044%" y="789" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="271" fg:w="1"/><text x="16.6544%" y="799.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.4044%" y="773" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="271" fg:w="1"/><text x="16.6544%" y="783.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.06%)</title><rect x="16.4044%" y="757" width="0.0605%" height="15" fill="rgb(251,110,52)" fg:x="271" fg:w="1"/><text x="16.6544%" y="767.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.06%)</title><rect x="16.4044%" y="741" width="0.0605%" height="15" fill="rgb(226,98,8)" fg:x="271" fg:w="1"/><text x="16.6544%" y="751.50"></text></g><g><title>OPENSSL_LH_doall_arg (2 samples, 0.12%)</title><rect x="16.4649%" y="869" width="0.1211%" height="15" fill="rgb(234,106,4)" fg:x="272" fg:w="2"/><text x="16.7149%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="16.4649%" y="853" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="272" fg:w="2"/><text x="16.7149%" y="863.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (22 samples, 1.33%)</title><rect x="15.3753%" y="901" width="1.3317%" height="15" fill="rgb(250,130,40)" fg:x="254" fg:w="22"/><text x="15.6253%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="16.4649%" y="885" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="272" fg:w="4"/><text x="16.7149%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="16.5860%" y="869" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="274" fg:w="2"/><text x="16.8360%" y="879.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.06%)</title><rect x="16.7070%" y="837" width="0.0605%" height="15" fill="rgb(235,7,46)" fg:x="276" fg:w="1"/><text x="16.9570%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.7070%" y="821" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="276" fg:w="1"/><text x="16.9570%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.7070%" y="805" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="276" fg:w="1"/><text x="16.9570%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.7070%" y="789" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="276" fg:w="1"/><text x="16.9570%" y="799.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.7070%" y="773" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="276" fg:w="1"/><text x="16.9570%" y="783.50"></text></g><g><title>OSSL_DECODER_is_a (1 samples, 0.06%)</title><rect x="16.7676%" y="821" width="0.0605%" height="15" fill="rgb(220,153,48)" fg:x="277" fg:w="1"/><text x="17.0176%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.7676%" y="805" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="277" fg:w="1"/><text x="17.0176%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.7676%" y="789" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="277" fg:w="1"/><text x="17.0176%" y="799.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.06%)</title><rect x="16.7676%" y="773" width="0.0605%" height="15" fill="rgb(251,110,52)" fg:x="277" fg:w="1"/><text x="17.0176%" y="783.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.06%)</title><rect x="16.7676%" y="757" width="0.0605%" height="15" fill="rgb(226,98,8)" fg:x="277" fg:w="1"/><text x="17.0176%" y="767.50"></text></g><g><title>d2i_EC_PUBKEY (1 samples, 0.06%)</title><rect x="16.8281%" y="805" width="0.0605%" height="15" fill="rgb(231,46,51)" fg:x="278" fg:w="1"/><text x="17.0781%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8281%" y="789" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="278" fg:w="1"/><text x="17.0781%" y="799.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.06%)</title><rect x="16.8281%" y="773" width="0.0605%" height="15" fill="rgb(235,7,46)" fg:x="278" fg:w="1"/><text x="17.0781%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8281%" y="757" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="278" fg:w="1"/><text x="17.0781%" y="767.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8281%" y="741" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="278" fg:w="1"/><text x="17.0781%" y="751.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8281%" y="725" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="278" fg:w="1"/><text x="17.0781%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8281%" y="709" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="278" fg:w="1"/><text x="17.0781%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8281%" y="693" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="278" fg:w="1"/><text x="17.0781%" y="703.50"></text></g><g><title>EC_GROUP_free (1 samples, 0.06%)</title><rect x="16.8281%" y="677" width="0.0605%" height="15" fill="rgb(218,149,47)" fg:x="278" fg:w="1"/><text x="17.0781%" y="687.50"></text></g><g><title>EC_POINT_free (1 samples, 0.06%)</title><rect x="16.8281%" y="661" width="0.0605%" height="15" fill="rgb(252,200,47)" fg:x="278" fg:w="1"/><text x="17.0781%" y="671.50"></text></g><g><title>BN_free (1 samples, 0.06%)</title><rect x="16.8281%" y="645" width="0.0605%" height="15" fill="rgb(232,63,2)" fg:x="278" fg:w="1"/><text x="17.0781%" y="655.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="16.8281%" y="629" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="278" fg:w="1"/><text x="17.0781%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="16.8281%" y="613" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="278" fg:w="1"/><text x="17.0781%" y="623.50"></text></g><g><title>OSSL_DECODER_from_data (4 samples, 0.24%)</title><rect x="16.7070%" y="901" width="0.2421%" height="15" fill="rgb(219,195,36)" fg:x="276" fg:w="4"/><text x="16.9570%" y="911.50"></text></g><g><title>OSSL_DECODER_from_bio (4 samples, 0.24%)</title><rect x="16.7070%" y="885" width="0.2421%" height="15" fill="rgb(213,119,8)" fg:x="276" fg:w="4"/><text x="16.9570%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="16.7070%" y="869" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="276" fg:w="4"/><text x="16.9570%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="16.7070%" y="853" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="276" fg:w="4"/><text x="16.9570%" y="863.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="16.7676%" y="837" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="277" fg:w="3"/><text x="17.0176%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="16.8281%" y="821" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="278" fg:w="2"/><text x="17.0781%" y="831.50"></text></g><g><title>d2i_RSA_PUBKEY (1 samples, 0.06%)</title><rect x="16.8886%" y="805" width="0.0605%" height="15" fill="rgb(246,152,49)" fg:x="279" fg:w="1"/><text x="17.1386%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8886%" y="789" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="279" fg:w="1"/><text x="17.1386%" y="799.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.06%)</title><rect x="16.8886%" y="773" width="0.0605%" height="15" fill="rgb(235,7,46)" fg:x="279" fg:w="1"/><text x="17.1386%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8886%" y="757" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="279" fg:w="1"/><text x="17.1386%" y="767.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8886%" y="741" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="279" fg:w="1"/><text x="17.1386%" y="751.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.06%)</title><rect x="16.8886%" y="725" width="0.0605%" height="15" fill="rgb(228,14,6)" fg:x="279" fg:w="1"/><text x="17.1386%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8886%" y="709" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="279" fg:w="1"/><text x="17.1386%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8886%" y="693" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="279" fg:w="1"/><text x="17.1386%" y="703.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8886%" y="677" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="279" fg:w="1"/><text x="17.1386%" y="687.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.8886%" y="661" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="279" fg:w="1"/><text x="17.1386%" y="671.50"></text></g><g><title>ASN1_item_d2i_ex (27 samples, 1.63%)</title><rect x="15.3753%" y="1013" width="1.6344%" height="15" fill="rgb(235,7,46)" fg:x="254" fg:w="27"/><text x="15.6253%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (27 samples, 1.63%)</title><rect x="15.3753%" y="997" width="1.6344%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="27"/><text x="15.6253%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (27 samples, 1.63%)</title><rect x="15.3753%" y="981" width="1.6344%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="27"/><text x="15.6253%" y="991.50"></text></g><g><title>[libcrypto.so.3.0.8] (27 samples, 1.63%)</title><rect x="15.3753%" y="965" width="1.6344%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="27"/><text x="15.6253%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (27 samples, 1.63%)</title><rect x="15.3753%" y="949" width="1.6344%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="27"/><text x="15.6253%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (27 samples, 1.63%)</title><rect x="15.3753%" y="933" width="1.6344%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="27"/><text x="15.6253%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (27 samples, 1.63%)</title><rect x="15.3753%" y="917" width="1.6344%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="27"/><text x="15.6253%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.9492%" y="901" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="280" fg:w="1"/><text x="17.1992%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.9492%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="280" fg:w="1"/><text x="17.1992%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.9492%" y="869" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="280" fg:w="1"/><text x="17.1992%" y="879.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.06%)</title><rect x="16.9492%" y="853" width="0.0605%" height="15" fill="rgb(230,142,33)" fg:x="280" fg:w="1"/><text x="17.1992%" y="863.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.9492%" y="837" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="280" fg:w="1"/><text x="17.1992%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="16.9492%" y="821" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="280" fg:w="1"/><text x="17.1992%" y="831.50"></text></g><g><title>BIO_free (1 samples, 0.06%)</title><rect x="17.0097%" y="997" width="0.0605%" height="15" fill="rgb(251,2,18)" fg:x="281" fg:w="1"/><text x="17.2597%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.0097%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="281" fg:w="1"/><text x="17.2597%" y="991.50"></text></g><g><title>BUF_MEM_free (1 samples, 0.06%)</title><rect x="17.0097%" y="965" width="0.0605%" height="15" fill="rgb(207,113,54)" fg:x="281" fg:w="1"/><text x="17.2597%" y="975.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="17.0097%" y="949" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="281" fg:w="1"/><text x="17.2597%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="17.0097%" y="933" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="281" fg:w="1"/><text x="17.2597%" y="943.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="17.0097%" y="917" width="0.0605%" height="15" fill="rgb(228,194,39)" fg:x="281" fg:w="1"/><text x="17.2597%" y="927.50"></text></g><g><title>BIO_puts (1 samples, 0.06%)</title><rect x="17.0702%" y="997" width="0.0605%" height="15" fill="rgb(208,213,40)" fg:x="282" fg:w="1"/><text x="17.3202%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.0702%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="282" fg:w="1"/><text x="17.3202%" y="991.50"></text></g><g><title>BUF_MEM_grow_clean (1 samples, 0.06%)</title><rect x="17.0702%" y="965" width="0.0605%" height="15" fill="rgb(239,165,14)" fg:x="282" fg:w="1"/><text x="17.3202%" y="975.50"></text></g><g><title>CRYPTO_clear_realloc (1 samples, 0.06%)</title><rect x="17.0702%" y="949" width="0.0605%" height="15" fill="rgb(211,106,49)" fg:x="282" fg:w="1"/><text x="17.3202%" y="959.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="17.0702%" y="933" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="282" fg:w="1"/><text x="17.3202%" y="943.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="17.0702%" y="917" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="282" fg:w="1"/><text x="17.3202%" y="927.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="17.0702%" y="901" width="0.0605%" height="15" fill="rgb(237,64,10)" fg:x="282" fg:w="1"/><text x="17.3202%" y="911.50"></text></g><g><title>__glibc_morecore (1 samples, 0.06%)</title><rect x="17.0702%" y="885" width="0.0605%" height="15" fill="rgb(215,17,3)" fg:x="282" fg:w="1"/><text x="17.3202%" y="895.50"></text></g><g><title>__GI___sbrk (1 samples, 0.06%)</title><rect x="17.0702%" y="869" width="0.0605%" height="15" fill="rgb(216,120,7)" fg:x="282" fg:w="1"/><text x="17.3202%" y="879.50"></text></g><g><title>__brk (1 samples, 0.06%)</title><rect x="17.0702%" y="853" width="0.0605%" height="15" fill="rgb(216,153,15)" fg:x="282" fg:w="1"/><text x="17.3202%" y="863.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="17.0702%" y="837" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="282" fg:w="1"/><text x="17.3202%" y="847.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="17.0702%" y="821" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="282" fg:w="1"/><text x="17.3202%" y="831.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="17.0702%" y="805" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="282" fg:w="1"/><text x="17.3202%" y="815.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="17.0702%" y="789" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="282" fg:w="1"/><text x="17.3202%" y="799.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="17.0702%" y="773" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="282" fg:w="1"/><text x="17.3202%" y="783.50"></text></g><g><title>__arm64_sys_brk (1 samples, 0.06%)</title><rect x="17.0702%" y="757" width="0.0605%" height="15" fill="rgb(254,170,43)" fg:x="282" fg:w="1"/><text x="17.3202%" y="767.50"></text></g><g><title>__do_sys_brk (1 samples, 0.06%)</title><rect x="17.0702%" y="741" width="0.0605%" height="15" fill="rgb(251,218,4)" fg:x="282" fg:w="1"/><text x="17.3202%" y="751.50"></text></g><g><title>do_brk_flags (1 samples, 0.06%)</title><rect x="17.0702%" y="725" width="0.0605%" height="15" fill="rgb(216,139,3)" fg:x="282" fg:w="1"/><text x="17.3202%" y="735.50"></text></g><g><title>mas_preallocate (1 samples, 0.06%)</title><rect x="17.0702%" y="709" width="0.0605%" height="15" fill="rgb(207,92,28)" fg:x="282" fg:w="1"/><text x="17.3202%" y="719.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.06%)</title><rect x="17.0702%" y="693" width="0.0605%" height="15" fill="rgb(245,224,22)" fg:x="282" fg:w="1"/><text x="17.3202%" y="703.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="17.0702%" y="677" width="0.0605%" height="15" fill="rgb(223,51,51)" fg:x="282" fg:w="1"/><text x="17.3202%" y="687.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (30 samples, 1.82%)</title><rect x="15.3753%" y="1029" width="1.8160%" height="15" fill="rgb(205,114,52)" fg:x="254" fg:w="30"/><text x="15.6253%" y="1039.50">P..</text></g><g><title>PEM_read_bio_ex (3 samples, 0.18%)</title><rect x="17.0097%" y="1013" width="0.1816%" height="15" fill="rgb(206,167,13)" fg:x="281" fg:w="3"/><text x="17.2597%" y="1023.50"></text></g><g><title>EVP_DecodeUpdate (1 samples, 0.06%)</title><rect x="17.1308%" y="997" width="0.0605%" height="15" fill="rgb(218,149,33)" fg:x="283" fg:w="1"/><text x="17.3808%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.1308%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="283" fg:w="1"/><text x="17.3808%" y="991.50"></text></g><g><title>X509_STORE_set_default_paths_ex (31 samples, 1.88%)</title><rect x="15.3753%" y="1077" width="1.8765%" height="15" fill="rgb(207,118,24)" fg:x="254" fg:w="31"/><text x="15.6253%" y="1087.50">X..</text></g><g><title>[libcrypto.so.3.0.8] (31 samples, 1.88%)</title><rect x="15.3753%" y="1061" width="1.8765%" height="15" fill="rgb(222,124,3)" fg:x="254" fg:w="31"/><text x="15.6253%" y="1071.50">[..</text></g><g><title>X509_load_cert_crl_file_ex (31 samples, 1.88%)</title><rect x="15.3753%" y="1045" width="1.8765%" height="15" fill="rgb(228,140,6)" fg:x="254" fg:w="31"/><text x="15.6253%" y="1055.50">X..</text></g><g><title>X509_STORE_add_cert (1 samples, 0.06%)</title><rect x="17.1913%" y="1029" width="0.0605%" height="15" fill="rgb(233,53,52)" fg:x="284" fg:w="1"/><text x="17.4413%" y="1039.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.1913%" y="1013" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="284" fg:w="1"/><text x="17.4413%" y="1023.50"></text></g><g><title>X509_OBJECT_retrieve_match (1 samples, 0.06%)</title><rect x="17.1913%" y="997" width="0.0605%" height="15" fill="rgb(238,1,23)" fg:x="284" fg:w="1"/><text x="17.4413%" y="1007.50"></text></g><g><title>X509_cmp (1 samples, 0.06%)</title><rect x="17.1913%" y="981" width="0.0605%" height="15" fill="rgb(240,37,47)" fg:x="284" fg:w="1"/><text x="17.4413%" y="991.50"></text></g><g><title>X509_check_purpose (1 samples, 0.06%)</title><rect x="17.1913%" y="965" width="0.0605%" height="15" fill="rgb(208,103,0)" fg:x="284" fg:w="1"/><text x="17.4413%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.1913%" y="949" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="284" fg:w="1"/><text x="17.4413%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.1913%" y="933" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="284" fg:w="1"/><text x="17.4413%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.1913%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="284" fg:w="1"/><text x="17.4413%" y="927.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.06%)</title><rect x="17.1913%" y="901" width="0.0605%" height="15" fill="rgb(230,142,33)" fg:x="284" fg:w="1"/><text x="17.4413%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.1913%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="284" fg:w="1"/><text x="17.4413%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.1913%" y="869" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="284" fg:w="1"/><text x="17.4413%" y="879.50"></text></g><g><title>ASN1_object_size (1 samples, 0.06%)</title><rect x="17.1913%" y="853" width="0.0605%" height="15" fill="rgb(239,31,19)" fg:x="284" fg:w="1"/><text x="17.4413%" y="863.50"></text></g><g><title>SSL_CTX_new_ex (1 samples, 0.06%)</title><rect x="17.2518%" y="1061" width="0.0605%" height="15" fill="rgb(237,81,54)" fg:x="285" fg:w="1"/><text x="17.5018%" y="1071.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="1045" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="285" fg:w="1"/><text x="17.5018%" y="1055.50"></text></g><g><title>EVP_CIPHER_fetch (1 samples, 0.06%)</title><rect x="17.2518%" y="1029" width="0.0605%" height="15" fill="rgb(241,173,52)" fg:x="285" fg:w="1"/><text x="17.5018%" y="1039.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="1013" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="997" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="981" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="991.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="965" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="949" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="933" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="917" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.2518%" y="901" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="285" fg:w="1"/><text x="17.5018%" y="911.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="17.2518%" y="885" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="285" fg:w="1"/><text x="17.5018%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="17.2518%" y="869" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="285" fg:w="1"/><text x="17.5018%" y="879.50"></text></g><g><title>alloy_etherscan::ClientBuilder::build (33 samples, 2.00%)</title><rect x="15.3753%" y="1189" width="1.9976%" height="15" fill="rgb(224,104,19)" fg:x="254" fg:w="33"/><text x="15.6253%" y="1199.50">a..</text></g><g><title>reqwest::async_impl::client::Client::new (33 samples, 2.00%)</title><rect x="15.3753%" y="1173" width="1.9976%" height="15" fill="rgb(216,213,33)" fg:x="254" fg:w="33"/><text x="15.6253%" y="1183.50">r..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (33 samples, 2.00%)</title><rect x="15.3753%" y="1157" width="1.9976%" height="15" fill="rgb(251,220,30)" fg:x="254" fg:w="33"/><text x="15.6253%" y="1167.50">r..</text></g><g><title>reqwest::connect::Connector::new_default_tls (33 samples, 2.00%)</title><rect x="15.3753%" y="1141" width="1.9976%" height="15" fill="rgb(236,118,20)" fg:x="254" fg:w="33"/><text x="15.6253%" y="1151.50">r..</text></g><g><title>native_tls::TlsConnectorBuilder::build (33 samples, 2.00%)</title><rect x="15.3753%" y="1125" width="1.9976%" height="15" fill="rgb(243,34,1)" fg:x="254" fg:w="33"/><text x="15.6253%" y="1135.50">n..</text></g><g><title>native_tls::imp::TlsConnector::new (33 samples, 2.00%)</title><rect x="15.3753%" y="1109" width="1.9976%" height="15" fill="rgb(227,224,35)" fg:x="254" fg:w="33"/><text x="15.6253%" y="1119.50">n..</text></g><g><title>openssl::ssl::connector::SslConnector::builder (33 samples, 2.00%)</title><rect x="15.3753%" y="1093" width="1.9976%" height="15" fill="rgb(207,207,0)" fg:x="254" fg:w="33"/><text x="15.6253%" y="1103.50">o..</text></g><g><title>openssl::ssl::connector::ctx (2 samples, 0.12%)</title><rect x="17.2518%" y="1077" width="0.1211%" height="15" fill="rgb(221,60,52)" fg:x="285" fg:w="2"/><text x="17.5018%" y="1087.50"></text></g><g><title>openssl_sys::openssl::init (1 samples, 0.06%)</title><rect x="17.3123%" y="1061" width="0.0605%" height="15" fill="rgb(216,90,52)" fg:x="286" fg:w="1"/><text x="17.5623%" y="1071.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.06%)</title><rect x="17.3123%" y="1045" width="0.0605%" height="15" fill="rgb(246,168,49)" fg:x="286" fg:w="1"/><text x="17.5623%" y="1055.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.06%)</title><rect x="17.3123%" y="1029" width="0.0605%" height="15" fill="rgb(224,150,22)" fg:x="286" fg:w="1"/><text x="17.5623%" y="1039.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.06%)</title><rect x="17.3123%" y="1013" width="0.0605%" height="15" fill="rgb(220,49,37)" fg:x="286" fg:w="1"/><text x="17.5623%" y="1023.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.06%)</title><rect x="17.3123%" y="997" width="0.0605%" height="15" fill="rgb(242,167,16)" fg:x="286" fg:w="1"/><text x="17.5623%" y="1007.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.3123%" y="981" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="286" fg:w="1"/><text x="17.5623%" y="991.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.06%)</title><rect x="17.3123%" y="965" width="0.0605%" height="15" fill="rgb(225,13,15)" fg:x="286" fg:w="1"/><text x="17.5623%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="17.3123%" y="949" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="286" fg:w="1"/><text x="17.5623%" y="959.50"></text></g><g><title>poirot_core::decode::Parser::new (34 samples, 2.06%)</title><rect x="15.3753%" y="1221" width="2.0581%" height="15" fill="rgb(232,192,17)" fg:x="254" fg:w="34"/><text x="15.6253%" y="1231.50">p..</text></g><g><title>alloy_etherscan::Client::new_cached (34 samples, 2.06%)</title><rect x="15.3753%" y="1205" width="2.0581%" height="15" fill="rgb(224,56,18)" fg:x="254" fg:w="34"/><text x="15.6253%" y="1215.50">a..</text></g><g><title>alloy_etherscan::ClientBuilder::chain (1 samples, 0.06%)</title><rect x="17.3729%" y="1189" width="0.0605%" height="15" fill="rgb(249,63,30)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1199.50"></text></g><g><title>alloy_etherscan::ensure_url (1 samples, 0.06%)</title><rect x="17.3729%" y="1173" width="0.0605%" height="15" fill="rgb(250,135,4)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as reqwest::into_url::IntoUrlSealed&gt;::into_url (1 samples, 0.06%)</title><rect x="17.3729%" y="1157" width="0.0605%" height="15" fill="rgb(224,104,18)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1167.50"></text></g><g><title>&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (1 samples, 0.06%)</title><rect x="17.3729%" y="1141" width="0.0605%" height="15" fill="rgb(223,151,29)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1151.50"></text></g><g><title>url::ParseOptions::parse (1 samples, 0.06%)</title><rect x="17.3729%" y="1125" width="0.0605%" height="15" fill="rgb(223,135,13)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1135.50"></text></g><g><title>url::parser::Parser::parse_url (1 samples, 0.06%)</title><rect x="17.3729%" y="1109" width="0.0605%" height="15" fill="rgb(248,117,44)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1119.50"></text></g><g><title>url::parser::Parser::after_double_slash (1 samples, 0.06%)</title><rect x="17.3729%" y="1093" width="0.0605%" height="15" fill="rgb(237,19,23)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1103.50"></text></g><g><title>url::parser::Parser::parse_host (1 samples, 0.06%)</title><rect x="17.3729%" y="1077" width="0.0605%" height="15" fill="rgb(251,194,4)" fg:x="287" fg:w="1"/><text x="17.6229%" y="1087.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.12%)</title><rect x="17.4939%" y="1061" width="0.1211%" height="15" fill="rgb(249,130,0)" fg:x="289" fg:w="2"/><text x="17.7439%" y="1071.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.24%)</title><rect x="17.4939%" y="1093" width="0.2421%" height="15" fill="rgb(224,83,29)" fg:x="289" fg:w="4"/><text x="17.7439%" y="1103.50"></text></g><g><title>&lt;reth_primitives::serde_helper::jsonu256::JsonU256 as serde::de::Deserialize&gt;::deserialize (4 samples, 0.24%)</title><rect x="17.4939%" y="1077" width="0.2421%" height="15" fill="rgb(250,16,34)" fg:x="289" fg:w="4"/><text x="17.7439%" y="1087.50"></text></g><g><title>ruint::string::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::from_str_radix (2 samples, 0.12%)</title><rect x="17.6150%" y="1061" width="0.1211%" height="15" fill="rgb(221,188,9)" fg:x="291" fg:w="2"/><text x="17.8650%" y="1071.50"></text></g><g><title>&lt;revm_primitives::bits::serialize::deserialize_check_len::Visitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.12%)</title><rect x="17.7361%" y="1077" width="0.1211%" height="15" fill="rgb(239,157,20)" fg:x="293" fg:w="2"/><text x="17.9861%" y="1087.50"></text></g><g><title>revm_primitives::bits::serialize::from_hex_raw (2 samples, 0.12%)</title><rect x="17.7361%" y="1061" width="0.1211%" height="15" fill="rgb(205,224,21)" fg:x="293" fg:w="2"/><text x="17.9861%" y="1071.50"></text></g><g><title>&lt;revm_primitives::bits::B160 as serde::de::Deserialize&gt;::deserialize (3 samples, 0.18%)</title><rect x="17.7361%" y="1093" width="0.1816%" height="15" fill="rgb(208,28,23)" fg:x="293" fg:w="3"/><text x="17.9861%" y="1103.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.06%)</title><rect x="17.8571%" y="1077" width="0.0605%" height="15" fill="rgb(249,130,0)" fg:x="295" fg:w="1"/><text x="18.1071%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.12%)</title><rect x="18.0387%" y="1045" width="0.1211%" height="15" fill="rgb(222,198,6)" fg:x="298" fg:w="2"/><text x="18.2887%" y="1055.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13 samples, 0.79%)</title><rect x="17.4334%" y="1205" width="0.7869%" height="15" fill="rgb(216,218,52)" fg:x="288" fg:w="13"/><text x="17.6834%" y="1215.50"></text></g><g><title>once_cell::imp::initialize_or_wait (13 samples, 0.79%)</title><rect x="17.4334%" y="1189" width="0.7869%" height="15" fill="rgb(247,128,5)" fg:x="288" fg:w="13"/><text x="17.6834%" y="1199.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (13 samples, 0.79%)</title><rect x="17.4334%" y="1173" width="0.7869%" height="15" fill="rgb(237,110,11)" fg:x="288" fg:w="13"/><text x="17.6834%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.79%)</title><rect x="17.4334%" y="1157" width="0.7869%" height="15" fill="rgb(210,80,10)" fg:x="288" fg:w="13"/><text x="17.6834%" y="1167.50"></text></g><g><title>serde_json::de::from_str (13 samples, 0.79%)</title><rect x="17.4334%" y="1141" width="0.7869%" height="15" fill="rgb(217,198,13)" fg:x="288" fg:w="13"/><text x="17.6834%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (13 samples, 0.79%)</title><rect x="17.4334%" y="1125" width="0.7869%" height="15" fill="rgb(224,83,29)" fg:x="288" fg:w="13"/><text x="17.6834%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (13 samples, 0.79%)</title><rect x="17.4334%" y="1109" width="0.7869%" height="15" fill="rgb(247,54,33)" fg:x="288" fg:w="13"/><text x="17.6834%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.30%)</title><rect x="17.9177%" y="1093" width="0.3027%" height="15" fill="rgb(228,156,5)" fg:x="296" fg:w="5"/><text x="18.1677%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.24%)</title><rect x="17.9782%" y="1077" width="0.2421%" height="15" fill="rgb(207,42,35)" fg:x="297" fg:w="4"/><text x="18.2282%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.24%)</title><rect x="17.9782%" y="1061" width="0.2421%" height="15" fill="rgb(217,9,51)" fg:x="297" fg:w="4"/><text x="18.2282%" y="1071.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="18.1598%" y="1045" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="300" fg:w="1"/><text x="18.4098%" y="1055.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="18.1598%" y="1029" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="300" fg:w="1"/><text x="18.4098%" y="1039.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="18.1598%" y="1013" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="300" fg:w="1"/><text x="18.4098%" y="1023.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="18.1598%" y="997" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="300" fg:w="1"/><text x="18.4098%" y="1007.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="18.1598%" y="981" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="300" fg:w="1"/><text x="18.4098%" y="991.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="18.1598%" y="965" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="300" fg:w="1"/><text x="18.4098%" y="975.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="18.1598%" y="949" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="300" fg:w="1"/><text x="18.4098%" y="959.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="18.1598%" y="933" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="300" fg:w="1"/><text x="18.4098%" y="943.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="18.1598%" y="917" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="300" fg:w="1"/><text x="18.4098%" y="927.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.06%)</title><rect x="18.1598%" y="901" width="0.0605%" height="15" fill="rgb(209,111,19)" fg:x="300" fg:w="1"/><text x="18.4098%" y="911.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.06%)</title><rect x="18.1598%" y="885" width="0.0605%" height="15" fill="rgb(225,221,26)" fg:x="300" fg:w="1"/><text x="18.4098%" y="895.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.06%)</title><rect x="18.1598%" y="869" width="0.0605%" height="15" fill="rgb(228,174,4)" fg:x="300" fg:w="1"/><text x="18.4098%" y="879.50"></text></g><g><title>mdbx_env_open (1 samples, 0.06%)</title><rect x="18.2203%" y="1173" width="0.0605%" height="15" fill="rgb(239,152,15)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1183.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="18.2203%" y="1157" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1167.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="18.2203%" y="1141" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1151.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="18.2203%" y="1125" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1135.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="18.2203%" y="1109" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1119.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="18.2203%" y="1093" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1103.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="18.2203%" y="1077" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1087.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="18.2203%" y="1061" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="301" fg:w="1"/><text x="18.4703%" y="1071.50"></text></g><g><title>reth_db::implementation::mdbx::Env&lt;E&gt;::open (2 samples, 0.12%)</title><rect x="18.2203%" y="1205" width="0.1211%" height="15" fill="rgb(227,129,21)" fg:x="301" fg:w="2"/><text x="18.4703%" y="1215.50"></text></g><g><title>reth_libmdbx::environment::EnvironmentBuilder&lt;E&gt;::open (2 samples, 0.12%)</title><rect x="18.2203%" y="1189" width="0.1211%" height="15" fill="rgb(222,141,24)" fg:x="301" fg:w="2"/><text x="18.4703%" y="1199.50"></text></g><g><title>mdbx_env_set_geometry (1 samples, 0.06%)</title><rect x="18.2809%" y="1173" width="0.0605%" height="15" fill="rgb(215,97,7)" fg:x="302" fg:w="1"/><text x="18.5309%" y="1183.50"></text></g><g><title>bin::run::{{closure}} (233 samples, 14.10%)</title><rect x="4.2978%" y="1237" width="14.1041%" height="15" fill="rgb(248,143,15)" fg:x="71" fg:w="233"/><text x="4.5478%" y="1247.50">bin::run::{{closure}}</text></g><g><title>poirot_core::trace::TracingClient::new (16 samples, 0.97%)</title><rect x="17.4334%" y="1221" width="0.9685%" height="15" fill="rgb(218,48,14)" fg:x="288" fg:w="16"/><text x="17.6834%" y="1231.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.06%)</title><rect x="18.3414%" y="1205" width="0.0605%" height="15" fill="rgb(212,62,21)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1215.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="18.3414%" y="1189" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1199.50"></text></g><g><title>el0_ia (1 samples, 0.06%)</title><rect x="18.3414%" y="1173" width="0.0605%" height="15" fill="rgb(228,99,22)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1183.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="18.3414%" y="1157" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1167.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="18.3414%" y="1141" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1151.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="18.3414%" y="1125" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1135.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="18.3414%" y="1109" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1119.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="18.3414%" y="1093" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1103.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="18.3414%" y="1077" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1087.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="18.3414%" y="1061" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1071.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="18.3414%" y="1045" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1055.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="18.3414%" y="1029" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1039.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="18.3414%" y="1013" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1023.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="18.3414%" y="997" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="303" fg:w="1"/><text x="18.5914%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.06%)</title><rect x="18.4019%" y="1205" width="0.0605%" height="15" fill="rgb(227,28,50)" fg:x="304" fg:w="1"/><text x="18.6519%" y="1215.50"></text></g><g><title>asm_exit_to_user_mode (1 samples, 0.06%)</title><rect x="18.4019%" y="1189" width="0.0605%" height="15" fill="rgb(250,201,26)" fg:x="304" fg:w="1"/><text x="18.6519%" y="1199.50"></text></g><g><title>asm_exit_to_user_mode (2 samples, 0.12%)</title><rect x="18.4625%" y="1205" width="0.1211%" height="15" fill="rgb(250,201,26)" fg:x="305" fg:w="2"/><text x="18.7125%" y="1215.50"></text></g><g><title>do_notify_resume (2 samples, 0.12%)</title><rect x="18.4625%" y="1189" width="0.1211%" height="15" fill="rgb(233,34,11)" fg:x="305" fg:w="2"/><text x="18.7125%" y="1199.50"></text></g><g><title>fpsimd_restore_current_state (2 samples, 0.12%)</title><rect x="18.4625%" y="1173" width="0.1211%" height="15" fill="rgb(218,94,51)" fg:x="305" fg:w="2"/><text x="18.7125%" y="1183.50"></text></g><g><title>fpsimd_load_state (1 samples, 0.06%)</title><rect x="18.5230%" y="1157" width="0.0605%" height="15" fill="rgb(241,82,32)" fg:x="306" fg:w="1"/><text x="18.7730%" y="1167.50"></text></g><g><title>arch_local_irq_enable (48 samples, 2.91%)</title><rect x="18.5835%" y="1189" width="2.9056%" height="15" fill="rgb(232,216,33)" fg:x="307" fg:w="48"/><text x="18.8335%" y="1199.50">ar..</text></g><g><title>el1h_64_irq (4 samples, 0.24%)</title><rect x="21.2470%" y="1173" width="0.2421%" height="15" fill="rgb(223,86,28)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1183.50"></text></g><g><title>el1h_64_irq_handler (4 samples, 0.24%)</title><rect x="21.2470%" y="1157" width="0.2421%" height="15" fill="rgb(231,46,5)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1167.50"></text></g><g><title>el1_interrupt (4 samples, 0.24%)</title><rect x="21.2470%" y="1141" width="0.2421%" height="15" fill="rgb(254,19,43)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1151.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.24%)</title><rect x="21.2470%" y="1125" width="0.2421%" height="15" fill="rgb(240,18,12)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1135.50"></text></g><g><title>__irq_exit_rcu (4 samples, 0.24%)</title><rect x="21.2470%" y="1109" width="0.2421%" height="15" fill="rgb(221,172,49)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1119.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.24%)</title><rect x="21.2470%" y="1093" width="0.2421%" height="15" fill="rgb(223,89,53)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1103.50"></text></g><g><title>call_on_irq_stack (4 samples, 0.24%)</title><rect x="21.2470%" y="1077" width="0.2421%" height="15" fill="rgb(247,223,36)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1087.50"></text></g><g><title>____do_softirq (4 samples, 0.24%)</title><rect x="21.2470%" y="1061" width="0.2421%" height="15" fill="rgb(212,141,15)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1071.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.24%)</title><rect x="21.2470%" y="1045" width="0.2421%" height="15" fill="rgb(249,91,22)" fg:x="351" fg:w="4"/><text x="21.4970%" y="1055.50"></text></g><g><title>net_rx_action (2 samples, 0.12%)</title><rect x="21.3680%" y="1029" width="0.1211%" height="15" fill="rgb(231,11,52)" fg:x="353" fg:w="2"/><text x="21.6180%" y="1039.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="21.4286%" y="1013" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="354" fg:w="1"/><text x="21.6786%" y="1023.50"></text></g><g><title>net_dim (1 samples, 0.06%)</title><rect x="21.4286%" y="997" width="0.0605%" height="15" fill="rgb(209,43,24)" fg:x="354" fg:w="1"/><text x="21.6786%" y="1007.50"></text></g><g><title>create_thread (52 samples, 3.15%)</title><rect x="18.4019%" y="1237" width="3.1477%" height="15" fill="rgb(238,226,5)" fg:x="304" fg:w="52"/><text x="18.6519%" y="1247.50">cre..</text></g><g><title>__GI___clone (52 samples, 3.15%)</title><rect x="18.4019%" y="1221" width="3.1477%" height="15" fill="rgb(233,28,32)" fg:x="304" fg:w="52"/><text x="18.6519%" y="1231.50">__G..</text></g><g><title>schedule_tail (49 samples, 2.97%)</title><rect x="18.5835%" y="1205" width="2.9661%" height="15" fill="rgb(215,144,34)" fg:x="307" fg:w="49"/><text x="18.8335%" y="1215.50">sch..</text></g><g><title>calculate_sigpending (1 samples, 0.06%)</title><rect x="21.4891%" y="1189" width="0.0605%" height="15" fill="rgb(206,74,3)" fg:x="355" fg:w="1"/><text x="21.7391%" y="1199.50"></text></g><g><title>el0_da (8 samples, 0.48%)</title><rect x="21.5496%" y="1221" width="0.4843%" height="15" fill="rgb(222,99,46)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1231.50"></text></g><g><title>do_mem_abort (8 samples, 0.48%)</title><rect x="21.5496%" y="1205" width="0.4843%" height="15" fill="rgb(239,157,43)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1215.50"></text></g><g><title>do_translation_fault (8 samples, 0.48%)</title><rect x="21.5496%" y="1189" width="0.4843%" height="15" fill="rgb(237,78,44)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1199.50"></text></g><g><title>do_page_fault (8 samples, 0.48%)</title><rect x="21.5496%" y="1173" width="0.4843%" height="15" fill="rgb(206,63,28)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1183.50"></text></g><g><title>down_read (8 samples, 0.48%)</title><rect x="21.5496%" y="1157" width="0.4843%" height="15" fill="rgb(208,214,33)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1167.50"></text></g><g><title>rwsem_down_read_slowpath (8 samples, 0.48%)</title><rect x="21.5496%" y="1141" width="0.4843%" height="15" fill="rgb(234,34,4)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1151.50"></text></g><g><title>schedule_preempt_disabled (8 samples, 0.48%)</title><rect x="21.5496%" y="1125" width="0.4843%" height="15" fill="rgb(241,42,14)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1135.50"></text></g><g><title>schedule (8 samples, 0.48%)</title><rect x="21.5496%" y="1109" width="0.4843%" height="15" fill="rgb(213,215,35)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1119.50"></text></g><g><title>__schedule (8 samples, 0.48%)</title><rect x="21.5496%" y="1093" width="0.4843%" height="15" fill="rgb(207,40,26)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1103.50"></text></g><g><title>arch_local_irq_enable (8 samples, 0.48%)</title><rect x="21.5496%" y="1077" width="0.4843%" height="15" fill="rgb(232,216,33)" fg:x="356" fg:w="8"/><text x="21.7996%" y="1087.50"></text></g><g><title>el1h_64_irq (2 samples, 0.12%)</title><rect x="21.9128%" y="1061" width="0.1211%" height="15" fill="rgb(223,86,28)" fg:x="362" fg:w="2"/><text x="22.1628%" y="1071.50"></text></g><g><title>el1h_64_irq_handler (2 samples, 0.12%)</title><rect x="21.9128%" y="1045" width="0.1211%" height="15" fill="rgb(231,46,5)" fg:x="362" fg:w="2"/><text x="22.1628%" y="1055.50"></text></g><g><title>el1_interrupt (2 samples, 0.12%)</title><rect x="21.9128%" y="1029" width="0.1211%" height="15" fill="rgb(254,19,43)" fg:x="362" fg:w="2"/><text x="22.1628%" y="1039.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.12%)</title><rect x="21.9128%" y="1013" width="0.1211%" height="15" fill="rgb(240,18,12)" fg:x="362" fg:w="2"/><text x="22.1628%" y="1023.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.12%)</title><rect x="21.9128%" y="997" width="0.1211%" height="15" fill="rgb(221,172,49)" fg:x="362" fg:w="2"/><text x="22.1628%" y="1007.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.12%)</title><rect x="21.9128%" y="981" width="0.1211%" height="15" fill="rgb(223,89,53)" fg:x="362" fg:w="2"/><text x="22.1628%" y="991.50"></text></g><g><title>call_on_irq_stack (2 samples, 0.12%)</title><rect x="21.9128%" y="965" width="0.1211%" height="15" fill="rgb(247,223,36)" fg:x="362" fg:w="2"/><text x="22.1628%" y="975.50"></text></g><g><title>____do_softirq (2 samples, 0.12%)</title><rect x="21.9128%" y="949" width="0.1211%" height="15" fill="rgb(212,141,15)" fg:x="362" fg:w="2"/><text x="22.1628%" y="959.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.12%)</title><rect x="21.9128%" y="933" width="0.1211%" height="15" fill="rgb(249,91,22)" fg:x="362" fg:w="2"/><text x="22.1628%" y="943.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="21.9734%" y="917" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="363" fg:w="1"/><text x="22.2234%" y="927.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="21.9734%" y="901" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="363" fg:w="1"/><text x="22.2234%" y="911.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="21.9734%" y="885" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="363" fg:w="1"/><text x="22.2234%" y="895.50"></text></g><g><title>napi_complete_done (1 samples, 0.06%)</title><rect x="21.9734%" y="869" width="0.0605%" height="15" fill="rgb(226,216,13)" fg:x="363" fg:w="1"/><text x="22.2234%" y="879.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.06%)</title><rect x="21.9734%" y="853" width="0.0605%" height="15" fill="rgb(216,153,44)" fg:x="363" fg:w="1"/><text x="22.2234%" y="863.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.06%)</title><rect x="21.9734%" y="837" width="0.0605%" height="15" fill="rgb(227,176,26)" fg:x="363" fg:w="1"/><text x="22.2234%" y="847.50"></text></g><g><title>ip_list_rcv (1 samples, 0.06%)</title><rect x="21.9734%" y="821" width="0.0605%" height="15" fill="rgb(215,38,16)" fg:x="363" fg:w="1"/><text x="22.2234%" y="831.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.06%)</title><rect x="21.9734%" y="805" width="0.0605%" height="15" fill="rgb(207,166,9)" fg:x="363" fg:w="1"/><text x="22.2234%" y="815.50"></text></g><g><title>ip_sublist_rcv_finish (1 samples, 0.06%)</title><rect x="21.9734%" y="789" width="0.0605%" height="15" fill="rgb(223,178,14)" fg:x="363" fg:w="1"/><text x="22.2234%" y="799.50"></text></g><g><title>ip_local_deliver (1 samples, 0.06%)</title><rect x="21.9734%" y="773" width="0.0605%" height="15" fill="rgb(221,216,39)" fg:x="363" fg:w="1"/><text x="22.2234%" y="783.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="21.9734%" y="757" width="0.0605%" height="15" fill="rgb(220,94,29)" fg:x="363" fg:w="1"/><text x="22.2234%" y="767.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="21.9734%" y="741" width="0.0605%" height="15" fill="rgb(207,19,13)" fg:x="363" fg:w="1"/><text x="22.2234%" y="751.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="21.9734%" y="725" width="0.0605%" height="15" fill="rgb(224,38,0)" fg:x="363" fg:w="1"/><text x="22.2234%" y="735.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="21.9734%" y="709" width="0.0605%" height="15" fill="rgb(228,220,18)" fg:x="363" fg:w="1"/><text x="22.2234%" y="719.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="21.9734%" y="693" width="0.0605%" height="15" fill="rgb(224,50,47)" fg:x="363" fg:w="1"/><text x="22.2234%" y="703.50"></text></g><g><title>tcp_ack (1 samples, 0.06%)</title><rect x="21.9734%" y="677" width="0.0605%" height="15" fill="rgb(213,228,3)" fg:x="363" fg:w="1"/><text x="22.2234%" y="687.50"></text></g><g><title>load_elf_interp (1 samples, 0.06%)</title><rect x="22.0339%" y="1045" width="0.0605%" height="15" fill="rgb(249,96,34)" fg:x="364" fg:w="1"/><text x="22.2839%" y="1055.50"></text></g><g><title>__arch_clear_user (1 samples, 0.06%)</title><rect x="22.0339%" y="1029" width="0.0605%" height="15" fill="rgb(250,110,16)" fg:x="364" fg:w="1"/><text x="22.2839%" y="1039.50"></text></g><g><title>el1h_64_sync (1 samples, 0.06%)</title><rect x="22.0339%" y="1013" width="0.0605%" height="15" fill="rgb(239,193,13)" fg:x="364" fg:w="1"/><text x="22.2839%" y="1023.50"></text></g><g><title>el1h_64_sync_handler (1 samples, 0.06%)</title><rect x="22.0339%" y="997" width="0.0605%" height="15" fill="rgb(254,32,39)" fg:x="364" fg:w="1"/><text x="22.2839%" y="1007.50"></text></g><g><title>el1_abort (1 samples, 0.06%)</title><rect x="22.0339%" y="981" width="0.0605%" height="15" fill="rgb(220,219,10)" fg:x="364" fg:w="1"/><text x="22.2839%" y="991.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="22.0339%" y="965" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="364" fg:w="1"/><text x="22.2839%" y="975.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="949" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="364" fg:w="1"/><text x="22.2839%" y="959.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="933" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="364" fg:w="1"/><text x="22.2839%" y="943.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="917" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="364" fg:w="1"/><text x="22.2839%" y="927.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="901" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="364" fg:w="1"/><text x="22.2839%" y="911.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="885" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="364" fg:w="1"/><text x="22.2839%" y="895.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="869" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="364" fg:w="1"/><text x="22.2839%" y="879.50"></text></g><g><title>do_cow_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="853" width="0.0605%" height="15" fill="rgb(225,118,31)" fg:x="364" fg:w="1"/><text x="22.2839%" y="863.50"></text></g><g><title>__do_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="837" width="0.0605%" height="15" fill="rgb(232,18,38)" fg:x="364" fg:w="1"/><text x="22.2839%" y="847.50"></text></g><g><title>xfs_filemap_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="821" width="0.0605%" height="15" fill="rgb(230,143,35)" fg:x="364" fg:w="1"/><text x="22.2839%" y="831.50"></text></g><g><title>filemap_fault (1 samples, 0.06%)</title><rect x="22.0339%" y="805" width="0.0605%" height="15" fill="rgb(254,137,16)" fg:x="364" fg:w="1"/><text x="22.2839%" y="815.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.06%)</title><rect x="22.0339%" y="789" width="0.0605%" height="15" fill="rgb(240,58,36)" fg:x="364" fg:w="1"/><text x="22.2839%" y="799.50"></text></g><g><title>el0t_64_sync_handler (10 samples, 0.61%)</title><rect x="21.5496%" y="1237" width="0.6053%" height="15" fill="rgb(232,35,33)" fg:x="356" fg:w="10"/><text x="21.7996%" y="1247.50"></text></g><g><title>el0_svc (2 samples, 0.12%)</title><rect x="22.0339%" y="1221" width="0.1211%" height="15" fill="rgb(225,46,33)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1231.50"></text></g><g><title>do_el0_svc (2 samples, 0.12%)</title><rect x="22.0339%" y="1205" width="0.1211%" height="15" fill="rgb(221,53,8)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1215.50"></text></g><g><title>el0_svc_common.constprop.0 (2 samples, 0.12%)</title><rect x="22.0339%" y="1189" width="0.1211%" height="15" fill="rgb(219,7,42)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1199.50"></text></g><g><title>invoke_syscall (2 samples, 0.12%)</title><rect x="22.0339%" y="1173" width="0.1211%" height="15" fill="rgb(234,209,2)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1183.50"></text></g><g><title>__arm64_sys_execve (2 samples, 0.12%)</title><rect x="22.0339%" y="1157" width="0.1211%" height="15" fill="rgb(220,15,8)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1167.50"></text></g><g><title>do_execveat_common.isra.0 (2 samples, 0.12%)</title><rect x="22.0339%" y="1141" width="0.1211%" height="15" fill="rgb(248,134,53)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1151.50"></text></g><g><title>bprm_execve (2 samples, 0.12%)</title><rect x="22.0339%" y="1125" width="0.1211%" height="15" fill="rgb(232,147,16)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1135.50"></text></g><g><title>bprm_execve.part.0 (2 samples, 0.12%)</title><rect x="22.0339%" y="1109" width="0.1211%" height="15" fill="rgb(223,6,31)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1119.50"></text></g><g><title>exec_binprm (2 samples, 0.12%)</title><rect x="22.0339%" y="1093" width="0.1211%" height="15" fill="rgb(223,123,21)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1103.50"></text></g><g><title>search_binary_handler (2 samples, 0.12%)</title><rect x="22.0339%" y="1077" width="0.1211%" height="15" fill="rgb(243,193,38)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1087.50"></text></g><g><title>load_elf_binary (2 samples, 0.12%)</title><rect x="22.0339%" y="1061" width="0.1211%" height="15" fill="rgb(246,102,21)" fg:x="364" fg:w="2"/><text x="22.2839%" y="1071.50"></text></g><g><title>setup_arg_pages (1 samples, 0.06%)</title><rect x="22.0944%" y="1045" width="0.0605%" height="15" fill="rgb(232,213,47)" fg:x="365" fg:w="1"/><text x="22.3444%" y="1055.50"></text></g><g><title>shift_arg_pages (1 samples, 0.06%)</title><rect x="22.0944%" y="1029" width="0.0605%" height="15" fill="rgb(220,171,8)" fg:x="365" fg:w="1"/><text x="22.3444%" y="1039.50"></text></g><g><title>__vma_adjust (1 samples, 0.06%)</title><rect x="22.0944%" y="1013" width="0.0605%" height="15" fill="rgb(224,210,22)" fg:x="365" fg:w="1"/><text x="22.3444%" y="1023.50"></text></g><g><title>vma_mas_store (1 samples, 0.06%)</title><rect x="22.0944%" y="997" width="0.0605%" height="15" fill="rgb(244,150,25)" fg:x="365" fg:w="1"/><text x="22.3444%" y="1007.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.06%)</title><rect x="22.0944%" y="981" width="0.0605%" height="15" fill="rgb(217,123,23)" fg:x="365" fg:w="1"/><text x="22.3444%" y="991.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.06%)</title><rect x="22.0944%" y="965" width="0.0605%" height="15" fill="rgb(228,79,50)" fg:x="365" fg:w="1"/><text x="22.3444%" y="975.50"></text></g><g><title>mas_wr_walk (1 samples, 0.06%)</title><rect x="22.0944%" y="949" width="0.0605%" height="15" fill="rgb(239,153,28)" fg:x="365" fg:w="1"/><text x="22.3444%" y="959.50"></text></g><g><title>mas_is_span_wr (1 samples, 0.06%)</title><rect x="22.0944%" y="933" width="0.0605%" height="15" fill="rgb(244,50,19)" fg:x="365" fg:w="1"/><text x="22.3444%" y="943.50"></text></g><g><title>OSSL_DECODER_do_all_provided (1 samples, 0.06%)</title><rect x="22.1550%" y="901" width="0.0605%" height="15" fill="rgb(214,174,22)" fg:x="366" fg:w="1"/><text x="22.4050%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.1550%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="1"/><text x="22.4050%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.1550%" y="869" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="1"/><text x="22.4050%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.1550%" y="853" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="1"/><text x="22.4050%" y="863.50"></text></g><g><title>OSSL_DECODER_up_ref (1 samples, 0.06%)</title><rect x="22.1550%" y="837" width="0.0605%" height="15" fill="rgb(226,223,47)" fg:x="366" fg:w="1"/><text x="22.4050%" y="847.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.06%)</title><rect x="22.2155%" y="869" width="0.0605%" height="15" fill="rgb(251,110,52)" fg:x="367" fg:w="1"/><text x="22.4655%" y="879.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.06%)</title><rect x="22.2155%" y="853" width="0.0605%" height="15" fill="rgb(226,98,8)" fg:x="367" fg:w="1"/><text x="22.4655%" y="863.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.06%)</title><rect x="22.2760%" y="853" width="0.0605%" height="15" fill="rgb(231,206,42)" fg:x="368" fg:w="1"/><text x="22.5260%" y="863.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.06%)</title><rect x="22.2760%" y="837" width="0.0605%" height="15" fill="rgb(239,157,37)" fg:x="368" fg:w="1"/><text x="22.5260%" y="847.50"></text></g><g><title>CRYPTO_free (1 samples, 0.06%)</title><rect x="22.3366%" y="853" width="0.0605%" height="15" fill="rgb(235,53,26)" fg:x="369" fg:w="1"/><text x="22.5866%" y="863.50"></text></g><g><title>OPENSSL_LH_retrieve (3 samples, 0.18%)</title><rect x="22.3971%" y="853" width="0.1816%" height="15" fill="rgb(211,135,50)" fg:x="370" fg:w="3"/><text x="22.6471%" y="863.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="22.3971%" y="837" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="370" fg:w="3"/><text x="22.6471%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.5182%" y="821" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="372" fg:w="1"/><text x="22.7682%" y="831.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (8 samples, 0.48%)</title><rect x="22.1550%" y="917" width="0.4843%" height="15" fill="rgb(243,10,12)" fg:x="366" fg:w="8"/><text x="22.4050%" y="927.50"></text></g><g><title>OSSL_DECODER_is_a (7 samples, 0.42%)</title><rect x="22.2155%" y="901" width="0.4237%" height="15" fill="rgb(220,153,48)" fg:x="367" fg:w="7"/><text x="22.4655%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 0.42%)</title><rect x="22.2155%" y="885" width="0.4237%" height="15" fill="rgb(222,124,3)" fg:x="367" fg:w="7"/><text x="22.4655%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 0.36%)</title><rect x="22.2760%" y="869" width="0.3632%" height="15" fill="rgb(222,124,3)" fg:x="368" fg:w="6"/><text x="22.5260%" y="879.50"></text></g><g><title>___pthread_getspecific (1 samples, 0.06%)</title><rect x="22.5787%" y="853" width="0.0605%" height="15" fill="rgb(226,150,32)" fg:x="373" fg:w="1"/><text x="22.8287%" y="863.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (10 samples, 0.61%)</title><rect x="22.1550%" y="933" width="0.6053%" height="15" fill="rgb(250,130,40)" fg:x="366" fg:w="10"/><text x="22.4050%" y="943.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="22.6392%" y="917" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="374" fg:w="2"/><text x="22.8892%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="22.6392%" y="901" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="374" fg:w="2"/><text x="22.8892%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.6998%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="375" fg:w="1"/><text x="22.9498%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.7603%" y="853" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="1"/><text x="23.0103%" y="863.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.7603%" y="837" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="1"/><text x="23.0103%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.7603%" y="821" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="1"/><text x="23.0103%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.7603%" y="805" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="1"/><text x="23.0103%" y="815.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (1 samples, 0.06%)</title><rect x="22.7603%" y="789" width="0.0605%" height="15" fill="rgb(207,154,36)" fg:x="376" fg:w="1"/><text x="23.0103%" y="799.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.7603%" y="773" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="1"/><text x="23.0103%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="22.7603%" y="757" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="376" fg:w="1"/><text x="23.0103%" y="767.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="22.7603%" y="741" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="376" fg:w="1"/><text x="23.0103%" y="751.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="22.7603%" y="725" width="0.0605%" height="15" fill="rgb(228,194,39)" fg:x="376" fg:w="1"/><text x="23.0103%" y="735.50"></text></g><g><title>OSSL_DECODER_from_data (2 samples, 0.12%)</title><rect x="22.7603%" y="933" width="0.1211%" height="15" fill="rgb(219,195,36)" fg:x="376" fg:w="2"/><text x="23.0103%" y="943.50"></text></g><g><title>OSSL_DECODER_from_bio (2 samples, 0.12%)</title><rect x="22.7603%" y="917" width="0.1211%" height="15" fill="rgb(213,119,8)" fg:x="376" fg:w="2"/><text x="23.0103%" y="927.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="22.7603%" y="901" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="2"/><text x="23.0103%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="22.7603%" y="885" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="2"/><text x="23.0103%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="22.7603%" y="869" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="376" fg:w="2"/><text x="23.0103%" y="879.50"></text></g><g><title>asn1_d2i_read_bio (1 samples, 0.06%)</title><rect x="22.8208%" y="853" width="0.0605%" height="15" fill="rgb(248,83,49)" fg:x="377" fg:w="1"/><text x="23.0708%" y="863.50"></text></g><g><title>BIO_read (1 samples, 0.06%)</title><rect x="22.8208%" y="837" width="0.0605%" height="15" fill="rgb(222,53,33)" fg:x="377" fg:w="1"/><text x="23.0708%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.8208%" y="821" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="377" fg:w="1"/><text x="23.0708%" y="831.50"></text></g><g><title>BIO_read_ex (1 samples, 0.06%)</title><rect x="22.8208%" y="805" width="0.0605%" height="15" fill="rgb(230,190,25)" fg:x="377" fg:w="1"/><text x="23.0708%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.8208%" y="789" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="377" fg:w="1"/><text x="23.0708%" y="799.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.8208%" y="773" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="377" fg:w="1"/><text x="23.0708%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.8208%" y="757" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="377" fg:w="1"/><text x="23.0708%" y="767.50"></text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (13 samples, 0.79%)</title><rect x="22.1550%" y="1109" width="0.7869%" height="15" fill="rgb(240,115,36)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1119.50"></text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (13 samples, 0.79%)</title><rect x="22.1550%" y="1093" width="0.7869%" height="15" fill="rgb(221,180,35)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1103.50"></text></g><g><title>[libssl.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="1077" width="0.7869%" height="15" fill="rgb(243,173,28)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1087.50"></text></g><g><title>[libssl.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="1061" width="0.7869%" height="15" fill="rgb(243,173,28)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1071.50"></text></g><g><title>ASN1_item_d2i_ex (13 samples, 0.79%)</title><rect x="22.1550%" y="1045" width="0.7869%" height="15" fill="rgb(235,7,46)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1055.50"></text></g><g><title>[libcrypto.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="1029" width="0.7869%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1039.50"></text></g><g><title>[libcrypto.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="1013" width="0.7869%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1023.50"></text></g><g><title>[libcrypto.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="997" width="0.7869%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="13"/><text x="22.4050%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="981" width="0.7869%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="13"/><text x="22.4050%" y="991.50"></text></g><g><title>[libcrypto.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="965" width="0.7869%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="13"/><text x="22.4050%" y="975.50"></text></g><g><title>[libcrypto.so.3.0.8] (13 samples, 0.79%)</title><rect x="22.1550%" y="949" width="0.7869%" height="15" fill="rgb(222,124,3)" fg:x="366" fg:w="13"/><text x="22.4050%" y="959.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.8814%" y="933" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="378" fg:w="1"/><text x="23.1314%" y="943.50"></text></g><g><title>ASN1_STRING_to_UTF8 (1 samples, 0.06%)</title><rect x="22.8814%" y="917" width="0.0605%" height="15" fill="rgb(216,80,41)" fg:x="378" fg:w="1"/><text x="23.1314%" y="927.50"></text></g><g><title>ASN1_mbstring_ncopy (1 samples, 0.06%)</title><rect x="22.8814%" y="901" width="0.0605%" height="15" fill="rgb(251,223,17)" fg:x="378" fg:w="1"/><text x="23.1314%" y="911.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.8814%" y="885" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="378" fg:w="1"/><text x="23.1314%" y="895.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (14 samples, 0.85%)</title><rect x="22.1550%" y="1237" width="0.8475%" height="15" fill="rgb(221,17,0)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1247.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (14 samples, 0.85%)</title><rect x="22.1550%" y="1221" width="0.8475%" height="15" fill="rgb(212,174,39)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1231.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (14 samples, 0.85%)</title><rect x="22.1550%" y="1205" width="0.8475%" height="15" fill="rgb(242,57,32)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.85%)</title><rect x="22.1550%" y="1189" width="0.8475%" height="15" fill="rgb(213,225,48)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.85%)</title><rect x="22.1550%" y="1173" width="0.8475%" height="15" fill="rgb(213,225,48)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1183.50"></text></g><g><title>reqwest::connect::with_timeout::{{closure}} (14 samples, 0.85%)</title><rect x="22.1550%" y="1157" width="0.8475%" height="15" fill="rgb(247,17,34)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1167.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (14 samples, 0.85%)</title><rect x="22.1550%" y="1141" width="0.8475%" height="15" fill="rgb(223,47,26)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1151.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (14 samples, 0.85%)</title><rect x="22.1550%" y="1125" width="0.8475%" height="15" fill="rgb(218,93,28)" fg:x="366" fg:w="14"/><text x="22.4050%" y="1135.50"></text></g><g><title>&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="22.9419%" y="1109" width="0.0605%" height="15" fill="rgb(240,184,38)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1119.50"></text></g><g><title>native_tls::imp::TlsConnector::connect (1 samples, 0.06%)</title><rect x="22.9419%" y="1093" width="0.0605%" height="15" fill="rgb(221,17,27)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1103.50"></text></g><g><title>openssl::ssl::connector::ConnectConfiguration::connect (1 samples, 0.06%)</title><rect x="22.9419%" y="1077" width="0.0605%" height="15" fill="rgb(235,189,48)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1087.50"></text></g><g><title>openssl::ssl::Ssl::connect (1 samples, 0.06%)</title><rect x="22.9419%" y="1061" width="0.0605%" height="15" fill="rgb(214,221,29)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1071.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.9419%" y="1045" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1055.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.9419%" y="1029" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1039.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.9419%" y="1013" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1023.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.9419%" y="997" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="379" fg:w="1"/><text x="23.1919%" y="1007.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="22.9419%" y="981" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="379" fg:w="1"/><text x="23.1919%" y="991.50"></text></g><g><title>malloc@plt (1 samples, 0.06%)</title><rect x="23.0024%" y="1237" width="0.0605%" height="15" fill="rgb(241,193,25)" fg:x="380" fg:w="1"/><text x="23.2524%" y="1247.50"></text></g><g><title>memcpy@plt (3 samples, 0.18%)</title><rect x="23.0630%" y="1237" width="0.1816%" height="15" fill="rgb(221,70,25)" fg:x="381" fg:w="3"/><text x="23.3130%" y="1247.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="23.2446%" y="1205" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="384" fg:w="1"/><text x="23.4946%" y="1215.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="23.2446%" y="1189" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="384" fg:w="1"/><text x="23.4946%" y="1199.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="23.2446%" y="1173" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="384" fg:w="1"/><text x="23.4946%" y="1183.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="23.2446%" y="1157" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="384" fg:w="1"/><text x="23.4946%" y="1167.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="23.2446%" y="1141" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="384" fg:w="1"/><text x="23.4946%" y="1151.50"></text></g><g><title>__arch_copy_from_user (1 samples, 0.06%)</title><rect x="23.2446%" y="1125" width="0.0605%" height="15" fill="rgb(218,28,23)" fg:x="384" fg:w="1"/><text x="23.4946%" y="1135.50"></text></g><g><title>do_mmap (1 samples, 0.06%)</title><rect x="23.3051%" y="981" width="0.0605%" height="15" fill="rgb(228,25,27)" fg:x="385" fg:w="1"/><text x="23.5551%" y="991.50"></text></g><g><title>mmap_region (1 samples, 0.06%)</title><rect x="23.3051%" y="965" width="0.0605%" height="15" fill="rgb(233,57,38)" fg:x="385" fg:w="1"/><text x="23.5551%" y="975.50"></text></g><g><title>do_mas_munmap (1 samples, 0.06%)</title><rect x="23.3051%" y="949" width="0.0605%" height="15" fill="rgb(221,131,6)" fg:x="385" fg:w="1"/><text x="23.5551%" y="959.50"></text></g><g><title>mas_find (1 samples, 0.06%)</title><rect x="23.3051%" y="933" width="0.0605%" height="15" fill="rgb(244,56,24)" fg:x="385" fg:w="1"/><text x="23.5551%" y="943.50"></text></g><g><title>mtree_range_walk (1 samples, 0.06%)</title><rect x="23.3051%" y="917" width="0.0605%" height="15" fill="rgb(252,125,21)" fg:x="385" fg:w="1"/><text x="23.5551%" y="927.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.06%)</title><rect x="23.3656%" y="949" width="0.0605%" height="15" fill="rgb(240,46,24)" fg:x="386" fg:w="1"/><text x="23.6156%" y="959.50"></text></g><g><title>down_write_killable (3 samples, 0.18%)</title><rect x="23.3656%" y="981" width="0.1816%" height="15" fill="rgb(229,142,1)" fg:x="386" fg:w="3"/><text x="23.6156%" y="991.50"></text></g><g><title>rwsem_down_write_slowpath (3 samples, 0.18%)</title><rect x="23.3656%" y="965" width="0.1816%" height="15" fill="rgb(250,77,51)" fg:x="386" fg:w="3"/><text x="23.6156%" y="975.50"></text></g><g><title>rwsem_spin_on_owner (2 samples, 0.12%)</title><rect x="23.4262%" y="949" width="0.1211%" height="15" fill="rgb(231,125,28)" fg:x="387" fg:w="2"/><text x="23.6762%" y="959.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.36%)</title><rect x="23.3051%" y="1125" width="0.3632%" height="15" fill="rgb(216,161,14)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1135.50"></text></g><g><title>el0t_64_sync_handler (6 samples, 0.36%)</title><rect x="23.3051%" y="1109" width="0.3632%" height="15" fill="rgb(232,35,33)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1119.50"></text></g><g><title>el0_svc (6 samples, 0.36%)</title><rect x="23.3051%" y="1093" width="0.3632%" height="15" fill="rgb(225,46,33)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1103.50"></text></g><g><title>do_el0_svc (6 samples, 0.36%)</title><rect x="23.3051%" y="1077" width="0.3632%" height="15" fill="rgb(221,53,8)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1087.50"></text></g><g><title>el0_svc_common.constprop.0 (6 samples, 0.36%)</title><rect x="23.3051%" y="1061" width="0.3632%" height="15" fill="rgb(219,7,42)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1071.50"></text></g><g><title>invoke_syscall (6 samples, 0.36%)</title><rect x="23.3051%" y="1045" width="0.3632%" height="15" fill="rgb(234,209,2)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1055.50"></text></g><g><title>__arm64_sys_mmap (6 samples, 0.36%)</title><rect x="23.3051%" y="1029" width="0.3632%" height="15" fill="rgb(232,29,1)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1039.50"></text></g><g><title>ksys_mmap_pgoff (6 samples, 0.36%)</title><rect x="23.3051%" y="1013" width="0.3632%" height="15" fill="rgb(248,1,16)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1023.50"></text></g><g><title>vm_mmap_pgoff (6 samples, 0.36%)</title><rect x="23.3051%" y="997" width="0.3632%" height="15" fill="rgb(226,196,1)" fg:x="385" fg:w="6"/><text x="23.5551%" y="1007.50"></text></g><g><title>security_mmap_file (2 samples, 0.12%)</title><rect x="23.5472%" y="981" width="0.1211%" height="15" fill="rgb(243,145,32)" fg:x="389" fg:w="2"/><text x="23.7972%" y="991.50"></text></g><g><title>selinux_mmap_file (1 samples, 0.06%)</title><rect x="23.6077%" y="965" width="0.0605%" height="15" fill="rgb(242,200,34)" fg:x="390" fg:w="1"/><text x="23.8577%" y="975.50"></text></g><g><title>file_map_prot_check (1 samples, 0.06%)</title><rect x="23.6077%" y="949" width="0.0605%" height="15" fill="rgb(211,116,22)" fg:x="390" fg:w="1"/><text x="23.8577%" y="959.50"></text></g><g><title>down_write_killable (2 samples, 0.12%)</title><rect x="23.6683%" y="997" width="0.1211%" height="15" fill="rgb(229,142,1)" fg:x="391" fg:w="2"/><text x="23.9183%" y="1007.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.12%)</title><rect x="23.6683%" y="981" width="0.1211%" height="15" fill="rgb(250,77,51)" fg:x="391" fg:w="2"/><text x="23.9183%" y="991.50"></text></g><g><title>rwsem_spin_on_owner (2 samples, 0.12%)</title><rect x="23.6683%" y="965" width="0.1211%" height="15" fill="rgb(231,125,28)" fg:x="391" fg:w="2"/><text x="23.9183%" y="975.50"></text></g><g><title>el1h_64_irq (1 samples, 0.06%)</title><rect x="23.7288%" y="949" width="0.0605%" height="15" fill="rgb(223,86,28)" fg:x="392" fg:w="1"/><text x="23.9788%" y="959.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.06%)</title><rect x="23.7288%" y="933" width="0.0605%" height="15" fill="rgb(231,46,5)" fg:x="392" fg:w="1"/><text x="23.9788%" y="943.50"></text></g><g><title>el1_interrupt (1 samples, 0.06%)</title><rect x="23.7288%" y="917" width="0.0605%" height="15" fill="rgb(254,19,43)" fg:x="392" fg:w="1"/><text x="23.9788%" y="927.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="23.7288%" y="901" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="392" fg:w="1"/><text x="23.9788%" y="911.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="23.7288%" y="885" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="392" fg:w="1"/><text x="23.9788%" y="895.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="23.7288%" y="869" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="392" fg:w="1"/><text x="23.9788%" y="879.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="23.7288%" y="853" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="392" fg:w="1"/><text x="23.9788%" y="863.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="23.7288%" y="837" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="392" fg:w="1"/><text x="23.9788%" y="847.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="23.7288%" y="821" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="392" fg:w="1"/><text x="23.9788%" y="831.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="23.7288%" y="805" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="392" fg:w="1"/><text x="23.9788%" y="815.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="23.7288%" y="789" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="392" fg:w="1"/><text x="23.9788%" y="799.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="23.7288%" y="773" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="392" fg:w="1"/><text x="23.9788%" y="783.50"></text></g><g><title>napi_complete_done (1 samples, 0.06%)</title><rect x="23.7288%" y="757" width="0.0605%" height="15" fill="rgb(226,216,13)" fg:x="392" fg:w="1"/><text x="23.9788%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.06%)</title><rect x="23.7288%" y="741" width="0.0605%" height="15" fill="rgb(216,153,44)" fg:x="392" fg:w="1"/><text x="23.9788%" y="751.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.06%)</title><rect x="23.7288%" y="725" width="0.0605%" height="15" fill="rgb(227,176,26)" fg:x="392" fg:w="1"/><text x="23.9788%" y="735.50"></text></g><g><title>ip_list_rcv (1 samples, 0.06%)</title><rect x="23.7288%" y="709" width="0.0605%" height="15" fill="rgb(215,38,16)" fg:x="392" fg:w="1"/><text x="23.9788%" y="719.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.06%)</title><rect x="23.7288%" y="693" width="0.0605%" height="15" fill="rgb(207,166,9)" fg:x="392" fg:w="1"/><text x="23.9788%" y="703.50"></text></g><g><title>ip_sublist_rcv_finish (1 samples, 0.06%)</title><rect x="23.7288%" y="677" width="0.0605%" height="15" fill="rgb(223,178,14)" fg:x="392" fg:w="1"/><text x="23.9788%" y="687.50"></text></g><g><title>ip_local_deliver (1 samples, 0.06%)</title><rect x="23.7288%" y="661" width="0.0605%" height="15" fill="rgb(221,216,39)" fg:x="392" fg:w="1"/><text x="23.9788%" y="671.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="23.7288%" y="645" width="0.0605%" height="15" fill="rgb(220,94,29)" fg:x="392" fg:w="1"/><text x="23.9788%" y="655.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="23.7288%" y="629" width="0.0605%" height="15" fill="rgb(207,19,13)" fg:x="392" fg:w="1"/><text x="23.9788%" y="639.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="23.7288%" y="613" width="0.0605%" height="15" fill="rgb(224,38,0)" fg:x="392" fg:w="1"/><text x="23.9788%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="23.7288%" y="597" width="0.0605%" height="15" fill="rgb(228,220,18)" fg:x="392" fg:w="1"/><text x="23.9788%" y="607.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="23.7288%" y="581" width="0.0605%" height="15" fill="rgb(224,50,47)" fg:x="392" fg:w="1"/><text x="23.9788%" y="591.50"></text></g><g><title>tcp_data_queue (1 samples, 0.06%)</title><rect x="23.7288%" y="565" width="0.0605%" height="15" fill="rgb(221,5,12)" fg:x="392" fg:w="1"/><text x="23.9788%" y="575.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="23.7288%" y="549" width="0.0605%" height="15" fill="rgb(254,91,48)" fg:x="392" fg:w="1"/><text x="23.9788%" y="559.50"></text></g><g><title>mem_cgroup_charge_skmem (1 samples, 0.06%)</title><rect x="23.7288%" y="533" width="0.0605%" height="15" fill="rgb(248,15,41)" fg:x="392" fg:w="1"/><text x="23.9788%" y="543.50"></text></g><g><title>try_charge_memcg (1 samples, 0.06%)</title><rect x="23.7288%" y="517" width="0.0605%" height="15" fill="rgb(209,44,39)" fg:x="392" fg:w="1"/><text x="23.9788%" y="527.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.06%)</title><rect x="23.7288%" y="501" width="0.0605%" height="15" fill="rgb(222,104,3)" fg:x="392" fg:w="1"/><text x="23.9788%" y="511.50"></text></g><g><title>thread_start (10 samples, 0.61%)</title><rect x="23.2446%" y="1237" width="0.6053%" height="15" fill="rgb(213,48,3)" fg:x="384" fg:w="10"/><text x="23.4946%" y="1247.50"></text></g><g><title>start_thread (10 samples, 0.61%)</title><rect x="23.2446%" y="1221" width="0.6053%" height="15" fill="rgb(209,148,13)" fg:x="384" fg:w="10"/><text x="23.4946%" y="1231.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.54%)</title><rect x="23.3051%" y="1205" width="0.5448%" height="15" fill="rgb(215,36,0)" fg:x="385" fg:w="9"/><text x="23.5551%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (9 samples, 0.54%)</title><rect x="23.3051%" y="1189" width="0.5448%" height="15" fill="rgb(218,173,48)" fg:x="385" fg:w="9"/><text x="23.5551%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (9 samples, 0.54%)</title><rect x="23.3051%" y="1173" width="0.5448%" height="15" fill="rgb(237,166,40)" fg:x="385" fg:w="9"/><text x="23.5551%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (9 samples, 0.54%)</title><rect x="23.3051%" y="1157" width="0.5448%" height="15" fill="rgb(223,116,29)" fg:x="385" fg:w="9"/><text x="23.5551%" y="1167.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (9 samples, 0.54%)</title><rect x="23.3051%" y="1141" width="0.5448%" height="15" fill="rgb(233,124,20)" fg:x="385" fg:w="9"/><text x="23.5551%" y="1151.50"></text></g><g><title>__GI___mprotect (3 samples, 0.18%)</title><rect x="23.6683%" y="1125" width="0.1816%" height="15" fill="rgb(209,155,30)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1135.50"></text></g><g><title>el0t_64_sync_handler (3 samples, 0.18%)</title><rect x="23.6683%" y="1109" width="0.1816%" height="15" fill="rgb(232,35,33)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1119.50"></text></g><g><title>el0_svc (3 samples, 0.18%)</title><rect x="23.6683%" y="1093" width="0.1816%" height="15" fill="rgb(225,46,33)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1103.50"></text></g><g><title>do_el0_svc (3 samples, 0.18%)</title><rect x="23.6683%" y="1077" width="0.1816%" height="15" fill="rgb(221,53,8)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1087.50"></text></g><g><title>el0_svc_common.constprop.0 (3 samples, 0.18%)</title><rect x="23.6683%" y="1061" width="0.1816%" height="15" fill="rgb(219,7,42)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1071.50"></text></g><g><title>invoke_syscall (3 samples, 0.18%)</title><rect x="23.6683%" y="1045" width="0.1816%" height="15" fill="rgb(234,209,2)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1055.50"></text></g><g><title>__arm64_sys_mprotect (3 samples, 0.18%)</title><rect x="23.6683%" y="1029" width="0.1816%" height="15" fill="rgb(247,52,18)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1039.50"></text></g><g><title>do_mprotect_pkey.constprop.0 (3 samples, 0.18%)</title><rect x="23.6683%" y="1013" width="0.1816%" height="15" fill="rgb(216,195,21)" fg:x="391" fg:w="3"/><text x="23.9183%" y="1023.50"></text></g><g><title>mprotect_fixup (1 samples, 0.06%)</title><rect x="23.7893%" y="997" width="0.0605%" height="15" fill="rgb(232,46,46)" fg:x="393" fg:w="1"/><text x="24.0393%" y="1007.50"></text></g><g><title>perf_event_mmap (1 samples, 0.06%)</title><rect x="23.7893%" y="981" width="0.0605%" height="15" fill="rgb(252,32,1)" fg:x="393" fg:w="1"/><text x="24.0393%" y="991.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.06%)</title><rect x="23.7893%" y="965" width="0.0605%" height="15" fill="rgb(230,119,49)" fg:x="393" fg:w="1"/><text x="24.0393%" y="975.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.06%)</title><rect x="23.7893%" y="949" width="0.0605%" height="15" fill="rgb(241,203,1)" fg:x="393" fg:w="1"/><text x="24.0393%" y="959.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.06%)</title><rect x="23.7893%" y="933" width="0.0605%" height="15" fill="rgb(227,133,21)" fg:x="393" fg:w="1"/><text x="24.0393%" y="943.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.06%)</title><rect x="23.7893%" y="917" width="0.0605%" height="15" fill="rgb(225,127,18)" fg:x="393" fg:w="1"/><text x="24.0393%" y="927.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.06%)</title><rect x="23.7893%" y="901" width="0.0605%" height="15" fill="rgb(218,49,52)" fg:x="393" fg:w="1"/><text x="24.0393%" y="911.50"></text></g><g><title>local_clock (1 samples, 0.06%)</title><rect x="23.7893%" y="885" width="0.0605%" height="15" fill="rgb(226,72,52)" fg:x="393" fg:w="1"/><text x="24.0393%" y="895.50"></text></g><g><title>arch_counter_get_cntvct (1 samples, 0.06%)</title><rect x="23.7893%" y="869" width="0.0605%" height="15" fill="rgb(234,51,43)" fg:x="393" fg:w="1"/><text x="24.0393%" y="879.50"></text></g><g><title>&lt;alloy_sol_type_parser::root::RootType as alloy_dyn_abi::resolve::ResolveSolType&gt;::resolve (1 samples, 0.06%)</title><rect x="24.0315%" y="1173" width="0.0605%" height="15" fill="rgb(209,9,13)" fg:x="397" fg:w="1"/><text x="24.2815%" y="1183.50"></text></g><g><title>&lt;alloy_json_abi::param::Param as alloy_dyn_abi::resolve::ResolveSolType&gt;::resolve (2 samples, 0.12%)</title><rect x="24.0315%" y="1189" width="0.1211%" height="15" fill="rgb(237,0,14)" fg:x="397" fg:w="2"/><text x="24.2815%" y="1199.50"></text></g><g><title>alloy_sol_type_parser::type_spec::TypeSpecifier::parse (1 samples, 0.06%)</title><rect x="24.0920%" y="1173" width="0.0605%" height="15" fill="rgb(246,41,25)" fg:x="398" fg:w="1"/><text x="24.3420%" y="1183.50"></text></g><g><title>bytes::bytes::shared_clone (1 samples, 0.06%)</title><rect x="24.2736%" y="1173" width="0.0605%" height="15" fill="rgb(213,143,48)" fg:x="401" fg:w="1"/><text x="24.5236%" y="1183.50"></text></g><g><title>__aarch64_ldadd8_relax (1 samples, 0.06%)</title><rect x="24.2736%" y="1157" width="0.0605%" height="15" fill="rgb(220,1,46)" fg:x="401" fg:w="1"/><text x="24.5236%" y="1167.50"></text></g><g><title>&lt;reth_rpc_types::eth::trace::parity::LocalizedTransactionTrace as core::clone::Clone&gt;::clone (4 samples, 0.24%)</title><rect x="24.1525%" y="1189" width="0.2421%" height="15" fill="rgb(212,148,13)" fg:x="399" fg:w="4"/><text x="24.4025%" y="1199.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="24.3341%" y="1173" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1183.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="24.3341%" y="1157" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1167.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="24.3341%" y="1141" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1151.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="24.3341%" y="1125" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1135.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="24.3341%" y="1109" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1119.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="24.3341%" y="1093" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1103.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="24.3341%" y="1077" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1087.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="24.3341%" y="1061" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1071.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="24.3341%" y="1045" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="402" fg:w="1"/><text x="24.5841%" y="1055.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="24.3947%" y="1189" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1199.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="24.3947%" y="1173" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1183.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="24.3947%" y="1157" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1167.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="24.3947%" y="1141" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1151.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="24.3947%" y="1125" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1135.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="24.3947%" y="1109" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1119.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="24.3947%" y="1093" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1103.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="24.3947%" y="1077" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1087.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="24.3947%" y="1061" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1071.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="24.3947%" y="1045" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="403" fg:w="1"/><text x="24.6447%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="24.4552%" y="1189" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="404" fg:w="1"/><text x="24.7052%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="24.4552%" y="1173" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="404" fg:w="1"/><text x="24.7052%" y="1183.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="24.4552%" y="1157" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="404" fg:w="1"/><text x="24.7052%" y="1167.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="24.4552%" y="1141" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="404" fg:w="1"/><text x="24.7052%" y="1151.50"></text></g><g><title>__memcpy_generic (1 samples, 0.06%)</title><rect x="24.4552%" y="1125" width="0.0605%" height="15" fill="rgb(209,187,6)" fg:x="404" fg:w="1"/><text x="24.7052%" y="1135.50"></text></g><g><title>alloy_dyn_abi::ty::DynSolType::detokenize (1 samples, 0.06%)</title><rect x="24.5157%" y="1173" width="0.0605%" height="15" fill="rgb(225,172,17)" fg:x="405" fg:w="1"/><text x="24.7657%" y="1183.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.06%)</title><rect x="24.5157%" y="1157" width="0.0605%" height="15" fill="rgb(236,86,7)" fg:x="405" fg:w="1"/><text x="24.7657%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="24.5157%" y="1141" width="0.0605%" height="15" fill="rgb(227,158,43)" fg:x="405" fg:w="1"/><text x="24.7657%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="24.5157%" y="1125" width="0.0605%" height="15" fill="rgb(246,51,5)" fg:x="405" fg:w="1"/><text x="24.7657%" y="1135.50"></text></g><g><title>alloy_dyn_abi::ty::DynSolType::decode_sequence (2 samples, 0.12%)</title><rect x="24.5157%" y="1189" width="0.1211%" height="15" fill="rgb(232,13,43)" fg:x="405" fg:w="2"/><text x="24.7657%" y="1199.50"></text></g><g><title>alloy_dyn_abi::ty::DynSolType::empty_dyn_token (1 samples, 0.06%)</title><rect x="24.5763%" y="1173" width="0.0605%" height="15" fill="rgb(250,65,29)" fg:x="406" fg:w="1"/><text x="24.8263%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="24.5763%" y="1157" width="0.0605%" height="15" fill="rgb(227,158,43)" fg:x="406" fg:w="1"/><text x="24.8263%" y="1167.50"></text></g><g><title>alloy_dyn_abi::ty::DynSolType::empty_dyn_token (1 samples, 0.06%)</title><rect x="24.5763%" y="1141" width="0.0605%" height="15" fill="rgb(250,65,29)" fg:x="406" fg:w="1"/><text x="24.8263%" y="1151.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="24.5763%" y="1125" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="406" fg:w="1"/><text x="24.8263%" y="1135.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.06%)</title><rect x="24.6368%" y="1173" width="0.0605%" height="15" fill="rgb(225,219,39)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1183.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.06%)</title><rect x="24.6368%" y="1157" width="0.0605%" height="15" fill="rgb(223,4,50)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1167.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="24.6368%" y="1141" width="0.0605%" height="15" fill="rgb(248,210,20)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1151.50"></text></g><g><title>&lt;primitive_types::H160 as core::fmt::Debug&gt;::fmt (1 samples, 0.06%)</title><rect x="24.6368%" y="1125" width="0.0605%" height="15" fill="rgb(241,113,32)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1135.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.06%)</title><rect x="24.6368%" y="1109" width="0.0605%" height="15" fill="rgb(220,95,32)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1119.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="24.6368%" y="1093" width="0.0605%" height="15" fill="rgb(248,210,20)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1103.50"></text></g><g><title>core::fmt::run (1 samples, 0.06%)</title><rect x="24.6368%" y="1077" width="0.0605%" height="15" fill="rgb(221,42,0)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1087.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (1 samples, 0.06%)</title><rect x="24.6368%" y="1061" width="0.0605%" height="15" fill="rgb(210,53,27)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1071.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.06%)</title><rect x="24.6368%" y="1045" width="0.0605%" height="15" fill="rgb(220,95,32)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1055.50"></text></g><g><title>core::fmt::write (1 samples, 0.06%)</title><rect x="24.6368%" y="1029" width="0.0605%" height="15" fill="rgb(248,210,20)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1039.50"></text></g><g><title>core::fmt::run (1 samples, 0.06%)</title><rect x="24.6368%" y="1013" width="0.0605%" height="15" fill="rgb(221,42,0)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1023.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (1 samples, 0.06%)</title><rect x="24.6368%" y="997" width="0.0605%" height="15" fill="rgb(222,108,39)" fg:x="407" fg:w="1"/><text x="24.8868%" y="1007.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (1 samples, 0.06%)</title><rect x="24.6368%" y="981" width="0.0605%" height="15" fill="rgb(233,186,32)" fg:x="407" fg:w="1"/><text x="24.8868%" y="991.50"></text></g><g><title>alloy_etherscan::Cache::get_source (2 samples, 0.12%)</title><rect x="24.6368%" y="1189" width="0.1211%" height="15" fill="rgb(212,91,13)" fg:x="407" fg:w="2"/><text x="24.8868%" y="1199.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.06%)</title><rect x="24.6973%" y="1173" width="0.0605%" height="15" fill="rgb(207,13,40)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1183.50"></text></g><g><title>std::path::Path::to_path_buf (1 samples, 0.06%)</title><rect x="24.6973%" y="1157" width="0.0605%" height="15" fill="rgb(208,226,36)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1167.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.06%)</title><rect x="24.6973%" y="1141" width="0.0605%" height="15" fill="rgb(228,33,8)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1151.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.06%)</title><rect x="24.6973%" y="1125" width="0.0605%" height="15" fill="rgb(253,20,40)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.06%)</title><rect x="24.6973%" y="1109" width="0.0605%" height="15" fill="rgb(209,26,30)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.06%)</title><rect x="24.6973%" y="1093" width="0.0605%" height="15" fill="rgb(229,121,46)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.06%)</title><rect x="24.6973%" y="1077" width="0.0605%" height="15" fill="rgb(221,172,50)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="24.6973%" y="1061" width="0.0605%" height="15" fill="rgb(216,42,52)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.06%)</title><rect x="24.6973%" y="1045" width="0.0605%" height="15" fill="rgb(222,107,1)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.06%)</title><rect x="24.6973%" y="1029" width="0.0605%" height="15" fill="rgb(214,20,35)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1039.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="24.6973%" y="1013" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="408" fg:w="1"/><text x="24.9473%" y="1023.50"></text></g><g><title>alloc_empty_file (1 samples, 0.06%)</title><rect x="24.8184%" y="869" width="0.0605%" height="15" fill="rgb(242,156,16)" fg:x="410" fg:w="1"/><text x="25.0684%" y="879.50"></text></g><g><title>__alloc_file (1 samples, 0.06%)</title><rect x="24.8184%" y="853" width="0.0605%" height="15" fill="rgb(208,34,24)" fg:x="410" fg:w="1"/><text x="25.0684%" y="863.50"></text></g><g><title>security_file_alloc (1 samples, 0.06%)</title><rect x="24.8184%" y="837" width="0.0605%" height="15" fill="rgb(251,33,6)" fg:x="410" fg:w="1"/><text x="25.0684%" y="847.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="24.8184%" y="821" width="0.0605%" height="15" fill="rgb(223,51,51)" fg:x="410" fg:w="1"/><text x="25.0684%" y="831.50"></text></g><g><title>alloy_etherscan::Cache::set_source (4 samples, 0.24%)</title><rect x="24.7579%" y="1189" width="0.2421%" height="15" fill="rgb(205,18,35)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1199.50"></text></g><g><title>std::fs::File::create (4 samples, 0.24%)</title><rect x="24.7579%" y="1173" width="0.2421%" height="15" fill="rgb(238,157,22)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1183.50"></text></g><g><title>std::fs::OpenOptions::_open (4 samples, 0.24%)</title><rect x="24.7579%" y="1157" width="0.2421%" height="15" fill="rgb(226,1,37)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1167.50"></text></g><g><title>std::sys::unix::fs::File::open (4 samples, 0.24%)</title><rect x="24.7579%" y="1141" width="0.2421%" height="15" fill="rgb(220,21,1)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1151.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.24%)</title><rect x="24.7579%" y="1125" width="0.2421%" height="15" fill="rgb(226,122,51)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1135.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.24%)</title><rect x="24.7579%" y="1109" width="0.2421%" height="15" fill="rgb(239,63,35)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1119.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (4 samples, 0.24%)</title><rect x="24.7579%" y="1093" width="0.2421%" height="15" fill="rgb(243,15,24)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::open_c (4 samples, 0.24%)</title><rect x="24.7579%" y="1077" width="0.2421%" height="15" fill="rgb(253,73,50)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1087.50"></text></g><g><title>std::sys::unix::cvt_r (4 samples, 0.24%)</title><rect x="24.7579%" y="1061" width="0.2421%" height="15" fill="rgb(247,2,44)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (4 samples, 0.24%)</title><rect x="24.7579%" y="1045" width="0.2421%" height="15" fill="rgb(251,72,33)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1055.50"></text></g><g><title>__libc_open64 (4 samples, 0.24%)</title><rect x="24.7579%" y="1029" width="0.2421%" height="15" fill="rgb(225,39,31)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1039.50"></text></g><g><title>el0t_64_sync_handler (4 samples, 0.24%)</title><rect x="24.7579%" y="1013" width="0.2421%" height="15" fill="rgb(232,35,33)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1023.50"></text></g><g><title>el0_svc (4 samples, 0.24%)</title><rect x="24.7579%" y="997" width="0.2421%" height="15" fill="rgb(225,46,33)" fg:x="409" fg:w="4"/><text x="25.0079%" y="1007.50"></text></g><g><title>do_el0_svc (4 samples, 0.24%)</title><rect x="24.7579%" y="981" width="0.2421%" height="15" fill="rgb(221,53,8)" fg:x="409" fg:w="4"/><text x="25.0079%" y="991.50"></text></g><g><title>el0_svc_common.constprop.0 (4 samples, 0.24%)</title><rect x="24.7579%" y="965" width="0.2421%" height="15" fill="rgb(219,7,42)" fg:x="409" fg:w="4"/><text x="25.0079%" y="975.50"></text></g><g><title>invoke_syscall (3 samples, 0.18%)</title><rect x="24.8184%" y="949" width="0.1816%" height="15" fill="rgb(234,209,2)" fg:x="410" fg:w="3"/><text x="25.0684%" y="959.50"></text></g><g><title>__arm64_sys_openat (3 samples, 0.18%)</title><rect x="24.8184%" y="933" width="0.1816%" height="15" fill="rgb(225,123,44)" fg:x="410" fg:w="3"/><text x="25.0684%" y="943.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.18%)</title><rect x="24.8184%" y="917" width="0.1816%" height="15" fill="rgb(208,111,23)" fg:x="410" fg:w="3"/><text x="25.0684%" y="927.50"></text></g><g><title>do_filp_open (3 samples, 0.18%)</title><rect x="24.8184%" y="901" width="0.1816%" height="15" fill="rgb(219,26,10)" fg:x="410" fg:w="3"/><text x="25.0684%" y="911.50"></text></g><g><title>path_openat (3 samples, 0.18%)</title><rect x="24.8184%" y="885" width="0.1816%" height="15" fill="rgb(228,25,37)" fg:x="410" fg:w="3"/><text x="25.0684%" y="895.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (2 samples, 0.12%)</title><rect x="24.8789%" y="869" width="0.1211%" height="15" fill="rgb(228,149,52)" fg:x="411" fg:w="2"/><text x="25.1289%" y="879.50"></text></g><g><title>walk_component (2 samples, 0.12%)</title><rect x="24.8789%" y="853" width="0.1211%" height="15" fill="rgb(250,91,19)" fg:x="411" fg:w="2"/><text x="25.1289%" y="863.50"></text></g><g><title>__d_lookup_rcu (2 samples, 0.12%)</title><rect x="24.8789%" y="837" width="0.1211%" height="15" fill="rgb(227,66,48)" fg:x="411" fg:w="2"/><text x="25.1289%" y="847.50"></text></g><g><title>alloy_etherscan::Client::sanitize_response (1 samples, 0.06%)</title><rect x="25.0000%" y="1189" width="0.0605%" height="15" fill="rgb(235,59,14)" fg:x="413" fg:w="1"/><text x="25.2500%" y="1199.50"></text></g><g><title>serde_json::de::from_str (1 samples, 0.06%)</title><rect x="25.0000%" y="1173" width="0.0605%" height="15" fill="rgb(217,198,13)" fg:x="413" fg:w="1"/><text x="25.2500%" y="1183.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.12%)</title><rect x="25.0605%" y="1173" width="0.1211%" height="15" fill="rgb(222,167,8)" fg:x="414" fg:w="2"/><text x="25.3105%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.12%)</title><rect x="25.0605%" y="1157" width="0.1211%" height="15" fill="rgb(217,9,51)" fg:x="414" fg:w="2"/><text x="25.3105%" y="1167.50"></text></g><g><title>fput (1 samples, 0.06%)</title><rect x="25.2421%" y="885" width="0.0605%" height="15" fill="rgb(248,98,6)" fg:x="417" fg:w="1"/><text x="25.4921%" y="895.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="25.3027%" y="837" width="0.0605%" height="15" fill="rgb(223,51,51)" fg:x="418" fg:w="1"/><text x="25.5527%" y="847.50"></text></g><g><title>__get_obj_cgroup_from_memcg (1 samples, 0.06%)</title><rect x="25.3027%" y="821" width="0.0605%" height="15" fill="rgb(233,182,33)" fg:x="418" fg:w="1"/><text x="25.5527%" y="831.50"></text></g><g><title>alloc_empty_file (2 samples, 0.12%)</title><rect x="25.3027%" y="869" width="0.1211%" height="15" fill="rgb(242,156,16)" fg:x="418" fg:w="2"/><text x="25.5527%" y="879.50"></text></g><g><title>__alloc_file (2 samples, 0.12%)</title><rect x="25.3027%" y="853" width="0.1211%" height="15" fill="rgb(208,34,24)" fg:x="418" fg:w="2"/><text x="25.5527%" y="863.50"></text></g><g><title>security_file_alloc (1 samples, 0.06%)</title><rect x="25.3632%" y="837" width="0.0605%" height="15" fill="rgb(251,33,6)" fg:x="419" fg:w="1"/><text x="25.6132%" y="847.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="25.3632%" y="821" width="0.0605%" height="15" fill="rgb(223,51,51)" fg:x="419" fg:w="1"/><text x="25.6132%" y="831.50"></text></g><g><title>std::fs::OpenOptions::_open (5 samples, 0.30%)</title><rect x="25.1816%" y="1157" width="0.3027%" height="15" fill="rgb(226,1,37)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1167.50"></text></g><g><title>std::sys::unix::fs::File::open (5 samples, 0.30%)</title><rect x="25.1816%" y="1141" width="0.3027%" height="15" fill="rgb(220,21,1)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1151.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (5 samples, 0.30%)</title><rect x="25.1816%" y="1125" width="0.3027%" height="15" fill="rgb(226,122,51)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1135.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (5 samples, 0.30%)</title><rect x="25.1816%" y="1109" width="0.3027%" height="15" fill="rgb(239,63,35)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1119.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (5 samples, 0.30%)</title><rect x="25.1816%" y="1093" width="0.3027%" height="15" fill="rgb(243,15,24)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::open_c (5 samples, 0.30%)</title><rect x="25.1816%" y="1077" width="0.3027%" height="15" fill="rgb(253,73,50)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1087.50"></text></g><g><title>std::sys::unix::cvt_r (5 samples, 0.30%)</title><rect x="25.1816%" y="1061" width="0.3027%" height="15" fill="rgb(247,2,44)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (5 samples, 0.30%)</title><rect x="25.1816%" y="1045" width="0.3027%" height="15" fill="rgb(251,72,33)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1055.50"></text></g><g><title>__libc_open64 (5 samples, 0.30%)</title><rect x="25.1816%" y="1029" width="0.3027%" height="15" fill="rgb(225,39,31)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1039.50"></text></g><g><title>el0t_64_sync_handler (5 samples, 0.30%)</title><rect x="25.1816%" y="1013" width="0.3027%" height="15" fill="rgb(232,35,33)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1023.50"></text></g><g><title>el0_svc (5 samples, 0.30%)</title><rect x="25.1816%" y="997" width="0.3027%" height="15" fill="rgb(225,46,33)" fg:x="416" fg:w="5"/><text x="25.4316%" y="1007.50"></text></g><g><title>do_el0_svc (5 samples, 0.30%)</title><rect x="25.1816%" y="981" width="0.3027%" height="15" fill="rgb(221,53,8)" fg:x="416" fg:w="5"/><text x="25.4316%" y="991.50"></text></g><g><title>el0_svc_common.constprop.0 (5 samples, 0.30%)</title><rect x="25.1816%" y="965" width="0.3027%" height="15" fill="rgb(219,7,42)" fg:x="416" fg:w="5"/><text x="25.4316%" y="975.50"></text></g><g><title>invoke_syscall (4 samples, 0.24%)</title><rect x="25.2421%" y="949" width="0.2421%" height="15" fill="rgb(234,209,2)" fg:x="417" fg:w="4"/><text x="25.4921%" y="959.50"></text></g><g><title>__arm64_sys_openat (4 samples, 0.24%)</title><rect x="25.2421%" y="933" width="0.2421%" height="15" fill="rgb(225,123,44)" fg:x="417" fg:w="4"/><text x="25.4921%" y="943.50"></text></g><g><title>do_sys_openat2 (4 samples, 0.24%)</title><rect x="25.2421%" y="917" width="0.2421%" height="15" fill="rgb(208,111,23)" fg:x="417" fg:w="4"/><text x="25.4921%" y="927.50"></text></g><g><title>do_filp_open (4 samples, 0.24%)</title><rect x="25.2421%" y="901" width="0.2421%" height="15" fill="rgb(219,26,10)" fg:x="417" fg:w="4"/><text x="25.4921%" y="911.50"></text></g><g><title>path_openat (3 samples, 0.18%)</title><rect x="25.3027%" y="885" width="0.1816%" height="15" fill="rgb(228,25,37)" fg:x="418" fg:w="3"/><text x="25.5527%" y="895.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (1 samples, 0.06%)</title><rect x="25.4237%" y="869" width="0.0605%" height="15" fill="rgb(228,149,52)" fg:x="420" fg:w="1"/><text x="25.6737%" y="879.50"></text></g><g><title>inode_permission (1 samples, 0.06%)</title><rect x="25.4237%" y="853" width="0.0605%" height="15" fill="rgb(250,43,17)" fg:x="420" fg:w="1"/><text x="25.6737%" y="863.50"></text></g><g><title>security_inode_permission (1 samples, 0.06%)</title><rect x="25.4237%" y="837" width="0.0605%" height="15" fill="rgb(206,97,32)" fg:x="420" fg:w="1"/><text x="25.6737%" y="847.50"></text></g><g><title>selinux_inode_permission (1 samples, 0.06%)</title><rect x="25.4237%" y="821" width="0.0605%" height="15" fill="rgb(207,90,44)" fg:x="420" fg:w="1"/><text x="25.6737%" y="831.50"></text></g><g><title>avc_lookup (1 samples, 0.06%)</title><rect x="25.4237%" y="805" width="0.0605%" height="15" fill="rgb(223,23,32)" fg:x="420" fg:w="1"/><text x="25.6737%" y="815.50"></text></g><g><title>std::path::Path::to_path_buf (1 samples, 0.06%)</title><rect x="25.4843%" y="1141" width="0.0605%" height="15" fill="rgb(208,226,36)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1151.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.06%)</title><rect x="25.4843%" y="1125" width="0.0605%" height="15" fill="rgb(228,33,8)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1135.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.06%)</title><rect x="25.4843%" y="1109" width="0.0605%" height="15" fill="rgb(253,20,40)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.06%)</title><rect x="25.4843%" y="1093" width="0.0605%" height="15" fill="rgb(209,26,30)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.06%)</title><rect x="25.4843%" y="1077" width="0.0605%" height="15" fill="rgb(229,121,46)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.06%)</title><rect x="25.4843%" y="1061" width="0.0605%" height="15" fill="rgb(221,172,50)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="25.4843%" y="1045" width="0.0605%" height="15" fill="rgb(216,42,52)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="25.4843%" y="1029" width="0.0605%" height="15" fill="rgb(249,207,12)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="25.4843%" y="1013" width="0.0605%" height="15" fill="rgb(224,194,14)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="25.4843%" y="997" width="0.0605%" height="15" fill="rgb(227,204,5)" fg:x="421" fg:w="1"/><text x="25.7343%" y="1007.50"></text></g><g><title>alloy_etherscan::Cache::get_abi (7 samples, 0.42%)</title><rect x="25.1816%" y="1173" width="0.4237%" height="15" fill="rgb(241,1,53)" fg:x="416" fg:w="7"/><text x="25.4316%" y="1183.50"></text></g><g><title>std::path::Path::_join (2 samples, 0.12%)</title><rect x="25.4843%" y="1157" width="0.1211%" height="15" fill="rgb(207,13,40)" fg:x="421" fg:w="2"/><text x="25.7343%" y="1167.50"></text></g><g><title>std::path::PathBuf::push (1 samples, 0.06%)</title><rect x="25.5448%" y="1141" width="0.0605%" height="15" fill="rgb(246,17,12)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1151.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.06%)</title><rect x="25.5448%" y="1125" width="0.0605%" height="15" fill="rgb(240,21,49)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1135.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.06%)</title><rect x="25.5448%" y="1109" width="0.0605%" height="15" fill="rgb(238,142,43)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1119.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.06%)</title><rect x="25.5448%" y="1093" width="0.0605%" height="15" fill="rgb(229,185,38)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="25.5448%" y="1077" width="0.0605%" height="15" fill="rgb(243,52,34)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="25.5448%" y="1061" width="0.0605%" height="15" fill="rgb(224,207,30)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="25.5448%" y="1045" width="0.0605%" height="15" fill="rgb(251,49,54)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="25.5448%" y="1029" width="0.0605%" height="15" fill="rgb(212,159,3)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="25.5448%" y="1013" width="0.0605%" height="15" fill="rgb(231,142,39)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="25.5448%" y="997" width="0.0605%" height="15" fill="rgb(249,2,22)" fg:x="422" fg:w="1"/><text x="25.7948%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="25.5448%" y="981" width="0.0605%" height="15" fill="rgb(254,53,35)" fg:x="422" fg:w="1"/><text x="25.7948%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="25.5448%" y="965" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="422" fg:w="1"/><text x="25.7948%" y="975.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.06%)</title><rect x="25.6053%" y="1077" width="0.0605%" height="15" fill="rgb(225,95,28)" fg:x="423" fg:w="1"/><text x="25.8553%" y="1087.50"></text></g><g><title>__alloc_file (1 samples, 0.06%)</title><rect x="25.8475%" y="853" width="0.0605%" height="15" fill="rgb(208,34,24)" fg:x="427" fg:w="1"/><text x="26.0975%" y="863.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="25.9080%" y="821" width="0.0605%" height="15" fill="rgb(223,51,51)" fg:x="428" fg:w="1"/><text x="26.1580%" y="831.50"></text></g><g><title>__get_obj_cgroup_from_memcg (1 samples, 0.06%)</title><rect x="25.9080%" y="805" width="0.0605%" height="15" fill="rgb(233,182,33)" fg:x="428" fg:w="1"/><text x="26.1580%" y="815.50"></text></g><g><title>memset (1 samples, 0.06%)</title><rect x="25.9685%" y="821" width="0.0605%" height="15" fill="rgb(251,9,1)" fg:x="429" fg:w="1"/><text x="26.2185%" y="831.50"></text></g><g><title>alloc_empty_file (3 samples, 0.18%)</title><rect x="25.9080%" y="853" width="0.1816%" height="15" fill="rgb(242,156,16)" fg:x="428" fg:w="3"/><text x="26.1580%" y="863.50"></text></g><g><title>__alloc_file (3 samples, 0.18%)</title><rect x="25.9080%" y="837" width="0.1816%" height="15" fill="rgb(208,34,24)" fg:x="428" fg:w="3"/><text x="26.1580%" y="847.50"></text></g><g><title>security_file_alloc (1 samples, 0.06%)</title><rect x="26.0291%" y="821" width="0.0605%" height="15" fill="rgb(251,33,6)" fg:x="430" fg:w="1"/><text x="26.2791%" y="831.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="26.0291%" y="805" width="0.0605%" height="15" fill="rgb(223,51,51)" fg:x="430" fg:w="1"/><text x="26.2791%" y="815.50"></text></g><g><title>do_filp_open (8 samples, 0.48%)</title><rect x="25.8475%" y="885" width="0.4843%" height="15" fill="rgb(219,26,10)" fg:x="427" fg:w="8"/><text x="26.0975%" y="895.50"></text></g><g><title>path_openat (8 samples, 0.48%)</title><rect x="25.8475%" y="869" width="0.4843%" height="15" fill="rgb(228,25,37)" fg:x="427" fg:w="8"/><text x="26.0975%" y="879.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (4 samples, 0.24%)</title><rect x="26.0896%" y="853" width="0.2421%" height="15" fill="rgb(228,149,52)" fg:x="431" fg:w="4"/><text x="26.3396%" y="863.50"></text></g><g><title>inode_permission (3 samples, 0.18%)</title><rect x="26.1501%" y="837" width="0.1816%" height="15" fill="rgb(250,43,17)" fg:x="432" fg:w="3"/><text x="26.4001%" y="847.50"></text></g><g><title>security_inode_permission (1 samples, 0.06%)</title><rect x="26.2712%" y="821" width="0.0605%" height="15" fill="rgb(206,97,32)" fg:x="434" fg:w="1"/><text x="26.5212%" y="831.50"></text></g><g><title>avc_has_perm_noaudit (1 samples, 0.06%)</title><rect x="26.2712%" y="805" width="0.0605%" height="15" fill="rgb(220,33,0)" fg:x="434" fg:w="1"/><text x="26.5212%" y="815.50"></text></g><g><title>get_unused_fd_flags (1 samples, 0.06%)</title><rect x="26.3317%" y="885" width="0.0605%" height="15" fill="rgb(205,209,5)" fg:x="435" fg:w="1"/><text x="26.5817%" y="895.50"></text></g><g><title>alloc_fd (1 samples, 0.06%)</title><rect x="26.3317%" y="869" width="0.0605%" height="15" fill="rgb(205,84,50)" fg:x="435" fg:w="1"/><text x="26.5817%" y="879.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.12%)</title><rect x="26.3923%" y="853" width="0.1211%" height="15" fill="rgb(223,51,51)" fg:x="436" fg:w="2"/><text x="26.6423%" y="863.50"></text></g><g><title>getname (3 samples, 0.18%)</title><rect x="26.3923%" y="885" width="0.1816%" height="15" fill="rgb(231,139,2)" fg:x="436" fg:w="3"/><text x="26.6423%" y="895.50"></text></g><g><title>getname_flags.part.0 (3 samples, 0.18%)</title><rect x="26.3923%" y="869" width="0.1816%" height="15" fill="rgb(214,38,37)" fg:x="436" fg:w="3"/><text x="26.6423%" y="879.50"></text></g><g><title>strncpy_from_user (1 samples, 0.06%)</title><rect x="26.5133%" y="853" width="0.0605%" height="15" fill="rgb(245,149,46)" fg:x="438" fg:w="1"/><text x="26.7633%" y="863.50"></text></g><g><title>__check_object_size (1 samples, 0.06%)</title><rect x="26.5133%" y="837" width="0.0605%" height="15" fill="rgb(218,1,22)" fg:x="438" fg:w="1"/><text x="26.7633%" y="847.50"></text></g><g><title>__check_object_size.part.0 (1 samples, 0.06%)</title><rect x="26.5133%" y="821" width="0.0605%" height="15" fill="rgb(217,52,49)" fg:x="438" fg:w="1"/><text x="26.7633%" y="831.50"></text></g><g><title>check_heap_object (1 samples, 0.06%)</title><rect x="26.5133%" y="805" width="0.0605%" height="15" fill="rgb(246,112,49)" fg:x="438" fg:w="1"/><text x="26.7633%" y="815.50"></text></g><g><title>do_el0_svc (16 samples, 0.97%)</title><rect x="25.6659%" y="965" width="0.9685%" height="15" fill="rgb(221,53,8)" fg:x="424" fg:w="16"/><text x="25.9159%" y="975.50"></text></g><g><title>el0_svc_common.constprop.0 (16 samples, 0.97%)</title><rect x="25.6659%" y="949" width="0.9685%" height="15" fill="rgb(219,7,42)" fg:x="424" fg:w="16"/><text x="25.9159%" y="959.50"></text></g><g><title>invoke_syscall (15 samples, 0.91%)</title><rect x="25.7264%" y="933" width="0.9080%" height="15" fill="rgb(234,209,2)" fg:x="425" fg:w="15"/><text x="25.9764%" y="943.50"></text></g><g><title>__arm64_sys_openat (14 samples, 0.85%)</title><rect x="25.7869%" y="917" width="0.8475%" height="15" fill="rgb(225,123,44)" fg:x="426" fg:w="14"/><text x="26.0369%" y="927.50"></text></g><g><title>do_sys_openat2 (14 samples, 0.85%)</title><rect x="25.7869%" y="901" width="0.8475%" height="15" fill="rgb(208,111,23)" fg:x="426" fg:w="14"/><text x="26.0369%" y="911.50"></text></g><g><title>putname (1 samples, 0.06%)</title><rect x="26.5738%" y="885" width="0.0605%" height="15" fill="rgb(212,216,17)" fg:x="439" fg:w="1"/><text x="26.8238%" y="895.50"></text></g><g><title>kmem_cache_free (1 samples, 0.06%)</title><rect x="26.5738%" y="869" width="0.0605%" height="15" fill="rgb(225,137,16)" fg:x="439" fg:w="1"/><text x="26.8238%" y="879.50"></text></g><g><title>std::fs::OpenOptions::_open (19 samples, 1.15%)</title><rect x="25.6053%" y="1141" width="1.1501%" height="15" fill="rgb(226,1,37)" fg:x="423" fg:w="19"/><text x="25.8553%" y="1151.50"></text></g><g><title>std::sys::unix::fs::File::open (19 samples, 1.15%)</title><rect x="25.6053%" y="1125" width="1.1501%" height="15" fill="rgb(220,21,1)" fg:x="423" fg:w="19"/><text x="25.8553%" y="1135.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (19 samples, 1.15%)</title><rect x="25.6053%" y="1109" width="1.1501%" height="15" fill="rgb(226,122,51)" fg:x="423" fg:w="19"/><text x="25.8553%" y="1119.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (19 samples, 1.15%)</title><rect x="25.6053%" y="1093" width="1.1501%" height="15" fill="rgb(239,63,35)" fg:x="423" fg:w="19"/><text x="25.8553%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (18 samples, 1.09%)</title><rect x="25.6659%" y="1077" width="1.0896%" height="15" fill="rgb(243,15,24)" fg:x="424" fg:w="18"/><text x="25.9159%" y="1087.50"></text></g><g><title>std::sys::unix::fs::File::open_c (18 samples, 1.09%)</title><rect x="25.6659%" y="1061" width="1.0896%" height="15" fill="rgb(253,73,50)" fg:x="424" fg:w="18"/><text x="25.9159%" y="1071.50"></text></g><g><title>std::sys::unix::cvt_r (18 samples, 1.09%)</title><rect x="25.6659%" y="1045" width="1.0896%" height="15" fill="rgb(247,2,44)" fg:x="424" fg:w="18"/><text x="25.9159%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (18 samples, 1.09%)</title><rect x="25.6659%" y="1029" width="1.0896%" height="15" fill="rgb(251,72,33)" fg:x="424" fg:w="18"/><text x="25.9159%" y="1039.50"></text></g><g><title>__libc_open64 (18 samples, 1.09%)</title><rect x="25.6659%" y="1013" width="1.0896%" height="15" fill="rgb(225,39,31)" fg:x="424" fg:w="18"/><text x="25.9159%" y="1023.50"></text></g><g><title>el0t_64_sync_handler (18 samples, 1.09%)</title><rect x="25.6659%" y="997" width="1.0896%" height="15" fill="rgb(232,35,33)" fg:x="424" fg:w="18"/><text x="25.9159%" y="1007.50"></text></g><g><title>el0_svc (18 samples, 1.09%)</title><rect x="25.6659%" y="981" width="1.0896%" height="15" fill="rgb(225,46,33)" fg:x="424" fg:w="18"/><text x="25.9159%" y="991.50"></text></g><g><title>do_notify_resume (2 samples, 0.12%)</title><rect x="26.6344%" y="965" width="0.1211%" height="15" fill="rgb(233,34,11)" fg:x="440" fg:w="2"/><text x="26.8844%" y="975.50"></text></g><g><title>task_work_run (2 samples, 0.12%)</title><rect x="26.6344%" y="949" width="0.1211%" height="15" fill="rgb(206,18,50)" fg:x="440" fg:w="2"/><text x="26.8844%" y="959.50"></text></g><g><title>____fput (1 samples, 0.06%)</title><rect x="26.6949%" y="933" width="0.0605%" height="15" fill="rgb(227,227,50)" fg:x="441" fg:w="1"/><text x="26.9449%" y="943.50"></text></g><g><title>__fput (1 samples, 0.06%)</title><rect x="26.6949%" y="917" width="0.0605%" height="15" fill="rgb(210,120,45)" fg:x="441" fg:w="1"/><text x="26.9449%" y="927.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="26.6949%" y="901" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="441" fg:w="1"/><text x="26.9449%" y="911.50"></text></g><g><title>std::fs::File::create (20 samples, 1.21%)</title><rect x="25.6053%" y="1157" width="1.2107%" height="15" fill="rgb(238,157,22)" fg:x="423" fg:w="20"/><text x="25.8553%" y="1167.50"></text></g><g><title>std::fs::OpenOptions::new (1 samples, 0.06%)</title><rect x="26.7554%" y="1141" width="0.0605%" height="15" fill="rgb(212,150,11)" fg:x="442" fg:w="1"/><text x="27.0054%" y="1151.50"></text></g><g><title>std::ffi::os_str::OsString::push (3 samples, 0.18%)</title><rect x="26.8160%" y="1109" width="0.1816%" height="15" fill="rgb(238,142,43)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1119.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (3 samples, 0.18%)</title><rect x="26.8160%" y="1093" width="0.1816%" height="15" fill="rgb(229,185,38)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.18%)</title><rect x="26.8160%" y="1077" width="0.1816%" height="15" fill="rgb(243,52,34)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.18%)</title><rect x="26.8160%" y="1061" width="0.1816%" height="15" fill="rgb(224,207,30)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.18%)</title><rect x="26.8160%" y="1045" width="0.1816%" height="15" fill="rgb(251,49,54)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.18%)</title><rect x="26.8160%" y="1029" width="0.1816%" height="15" fill="rgb(212,159,3)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.18%)</title><rect x="26.8160%" y="1013" width="0.1816%" height="15" fill="rgb(231,142,39)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.18%)</title><rect x="26.8160%" y="997" width="0.1816%" height="15" fill="rgb(249,2,22)" fg:x="443" fg:w="3"/><text x="27.0660%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.18%)</title><rect x="26.8160%" y="981" width="0.1816%" height="15" fill="rgb(254,53,35)" fg:x="443" fg:w="3"/><text x="27.0660%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.18%)</title><rect x="26.8160%" y="965" width="0.1816%" height="15" fill="rgb(237,133,22)" fg:x="443" fg:w="3"/><text x="27.0660%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.18%)</title><rect x="26.8160%" y="949" width="0.1816%" height="15" fill="rgb(237,156,49)" fg:x="443" fg:w="3"/><text x="27.0660%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.18%)</title><rect x="26.8160%" y="933" width="0.1816%" height="15" fill="rgb(214,150,36)" fg:x="443" fg:w="3"/><text x="27.0660%" y="943.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.18%)</title><rect x="26.8160%" y="917" width="0.1816%" height="15" fill="rgb(254,47,34)" fg:x="443" fg:w="3"/><text x="27.0660%" y="927.50"></text></g><g><title>__realloc (3 samples, 0.18%)</title><rect x="26.8160%" y="901" width="0.1816%" height="15" fill="rgb(238,20,0)" fg:x="443" fg:w="3"/><text x="27.0660%" y="911.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="26.9370%" y="885" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="445" fg:w="1"/><text x="27.1870%" y="895.50"></text></g><g><title>alloy_etherscan::contract::&lt;impl alloy_etherscan::Client&gt;::contract_abi::{{closure}} (33 samples, 2.00%)</title><rect x="25.0605%" y="1189" width="1.9976%" height="15" fill="rgb(238,164,6)" fg:x="414" fg:w="33"/><text x="25.3105%" y="1199.50">a..</text></g><g><title>alloy_etherscan::Cache::set_abi (24 samples, 1.45%)</title><rect x="25.6053%" y="1173" width="1.4528%" height="15" fill="rgb(206,132,22)" fg:x="423" fg:w="24"/><text x="25.8553%" y="1183.50"></text></g><g><title>std::path::Path::_join (4 samples, 0.24%)</title><rect x="26.8160%" y="1157" width="0.2421%" height="15" fill="rgb(207,13,40)" fg:x="443" fg:w="4"/><text x="27.0660%" y="1167.50"></text></g><g><title>std::path::PathBuf::push (4 samples, 0.24%)</title><rect x="26.8160%" y="1141" width="0.2421%" height="15" fill="rgb(246,17,12)" fg:x="443" fg:w="4"/><text x="27.0660%" y="1151.50"></text></g><g><title>std::path::PathBuf::_push (4 samples, 0.24%)</title><rect x="26.8160%" y="1125" width="0.2421%" height="15" fill="rgb(240,21,49)" fg:x="443" fg:w="4"/><text x="27.0660%" y="1135.50"></text></g><g><title>std::path::Path::is_absolute (1 samples, 0.06%)</title><rect x="26.9976%" y="1109" width="0.0605%" height="15" fill="rgb(229,119,7)" fg:x="446" fg:w="1"/><text x="27.2476%" y="1119.50"></text></g><g><title>std::path::Path::has_root (1 samples, 0.06%)</title><rect x="26.9976%" y="1093" width="0.0605%" height="15" fill="rgb(242,142,21)" fg:x="446" fg:w="1"/><text x="27.2476%" y="1103.50"></text></g><g><title>std::path::Path::components (1 samples, 0.06%)</title><rect x="26.9976%" y="1077" width="0.0605%" height="15" fill="rgb(218,164,35)" fg:x="446" fg:w="1"/><text x="27.2476%" y="1087.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (4 samples, 0.24%)</title><rect x="27.1186%" y="1157" width="0.2421%" height="15" fill="rgb(216,56,26)" fg:x="448" fg:w="4"/><text x="27.3686%" y="1167.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (4 samples, 0.24%)</title><rect x="27.1186%" y="1141" width="0.2421%" height="15" fill="rgb(232,201,34)" fg:x="448" fg:w="4"/><text x="27.3686%" y="1151.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.24%)</title><rect x="27.1186%" y="1125" width="0.2421%" height="15" fill="rgb(230,123,10)" fg:x="448" fg:w="4"/><text x="27.3686%" y="1135.50"></text></g><g><title>alloy_json_abi::utils::selector (7 samples, 0.42%)</title><rect x="27.0581%" y="1189" width="0.4237%" height="15" fill="rgb(226,148,52)" fg:x="447" fg:w="7"/><text x="27.3081%" y="1199.50"></text></g><g><title>alloy_primitives::utils::keccak256 (6 samples, 0.36%)</title><rect x="27.1186%" y="1173" width="0.3632%" height="15" fill="rgb(221,62,9)" fg:x="448" fg:w="6"/><text x="27.3686%" y="1183.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (2 samples, 0.12%)</title><rect x="27.3608%" y="1157" width="0.1211%" height="15" fill="rgb(219,129,42)" fg:x="452" fg:w="2"/><text x="27.6108%" y="1167.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (1 samples, 0.06%)</title><rect x="27.4213%" y="1141" width="0.0605%" height="15" fill="rgb(230,123,10)" fg:x="453" fg:w="1"/><text x="27.6713%" y="1151.50"></text></g><g><title>alloy_json_abi::utils::signature (1 samples, 0.06%)</title><rect x="27.4818%" y="1189" width="0.0605%" height="15" fill="rgb(211,30,49)" fg:x="454" fg:w="1"/><text x="27.7318%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_etherscan::contract::Metadata&gt; (1 samples, 0.06%)</title><rect x="27.5424%" y="1189" width="0.0605%" height="15" fill="rgb(245,87,48)" fg:x="455" fg:w="1"/><text x="27.7924%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="27.5424%" y="1173" width="0.0605%" height="15" fill="rgb(253,155,41)" fg:x="455" fg:w="1"/><text x="27.7924%" y="1183.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="27.5424%" y="1157" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="455" fg:w="1"/><text x="27.7924%" y="1167.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="27.5424%" y="1141" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="455" fg:w="1"/><text x="27.7924%" y="1151.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="27.5424%" y="1125" width="0.0605%" height="15" fill="rgb(228,194,39)" fg:x="455" fg:w="1"/><text x="27.7924%" y="1135.50"></text></g><g><title>__free (3 samples, 0.18%)</title><rect x="27.6634%" y="1157" width="0.1816%" height="15" fill="rgb(211,107,33)" fg:x="457" fg:w="3"/><text x="27.9134%" y="1167.50"></text></g><g><title>_int_free (3 samples, 0.18%)</title><rect x="27.6634%" y="1141" width="0.1816%" height="15" fill="rgb(221,113,48)" fg:x="457" fg:w="3"/><text x="27.9134%" y="1151.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="27.7845%" y="1125" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1135.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="27.7845%" y="1109" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1119.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="27.7845%" y="1093" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1103.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="27.7845%" y="1077" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1087.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="27.7845%" y="1061" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1071.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="27.7845%" y="1045" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1055.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="27.7845%" y="1029" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1039.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="27.7845%" y="1013" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1023.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="27.7845%" y="997" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="459" fg:w="1"/><text x="28.0345%" y="1007.50"></text></g><g><title>run_timer_softirq (1 samples, 0.06%)</title><rect x="27.7845%" y="981" width="0.0605%" height="15" fill="rgb(214,132,54)" fg:x="459" fg:w="1"/><text x="28.0345%" y="991.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.06%)</title><rect x="27.7845%" y="965" width="0.0605%" height="15" fill="rgb(211,131,40)" fg:x="459" fg:w="1"/><text x="28.0345%" y="975.50"></text></g><g><title>call_timer_fn (1 samples, 0.06%)</title><rect x="27.7845%" y="949" width="0.0605%" height="15" fill="rgb(232,156,7)" fg:x="459" fg:w="1"/><text x="28.0345%" y="959.50"></text></g><g><title>tcp_delack_timer (1 samples, 0.06%)</title><rect x="27.7845%" y="933" width="0.0605%" height="15" fill="rgb(234,12,37)" fg:x="459" fg:w="1"/><text x="28.0345%" y="943.50"></text></g><g><title>tcp_delack_timer_handler (1 samples, 0.06%)</title><rect x="27.7845%" y="917" width="0.0605%" height="15" fill="rgb(246,42,52)" fg:x="459" fg:w="1"/><text x="28.0345%" y="927.50"></text></g><g><title>tcp_send_ack (1 samples, 0.06%)</title><rect x="27.7845%" y="901" width="0.0605%" height="15" fill="rgb(244,175,51)" fg:x="459" fg:w="1"/><text x="28.0345%" y="911.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.06%)</title><rect x="27.7845%" y="885" width="0.0605%" height="15" fill="rgb(250,64,3)" fg:x="459" fg:w="1"/><text x="28.0345%" y="895.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="27.7845%" y="869" width="0.0605%" height="15" fill="rgb(238,106,36)" fg:x="459" fg:w="1"/><text x="28.0345%" y="879.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="27.7845%" y="853" width="0.0605%" height="15" fill="rgb(241,58,19)" fg:x="459" fg:w="1"/><text x="28.0345%" y="863.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="27.7845%" y="837" width="0.0605%" height="15" fill="rgb(224,11,5)" fg:x="459" fg:w="1"/><text x="28.0345%" y="847.50"></text></g><g><title>ip_output (1 samples, 0.06%)</title><rect x="27.7845%" y="821" width="0.0605%" height="15" fill="rgb(213,11,33)" fg:x="459" fg:w="1"/><text x="28.0345%" y="831.50"></text></g><g><title>ip_finish_output (1 samples, 0.06%)</title><rect x="27.7845%" y="805" width="0.0605%" height="15" fill="rgb(215,36,54)" fg:x="459" fg:w="1"/><text x="28.0345%" y="815.50"></text></g><g><title>__ip_finish_output (1 samples, 0.06%)</title><rect x="27.7845%" y="789" width="0.0605%" height="15" fill="rgb(252,12,27)" fg:x="459" fg:w="1"/><text x="28.0345%" y="799.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="27.7845%" y="773" width="0.0605%" height="15" fill="rgb(219,227,11)" fg:x="459" fg:w="1"/><text x="28.0345%" y="783.50"></text></g><g><title>neigh_hh_output (1 samples, 0.06%)</title><rect x="27.7845%" y="757" width="0.0605%" height="15" fill="rgb(241,98,1)" fg:x="459" fg:w="1"/><text x="28.0345%" y="767.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="27.7845%" y="741" width="0.0605%" height="15" fill="rgb(232,116,37)" fg:x="459" fg:w="1"/><text x="28.0345%" y="751.50"></text></g><g><title>__free (2 samples, 0.12%)</title><rect x="27.8450%" y="1141" width="0.1211%" height="15" fill="rgb(211,107,33)" fg:x="460" fg:w="2"/><text x="28.0950%" y="1151.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="27.9056%" y="1125" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="461" fg:w="1"/><text x="28.1556%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_json_abi::item::Event&gt; (4 samples, 0.24%)</title><rect x="27.9661%" y="1141" width="0.2421%" height="15" fill="rgb(229,86,0)" fg:x="462" fg:w="4"/><text x="28.2161%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_json_abi::param::EventParam&gt; (4 samples, 0.24%)</title><rect x="27.9661%" y="1125" width="0.2421%" height="15" fill="rgb(225,7,1)" fg:x="462" fg:w="4"/><text x="28.2161%" y="1135.50"></text></g><g><title>__free (2 samples, 0.12%)</title><rect x="28.0872%" y="1109" width="0.1211%" height="15" fill="rgb(211,107,33)" fg:x="464" fg:w="2"/><text x="28.3372%" y="1119.50"></text></g><g><title>_int_free (2 samples, 0.12%)</title><rect x="28.0872%" y="1093" width="0.1211%" height="15" fill="rgb(221,113,48)" fg:x="464" fg:w="2"/><text x="28.3372%" y="1103.50"></text></g><g><title>__free (2 samples, 0.12%)</title><rect x="28.2082%" y="1125" width="0.1211%" height="15" fill="rgb(211,107,33)" fg:x="466" fg:w="2"/><text x="28.4582%" y="1135.50"></text></g><g><title>_int_free (2 samples, 0.12%)</title><rect x="28.2082%" y="1109" width="0.1211%" height="15" fill="rgb(221,113,48)" fg:x="466" fg:w="2"/><text x="28.4582%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_json_abi::abi::JsonAbi&gt; (13 samples, 0.79%)</title><rect x="27.6029%" y="1189" width="0.7869%" height="15" fill="rgb(222,130,45)" fg:x="456" fg:w="13"/><text x="27.8529%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.79%)</title><rect x="27.6029%" y="1173" width="0.7869%" height="15" fill="rgb(225,171,22)" fg:x="456" fg:w="13"/><text x="27.8529%" y="1183.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9 samples, 0.54%)</title><rect x="27.8450%" y="1157" width="0.5448%" height="15" fill="rgb(247,200,27)" fg:x="460" fg:w="9"/><text x="28.0950%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_json_abi::item::Function&gt; (3 samples, 0.18%)</title><rect x="28.2082%" y="1141" width="0.1816%" height="15" fill="rgb(238,40,0)" fg:x="466" fg:w="3"/><text x="28.4582%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_json_abi::param::Param&gt; (1 samples, 0.06%)</title><rect x="28.3293%" y="1125" width="0.0605%" height="15" fill="rgb(211,112,19)" fg:x="468" fg:w="1"/><text x="28.5793%" y="1135.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="28.3293%" y="1109" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="468" fg:w="1"/><text x="28.5793%" y="1119.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (6 samples, 0.36%)</title><rect x="28.3898%" y="1189" width="0.3632%" height="15" fill="rgb(232,132,2)" fg:x="469" fg:w="6"/><text x="28.6398%" y="1199.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (82 samples, 4.96%)</title><rect x="23.8499%" y="1237" width="4.9637%" height="15" fill="rgb(250,218,41)" fg:x="394" fg:w="82"/><text x="24.0999%" y="1247.50">tokio:..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (82 samples, 4.96%)</title><rect x="23.8499%" y="1221" width="4.9637%" height="15" fill="rgb(238,208,28)" fg:x="394" fg:w="82"/><text x="24.0999%" y="1231.50">tokio:..</text></g><g><title>bin::run::{{closure}} (82 samples, 4.96%)</title><rect x="23.8499%" y="1205" width="4.9637%" height="15" fill="rgb(248,143,15)" fg:x="394" fg:w="82"/><text x="24.0999%" y="1215.50">bin::r..</text></g><g><title>poirot_core::decode::ParserStats::increment_error (1 samples, 0.06%)</title><rect x="28.7530%" y="1189" width="0.0605%" height="15" fill="rgb(209,152,43)" fg:x="475" fg:w="1"/><text x="29.0030%" y="1199.50"></text></g><g><title>&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="28.8136%" y="1077" width="0.0605%" height="15" fill="rgb(245,44,22)" fg:x="476" fg:w="1"/><text x="29.0636%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="28.8136%" y="1061" width="0.0605%" height="15" fill="rgb(251,65,42)" fg:x="476" fg:w="1"/><text x="29.0636%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="28.8136%" y="1045" width="0.0605%" height="15" fill="rgb(239,104,10)" fg:x="476" fg:w="1"/><text x="29.0636%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.06%)</title><rect x="28.8136%" y="1029" width="0.0605%" height="15" fill="rgb(229,121,46)" fg:x="476" fg:w="1"/><text x="29.0636%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.06%)</title><rect x="28.8136%" y="1013" width="0.0605%" height="15" fill="rgb(221,172,50)" fg:x="476" fg:w="1"/><text x="29.0636%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="28.8136%" y="997" width="0.0605%" height="15" fill="rgb(216,42,52)" fg:x="476" fg:w="1"/><text x="29.0636%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.06%)</title><rect x="28.8136%" y="981" width="0.0605%" height="15" fill="rgb(222,107,1)" fg:x="476" fg:w="1"/><text x="29.0636%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.06%)</title><rect x="28.8136%" y="965" width="0.0605%" height="15" fill="rgb(214,20,35)" fg:x="476" fg:w="1"/><text x="29.0636%" y="975.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="28.8136%" y="949" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="476" fg:w="1"/><text x="29.0636%" y="959.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="28.8136%" y="933" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="476" fg:w="1"/><text x="29.0636%" y="943.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="28.8136%" y="917" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="476" fg:w="1"/><text x="29.0636%" y="927.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="28.8136%" y="901" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="476" fg:w="1"/><text x="29.0636%" y="911.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="28.8136%" y="885" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="476" fg:w="1"/><text x="29.0636%" y="895.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="28.8136%" y="869" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="476" fg:w="1"/><text x="29.0636%" y="879.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="28.8136%" y="853" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="476" fg:w="1"/><text x="29.0636%" y="863.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="28.8136%" y="837" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="476" fg:w="1"/><text x="29.0636%" y="847.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="28.8136%" y="821" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="476" fg:w="1"/><text x="29.0636%" y="831.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="28.8136%" y="805" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="476" fg:w="1"/><text x="29.0636%" y="815.50"></text></g><g><title>alloc_zeroed_user_highpage_movable (1 samples, 0.06%)</title><rect x="28.8136%" y="789" width="0.0605%" height="15" fill="rgb(239,183,41)" fg:x="476" fg:w="1"/><text x="29.0636%" y="799.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="28.8136%" y="773" width="0.0605%" height="15" fill="rgb(252,142,48)" fg:x="476" fg:w="1"/><text x="29.0636%" y="783.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="28.8136%" y="757" width="0.0605%" height="15" fill="rgb(250,70,46)" fg:x="476" fg:w="1"/><text x="29.0636%" y="767.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="28.8136%" y="741" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="476" fg:w="1"/><text x="29.0636%" y="751.50"></text></g><g><title>__pi_clear_page (1 samples, 0.06%)</title><rect x="28.8136%" y="725" width="0.0605%" height="15" fill="rgb(227,148,36)" fg:x="476" fg:w="1"/><text x="29.0636%" y="735.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.18%)</title><rect x="28.8136%" y="1157" width="0.1816%" height="15" fill="rgb(206,203,39)" fg:x="476" fg:w="3"/><text x="29.0636%" y="1167.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.18%)</title><rect x="28.8136%" y="1141" width="0.1816%" height="15" fill="rgb(207,173,28)" fg:x="476" fg:w="3"/><text x="29.0636%" y="1151.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.18%)</title><rect x="28.8136%" y="1125" width="0.1816%" height="15" fill="rgb(217,166,7)" fg:x="476" fg:w="3"/><text x="29.0636%" y="1135.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.18%)</title><rect x="28.8136%" y="1109" width="0.1816%" height="15" fill="rgb(206,203,39)" fg:x="476" fg:w="3"/><text x="29.0636%" y="1119.50"></text></g><g><title>alloy_etherscan::utils::deserialize_source_code (3 samples, 0.18%)</title><rect x="28.8136%" y="1093" width="0.1816%" height="15" fill="rgb(251,216,1)" fg:x="476" fg:w="3"/><text x="29.0636%" y="1103.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.12%)</title><rect x="28.8741%" y="1077" width="0.1211%" height="15" fill="rgb(252,110,42)" fg:x="477" fg:w="2"/><text x="29.1241%" y="1087.50"></text></g><g><title>__GI___memcpy_simd (2 samples, 0.12%)</title><rect x="28.8741%" y="1061" width="0.1211%" height="15" fill="rgb(208,42,30)" fg:x="477" fg:w="2"/><text x="29.1241%" y="1071.50"></text></g><g><title>__GI___memcpy_simd (4 samples, 0.24%)</title><rect x="30.3269%" y="1013" width="0.2421%" height="15" fill="rgb(208,42,30)" fg:x="501" fg:w="4"/><text x="30.5769%" y="1023.50"></text></g><g><title>alloy_etherscan::Client::sanitize_response (38 samples, 2.30%)</title><rect x="28.8136%" y="1205" width="2.3002%" height="15" fill="rgb(235,59,14)" fg:x="476" fg:w="38"/><text x="29.0636%" y="1215.50">a..</text></g><g><title>serde_json::de::from_str (38 samples, 2.30%)</title><rect x="28.8136%" y="1189" width="2.3002%" height="15" fill="rgb(217,198,13)" fg:x="476" fg:w="38"/><text x="29.0636%" y="1199.50">s..</text></g><g><title>alloy_etherscan::_::&lt;impl serde::de::Deserialize for alloy_etherscan::ResponseData&lt;T&gt;&gt;::deserialize (38 samples, 2.30%)</title><rect x="28.8136%" y="1173" width="2.3002%" height="15" fill="rgb(238,174,1)" fg:x="476" fg:w="38"/><text x="29.0636%" y="1183.50">a..</text></g><g><title>serde::de::Deserializer::__deserialize_content (35 samples, 2.12%)</title><rect x="28.9952%" y="1157" width="2.1186%" height="15" fill="rgb(237,93,40)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1167.50">s..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (35 samples, 2.12%)</title><rect x="28.9952%" y="1141" width="2.1186%" height="15" fill="rgb(245,180,7)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1151.50">&lt;..</text></g><g><title>serde::de::Deserializer::__deserialize_content (35 samples, 2.12%)</title><rect x="28.9952%" y="1125" width="2.1186%" height="15" fill="rgb(237,93,40)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1135.50">s..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (35 samples, 2.12%)</title><rect x="28.9952%" y="1109" width="2.1186%" height="15" fill="rgb(225,164,41)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1119.50">&lt;..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (35 samples, 2.12%)</title><rect x="28.9952%" y="1093" width="2.1186%" height="15" fill="rgb(230,9,2)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1103.50">&lt;..</text></g><g><title>serde::de::Deserializer::__deserialize_content (35 samples, 2.12%)</title><rect x="28.9952%" y="1077" width="2.1186%" height="15" fill="rgb(237,93,40)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1087.50">s..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (35 samples, 2.12%)</title><rect x="28.9952%" y="1061" width="2.1186%" height="15" fill="rgb(245,180,7)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1071.50">&lt;..</text></g><g><title>serde::de::Deserializer::__deserialize_content (35 samples, 2.12%)</title><rect x="28.9952%" y="1045" width="2.1186%" height="15" fill="rgb(237,93,40)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1055.50">s..</text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (35 samples, 2.12%)</title><rect x="28.9952%" y="1029" width="2.1186%" height="15" fill="rgb(249,130,0)" fg:x="479" fg:w="35"/><text x="29.2452%" y="1039.50">&lt;..</text></g><g><title>serde_json::read::parse_escape (9 samples, 0.54%)</title><rect x="30.5690%" y="1013" width="0.5448%" height="15" fill="rgb(233,67,45)" fg:x="505" fg:w="9"/><text x="30.8190%" y="1023.50"></text></g><g><title>core::fmt::getcount (1 samples, 0.06%)</title><rect x="31.1138%" y="997" width="0.0605%" height="15" fill="rgb(251,186,52)" fg:x="514" fg:w="1"/><text x="31.3638%" y="1007.50"></text></g><g><title>alloy_etherscan::Cache::get_abi (2 samples, 0.12%)</title><rect x="31.1138%" y="1189" width="0.1211%" height="15" fill="rgb(241,1,53)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1199.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.12%)</title><rect x="31.1138%" y="1173" width="0.1211%" height="15" fill="rgb(225,219,39)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1183.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.12%)</title><rect x="31.1138%" y="1157" width="0.1211%" height="15" fill="rgb(223,4,50)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1167.50"></text></g><g><title>core::fmt::write (2 samples, 0.12%)</title><rect x="31.1138%" y="1141" width="0.1211%" height="15" fill="rgb(248,210,20)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1151.50"></text></g><g><title>&lt;primitive_types::H160 as core::fmt::Debug&gt;::fmt (2 samples, 0.12%)</title><rect x="31.1138%" y="1125" width="0.1211%" height="15" fill="rgb(241,113,32)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1135.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.12%)</title><rect x="31.1138%" y="1109" width="0.1211%" height="15" fill="rgb(220,95,32)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1119.50"></text></g><g><title>core::fmt::write (2 samples, 0.12%)</title><rect x="31.1138%" y="1093" width="0.1211%" height="15" fill="rgb(248,210,20)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1103.50"></text></g><g><title>core::fmt::run (2 samples, 0.12%)</title><rect x="31.1138%" y="1077" width="0.1211%" height="15" fill="rgb(221,42,0)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1087.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (2 samples, 0.12%)</title><rect x="31.1138%" y="1061" width="0.1211%" height="15" fill="rgb(210,53,27)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1071.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.12%)</title><rect x="31.1138%" y="1045" width="0.1211%" height="15" fill="rgb(220,95,32)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1055.50"></text></g><g><title>core::fmt::write (2 samples, 0.12%)</title><rect x="31.1138%" y="1029" width="0.1211%" height="15" fill="rgb(248,210,20)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1039.50"></text></g><g><title>core::fmt::run (2 samples, 0.12%)</title><rect x="31.1138%" y="1013" width="0.1211%" height="15" fill="rgb(221,42,0)" fg:x="514" fg:w="2"/><text x="31.3638%" y="1023.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (1 samples, 0.06%)</title><rect x="31.1743%" y="997" width="0.0605%" height="15" fill="rgb(222,108,39)" fg:x="515" fg:w="1"/><text x="31.4243%" y="1007.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (1 samples, 0.06%)</title><rect x="31.1743%" y="981" width="0.0605%" height="15" fill="rgb(233,186,32)" fg:x="515" fg:w="1"/><text x="31.4243%" y="991.50"></text></g><g><title>&lt;core::fmt::num::LowerHex as core::fmt::num::GenericRadix&gt;::digit (1 samples, 0.06%)</title><rect x="31.1743%" y="965" width="0.0605%" height="15" fill="rgb(233,28,2)" fg:x="515" fg:w="1"/><text x="31.4243%" y="975.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="31.2349%" y="965" width="0.0605%" height="15" fill="rgb(250,109,27)" fg:x="516" fg:w="1"/><text x="31.4849%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.06%)</title><rect x="31.2349%" y="949" width="0.0605%" height="15" fill="rgb(237,176,18)" fg:x="516" fg:w="1"/><text x="31.4849%" y="959.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.06%)</title><rect x="31.2349%" y="933" width="0.0605%" height="15" fill="rgb(242,162,39)" fg:x="516" fg:w="1"/><text x="31.4849%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="31.2349%" y="917" width="0.0605%" height="15" fill="rgb(243,52,34)" fg:x="516" fg:w="1"/><text x="31.4849%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="31.2349%" y="901" width="0.0605%" height="15" fill="rgb(224,207,30)" fg:x="516" fg:w="1"/><text x="31.4849%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="31.2349%" y="885" width="0.0605%" height="15" fill="rgb(251,49,54)" fg:x="516" fg:w="1"/><text x="31.4849%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="31.2349%" y="869" width="0.0605%" height="15" fill="rgb(212,159,3)" fg:x="516" fg:w="1"/><text x="31.4849%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="31.2349%" y="853" width="0.0605%" height="15" fill="rgb(231,142,39)" fg:x="516" fg:w="1"/><text x="31.4849%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="31.2349%" y="837" width="0.0605%" height="15" fill="rgb(249,2,22)" fg:x="516" fg:w="1"/><text x="31.4849%" y="847.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.06%)</title><rect x="31.2954%" y="965" width="0.0605%" height="15" fill="rgb(223,174,18)" fg:x="517" fg:w="1"/><text x="31.5454%" y="975.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.06%)</title><rect x="31.2954%" y="949" width="0.0605%" height="15" fill="rgb(250,51,46)" fg:x="517" fg:w="1"/><text x="31.5454%" y="959.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.06%)</title><rect x="31.2954%" y="933" width="0.0605%" height="15" fill="rgb(220,192,19)" fg:x="517" fg:w="1"/><text x="31.5454%" y="943.50"></text></g><g><title>alloy_etherscan::Cache::set_abi (6 samples, 0.36%)</title><rect x="31.2349%" y="1189" width="0.3632%" height="15" fill="rgb(206,132,22)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1199.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.36%)</title><rect x="31.2349%" y="1173" width="0.3632%" height="15" fill="rgb(225,219,39)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1183.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.36%)</title><rect x="31.2349%" y="1157" width="0.3632%" height="15" fill="rgb(223,4,50)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1167.50"></text></g><g><title>core::fmt::write (6 samples, 0.36%)</title><rect x="31.2349%" y="1141" width="0.3632%" height="15" fill="rgb(248,210,20)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1151.50"></text></g><g><title>&lt;primitive_types::H160 as core::fmt::Debug&gt;::fmt (6 samples, 0.36%)</title><rect x="31.2349%" y="1125" width="0.3632%" height="15" fill="rgb(241,113,32)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1135.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.36%)</title><rect x="31.2349%" y="1109" width="0.3632%" height="15" fill="rgb(220,95,32)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1119.50"></text></g><g><title>core::fmt::write (6 samples, 0.36%)</title><rect x="31.2349%" y="1093" width="0.3632%" height="15" fill="rgb(248,210,20)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1103.50"></text></g><g><title>core::fmt::run (6 samples, 0.36%)</title><rect x="31.2349%" y="1077" width="0.3632%" height="15" fill="rgb(221,42,0)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1087.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (6 samples, 0.36%)</title><rect x="31.2349%" y="1061" width="0.3632%" height="15" fill="rgb(210,53,27)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1071.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.36%)</title><rect x="31.2349%" y="1045" width="0.3632%" height="15" fill="rgb(220,95,32)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1055.50"></text></g><g><title>core::fmt::write (6 samples, 0.36%)</title><rect x="31.2349%" y="1029" width="0.3632%" height="15" fill="rgb(248,210,20)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1039.50"></text></g><g><title>core::fmt::run (6 samples, 0.36%)</title><rect x="31.2349%" y="1013" width="0.3632%" height="15" fill="rgb(221,42,0)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1023.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (6 samples, 0.36%)</title><rect x="31.2349%" y="997" width="0.3632%" height="15" fill="rgb(222,108,39)" fg:x="516" fg:w="6"/><text x="31.4849%" y="1007.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (6 samples, 0.36%)</title><rect x="31.2349%" y="981" width="0.3632%" height="15" fill="rgb(233,186,32)" fg:x="516" fg:w="6"/><text x="31.4849%" y="991.50"></text></g><g><title>core::fmt::Formatter::pad_integral (4 samples, 0.24%)</title><rect x="31.3559%" y="965" width="0.2421%" height="15" fill="rgb(249,31,39)" fg:x="518" fg:w="4"/><text x="31.6059%" y="975.50"></text></g><g><title>core::fmt::Formatter::padding (2 samples, 0.12%)</title><rect x="31.4770%" y="949" width="0.1211%" height="15" fill="rgb(230,77,17)" fg:x="520" fg:w="2"/><text x="31.7270%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (2 samples, 0.12%)</title><rect x="31.4770%" y="933" width="0.1211%" height="15" fill="rgb(251,45,38)" fg:x="520" fg:w="2"/><text x="31.7270%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.12%)</title><rect x="31.4770%" y="917" width="0.1211%" height="15" fill="rgb(246,6,32)" fg:x="520" fg:w="2"/><text x="31.7270%" y="927.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.12%)</title><rect x="31.4770%" y="901" width="0.1211%" height="15" fill="rgb(222,195,10)" fg:x="520" fg:w="2"/><text x="31.7270%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="31.5375%" y="885" width="0.0605%" height="15" fill="rgb(241,229,15)" fg:x="521" fg:w="1"/><text x="31.7875%" y="895.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.18%)</title><rect x="31.6586%" y="1125" width="0.1816%" height="15" fill="rgb(220,197,39)" fg:x="523" fg:w="3"/><text x="31.9086%" y="1135.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (5 samples, 0.30%)</title><rect x="31.5981%" y="1141" width="0.3027%" height="15" fill="rgb(206,203,39)" fg:x="522" fg:w="5"/><text x="31.8481%" y="1151.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.06%)</title><rect x="31.8402%" y="1125" width="0.0605%" height="15" fill="rgb(252,110,42)" fg:x="526" fg:w="1"/><text x="32.0902%" y="1135.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="31.8402%" y="1109" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="526" fg:w="1"/><text x="32.0902%" y="1119.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="31.8402%" y="1093" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="526" fg:w="1"/><text x="32.0902%" y="1103.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.18%)</title><rect x="32.0218%" y="1109" width="0.1816%" height="15" fill="rgb(219,51,17)" fg:x="529" fg:w="3"/><text x="32.2718%" y="1119.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.06%)</title><rect x="32.1429%" y="1093" width="0.0605%" height="15" fill="rgb(249,130,0)" fg:x="531" fg:w="1"/><text x="32.3929%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="32.2034%" y="1109" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="532" fg:w="1"/><text x="32.4534%" y="1119.50"></text></g><g><title>__GI___memcpy_simd (6 samples, 0.36%)</title><rect x="33.2930%" y="1077" width="0.3632%" height="15" fill="rgb(208,42,30)" fg:x="550" fg:w="6"/><text x="33.5430%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.48%)</title><rect x="33.6562%" y="1077" width="0.4843%" height="15" fill="rgb(249,2,22)" fg:x="556" fg:w="8"/><text x="33.9062%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.48%)</title><rect x="33.6562%" y="1061" width="0.4843%" height="15" fill="rgb(237,133,22)" fg:x="556" fg:w="8"/><text x="33.9062%" y="1071.50"></text></g><g><title>__realloc (8 samples, 0.48%)</title><rect x="33.6562%" y="1045" width="0.4843%" height="15" fill="rgb(238,20,0)" fg:x="556" fg:w="8"/><text x="33.9062%" y="1055.50"></text></g><g><title>_int_realloc (4 samples, 0.24%)</title><rect x="33.8983%" y="1029" width="0.2421%" height="15" fill="rgb(231,75,41)" fg:x="560" fg:w="4"/><text x="34.1483%" y="1039.50"></text></g><g><title>_int_malloc (3 samples, 0.18%)</title><rect x="33.9588%" y="1013" width="0.1816%" height="15" fill="rgb(222,219,51)" fg:x="561" fg:w="3"/><text x="34.2088%" y="1023.50"></text></g><g><title>malloc_consolidate (1 samples, 0.06%)</title><rect x="34.0799%" y="997" width="0.0605%" height="15" fill="rgb(228,194,39)" fg:x="563" fg:w="1"/><text x="34.3299%" y="1007.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (47 samples, 2.85%)</title><rect x="32.2639%" y="1093" width="2.8450%" height="15" fill="rgb(249,130,0)" fg:x="533" fg:w="47"/><text x="32.5139%" y="1103.50">&lt;s..</text></g><g><title>serde_json::read::parse_escape (16 samples, 0.97%)</title><rect x="34.1404%" y="1077" width="0.9685%" height="15" fill="rgb(233,67,45)" fg:x="564" fg:w="16"/><text x="34.3904%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.12%)</title><rect x="34.9879%" y="1061" width="0.1211%" height="15" fill="rgb(254,103,39)" fg:x="578" fg:w="2"/><text x="35.2379%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.12%)</title><rect x="34.9879%" y="1045" width="0.1211%" height="15" fill="rgb(237,133,22)" fg:x="578" fg:w="2"/><text x="35.2379%" y="1055.50"></text></g><g><title>__realloc (2 samples, 0.12%)</title><rect x="34.9879%" y="1029" width="0.1211%" height="15" fill="rgb(238,20,0)" fg:x="578" fg:w="2"/><text x="35.2379%" y="1039.50"></text></g><g><title>_int_realloc (2 samples, 0.12%)</title><rect x="34.9879%" y="1013" width="0.1211%" height="15" fill="rgb(231,75,41)" fg:x="578" fg:w="2"/><text x="35.2379%" y="1023.50"></text></g><g><title>_int_malloc (2 samples, 0.12%)</title><rect x="34.9879%" y="997" width="0.1211%" height="15" fill="rgb(222,219,51)" fg:x="578" fg:w="2"/><text x="35.2379%" y="1007.50"></text></g><g><title>alloy_etherscan::Client::sanitize_response (59 samples, 3.57%)</title><rect x="31.5981%" y="1189" width="3.5714%" height="15" fill="rgb(235,59,14)" fg:x="522" fg:w="59"/><text x="31.8481%" y="1199.50">allo..</text></g><g><title>serde_json::de::from_str (59 samples, 3.57%)</title><rect x="31.5981%" y="1173" width="3.5714%" height="15" fill="rgb(217,198,13)" fg:x="522" fg:w="59"/><text x="31.8481%" y="1183.50">serd..</text></g><g><title>alloy_etherscan::_::&lt;impl serde::de::Deserialize for alloy_etherscan::ResponseData&lt;T&gt;&gt;::deserialize (59 samples, 3.57%)</title><rect x="31.5981%" y="1157" width="3.5714%" height="15" fill="rgb(238,174,1)" fg:x="522" fg:w="59"/><text x="31.8481%" y="1167.50">allo..</text></g><g><title>serde::de::Deserializer::__deserialize_content (54 samples, 3.27%)</title><rect x="31.9007%" y="1141" width="3.2688%" height="15" fill="rgb(237,93,40)" fg:x="527" fg:w="54"/><text x="32.1507%" y="1151.50">ser..</text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (53 samples, 3.21%)</title><rect x="31.9613%" y="1125" width="3.2082%" height="15" fill="rgb(245,180,7)" fg:x="528" fg:w="53"/><text x="32.2113%" y="1135.50">&lt;se..</text></g><g><title>serde::de::Deserializer::__deserialize_content (48 samples, 2.91%)</title><rect x="32.2639%" y="1109" width="2.9056%" height="15" fill="rgb(237,93,40)" fg:x="533" fg:w="48"/><text x="32.5139%" y="1119.50">se..</text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="35.1090%" y="1093" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="580" fg:w="1"/><text x="35.3590%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="35.4116%" y="1141" width="0.0605%" height="15" fill="rgb(251,65,42)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.06%)</title><rect x="35.4116%" y="1125" width="0.0605%" height="15" fill="rgb(239,104,10)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.06%)</title><rect x="35.4116%" y="1109" width="0.0605%" height="15" fill="rgb(229,121,46)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.06%)</title><rect x="35.4116%" y="1093" width="0.0605%" height="15" fill="rgb(221,172,50)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.06%)</title><rect x="35.4116%" y="1077" width="0.0605%" height="15" fill="rgb(216,42,52)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="35.4116%" y="1061" width="0.0605%" height="15" fill="rgb(249,207,12)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="35.4116%" y="1045" width="0.0605%" height="15" fill="rgb(224,194,14)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.06%)</title><rect x="35.4116%" y="1029" width="0.0605%" height="15" fill="rgb(227,204,5)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="35.4116%" y="1013" width="0.0605%" height="15" fill="rgb(231,114,21)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="35.4116%" y="997" width="0.0605%" height="15" fill="rgb(238,209,2)" fg:x="585" fg:w="1"/><text x="35.6616%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="35.4116%" y="981" width="0.0605%" height="15" fill="rgb(253,135,41)" fg:x="585" fg:w="1"/><text x="35.6616%" y="991.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="35.4116%" y="965" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="585" fg:w="1"/><text x="35.6616%" y="975.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="35.4116%" y="949" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="585" fg:w="1"/><text x="35.6616%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="35.8354%" y="1093" width="0.0605%" height="15" fill="rgb(242,69,50)" fg:x="592" fg:w="1"/><text x="36.0854%" y="1103.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="35.8354%" y="1077" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="592" fg:w="1"/><text x="36.0854%" y="1087.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="35.8354%" y="1061" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="592" fg:w="1"/><text x="36.0854%" y="1071.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.06%)</title><rect x="35.8959%" y="1093" width="0.0605%" height="15" fill="rgb(239,39,15)" fg:x="593" fg:w="1"/><text x="36.1459%" y="1103.50"></text></g><g><title>&lt;alloy_json_abi::param::EventParam as serde::de::Deserialize&gt;::deserialize (1 samples, 0.06%)</title><rect x="36.2591%" y="1061" width="0.0605%" height="15" fill="rgb(209,170,24)" fg:x="599" fg:w="1"/><text x="36.5091%" y="1071.50"></text></g><g><title>&lt;alloy_json_abi::param::Param as serde::de::Deserialize&gt;::deserialize (4 samples, 0.24%)</title><rect x="36.3196%" y="1061" width="0.2421%" height="15" fill="rgb(245,108,33)" fg:x="600" fg:w="4"/><text x="36.5696%" y="1071.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="36.5012%" y="1045" width="0.0605%" height="15" fill="rgb(241,201,43)" fg:x="603" fg:w="1"/><text x="36.7512%" y="1055.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.18%)</title><rect x="36.5617%" y="1061" width="0.1816%" height="15" fill="rgb(206,112,53)" fg:x="604" fg:w="3"/><text x="36.8117%" y="1071.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="36.6828%" y="1045" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="606" fg:w="1"/><text x="36.9328%" y="1055.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="36.6828%" y="1029" width="0.0605%" height="15" fill="rgb(237,173,29)" fg:x="606" fg:w="1"/><text x="36.9328%" y="1039.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.85%)</title><rect x="35.9564%" y="1077" width="0.8475%" height="15" fill="rgb(217,166,7)" fg:x="594" fg:w="14"/><text x="36.2064%" y="1087.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="36.7433%" y="1061" width="0.0605%" height="15" fill="rgb(241,201,43)" fg:x="607" fg:w="1"/><text x="36.9933%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.06%)</title><rect x="36.7433%" y="1045" width="0.0605%" height="15" fill="rgb(221,138,53)" fg:x="607" fg:w="1"/><text x="36.9933%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (17 samples, 1.03%)</title><rect x="35.9564%" y="1093" width="1.0291%" height="15" fill="rgb(210,197,34)" fg:x="594" fg:w="17"/><text x="36.2064%" y="1103.50"></text></g><g><title>serde::de::value::SeqDeserializer&lt;I,E&gt;::end (3 samples, 0.18%)</title><rect x="36.8039%" y="1077" width="0.1816%" height="15" fill="rgb(208,142,45)" fg:x="608" fg:w="3"/><text x="37.0539%" y="1087.50"></text></g><g><title>__free (2 samples, 0.12%)</title><rect x="36.8644%" y="1061" width="0.1211%" height="15" fill="rgb(211,107,33)" fg:x="609" fg:w="2"/><text x="37.1144%" y="1071.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="36.9249%" y="1045" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="610" fg:w="1"/><text x="37.1749%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (6 samples, 0.36%)</title><rect x="36.9855%" y="1093" width="0.3632%" height="15" fill="rgb(240,22,35)" fg:x="611" fg:w="6"/><text x="37.2355%" y="1103.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.30%)</title><rect x="37.0460%" y="1077" width="0.3027%" height="15" fill="rgb(206,112,53)" fg:x="612" fg:w="5"/><text x="37.2960%" y="1087.50"></text></g><g><title>_int_malloc (2 samples, 0.12%)</title><rect x="37.2276%" y="1061" width="0.1211%" height="15" fill="rgb(222,219,51)" fg:x="615" fg:w="2"/><text x="37.4776%" y="1071.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.12%)</title><rect x="37.2276%" y="1045" width="0.1211%" height="15" fill="rgb(237,173,29)" fg:x="615" fg:w="2"/><text x="37.4776%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (39 samples, 2.36%)</title><rect x="35.6538%" y="1109" width="2.3608%" height="15" fill="rgb(226,35,37)" fg:x="589" fg:w="39"/><text x="35.9038%" y="1119.50">&lt;s..</text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (11 samples, 0.67%)</title><rect x="37.3487%" y="1093" width="0.6659%" height="15" fill="rgb(223,146,53)" fg:x="617" fg:w="11"/><text x="37.5987%" y="1103.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.18%)</title><rect x="37.8329%" y="1077" width="0.1816%" height="15" fill="rgb(249,176,17)" fg:x="625" fg:w="3"/><text x="38.0829%" y="1087.50"></text></g><g><title>&lt;alloy_json_abi::item::private::_::&lt;impl serde::de::Deserialize for alloy_json_abi::item::private::Function&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.06%)</title><rect x="37.9540%" y="1061" width="0.0605%" height="15" fill="rgb(212,71,32)" fg:x="627" fg:w="1"/><text x="38.2040%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.06%)</title><rect x="38.1961%" y="1093" width="0.0605%" height="15" fill="rgb(244,69,6)" fg:x="631" fg:w="1"/><text x="38.4461%" y="1103.50"></text></g><g><title>&lt;alloy_json_abi::item::private::_::&lt;impl serde::de::Deserialize for alloy_json_abi::item::private::AbiItem&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.06%)</title><rect x="38.1961%" y="1077" width="0.0605%" height="15" fill="rgb(250,167,33)" fg:x="631" fg:w="1"/><text x="38.4461%" y="1087.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (9 samples, 0.54%)</title><rect x="38.2567%" y="1093" width="0.5448%" height="15" fill="rgb(219,51,17)" fg:x="632" fg:w="9"/><text x="38.5067%" y="1103.50"></text></g><g><title>&lt;serde::__private::de::content::TagOrContentVisitor as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.30%)</title><rect x="38.4988%" y="1077" width="0.3027%" height="15" fill="rgb(212,76,20)" fg:x="636" fg:w="5"/><text x="38.7488%" y="1087.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.18%)</title><rect x="38.6199%" y="1061" width="0.1816%" height="15" fill="rgb(249,130,0)" fg:x="638" fg:w="3"/><text x="38.8699%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="38.8015%" y="1093" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="641" fg:w="1"/><text x="39.0515%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="38.8015%" y="1077" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="641" fg:w="1"/><text x="39.0515%" y="1087.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7 samples, 0.42%)</title><rect x="39.8305%" y="1013" width="0.4237%" height="15" fill="rgb(219,51,17)" fg:x="658" fg:w="7"/><text x="40.0805%" y="1023.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (6 samples, 0.36%)</title><rect x="39.8910%" y="997" width="0.3632%" height="15" fill="rgb(249,130,0)" fg:x="659" fg:w="6"/><text x="40.1410%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.18%)</title><rect x="40.2542%" y="1013" width="0.1816%" height="15" fill="rgb(254,103,39)" fg:x="665" fg:w="3"/><text x="40.5042%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.18%)</title><rect x="40.2542%" y="997" width="0.1816%" height="15" fill="rgb(237,133,22)" fg:x="665" fg:w="3"/><text x="40.5042%" y="1007.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.12%)</title><rect x="40.3148%" y="981" width="0.1211%" height="15" fill="rgb(206,112,53)" fg:x="666" fg:w="2"/><text x="40.5648%" y="991.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (25 samples, 1.51%)</title><rect x="39.1041%" y="1061" width="1.5133%" height="15" fill="rgb(230,9,2)" fg:x="646" fg:w="25"/><text x="39.3541%" y="1071.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (24 samples, 1.45%)</title><rect x="39.1646%" y="1045" width="1.4528%" height="15" fill="rgb(237,93,40)" fg:x="647" fg:w="24"/><text x="39.4146%" y="1055.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.33%)</title><rect x="39.2857%" y="1029" width="1.3317%" height="15" fill="rgb(245,180,7)" fg:x="649" fg:w="22"/><text x="39.5357%" y="1039.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (3 samples, 0.18%)</title><rect x="40.4358%" y="1013" width="0.1816%" height="15" fill="rgb(237,93,40)" fg:x="668" fg:w="3"/><text x="40.6858%" y="1023.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.06%)</title><rect x="40.5569%" y="997" width="0.0605%" height="15" fill="rgb(249,130,0)" fg:x="670" fg:w="1"/><text x="40.8069%" y="1007.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (29 samples, 1.76%)</title><rect x="38.9831%" y="1077" width="1.7554%" height="15" fill="rgb(225,164,41)" fg:x="644" fg:w="29"/><text x="39.2331%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.12%)</title><rect x="40.6174%" y="1061" width="0.1211%" height="15" fill="rgb(254,103,39)" fg:x="671" fg:w="2"/><text x="40.8674%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.12%)</title><rect x="40.6174%" y="1045" width="0.1211%" height="15" fill="rgb(237,133,22)" fg:x="671" fg:w="2"/><text x="40.8674%" y="1055.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="40.6780%" y="1029" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="672" fg:w="1"/><text x="40.9280%" y="1039.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="40.6780%" y="1013" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="672" fg:w="1"/><text x="40.9280%" y="1023.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (89 samples, 5.39%)</title><rect x="35.4722%" y="1141" width="5.3874%" height="15" fill="rgb(230,9,2)" fg:x="586" fg:w="89"/><text x="35.7222%" y="1151.50">&lt;serde_..</text></g><g><title>alloy_json_abi::item::private::_::&lt;impl serde::de::Deserialize for alloy_json_abi::item::private::AbiItem&gt;::deserialize (89 samples, 5.39%)</title><rect x="35.4722%" y="1125" width="5.3874%" height="15" fill="rgb(234,149,20)" fg:x="586" fg:w="89"/><text x="35.7222%" y="1135.50">alloy_j..</text></g><g><title>&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (47 samples, 2.85%)</title><rect x="38.0145%" y="1109" width="2.8450%" height="15" fill="rgb(253,229,0)" fg:x="628" fg:w="47"/><text x="38.2645%" y="1119.50">&lt;s..</text></g><g><title>serde::de::Deserializer::__deserialize_content (33 samples, 2.00%)</title><rect x="38.8620%" y="1093" width="1.9976%" height="15" fill="rgb(237,93,40)" fg:x="642" fg:w="33"/><text x="39.1120%" y="1103.50">s..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::end_seq (2 samples, 0.12%)</title><rect x="40.7385%" y="1077" width="0.1211%" height="15" fill="rgb(241,70,45)" fg:x="673" fg:w="2"/><text x="40.9885%" y="1087.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.30%)</title><rect x="40.8596%" y="1141" width="0.3027%" height="15" fill="rgb(206,112,53)" fg:x="675" fg:w="5"/><text x="41.1096%" y="1151.50"></text></g><g><title>_int_malloc (2 samples, 0.12%)</title><rect x="41.0412%" y="1125" width="0.1211%" height="15" fill="rgb(222,219,51)" fg:x="678" fg:w="2"/><text x="41.2912%" y="1135.50"></text></g><g><title>bin (684 samples, 41.40%)</title><rect x="0.0000%" y="1253" width="41.4044%" height="15" fill="rgb(216,0,47)" fg:x="0" fg:w="684"/><text x="0.2500%" y="1263.50">bin</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (208 samples, 12.59%)</title><rect x="28.8136%" y="1237" width="12.5908%" height="15" fill="rgb(238,208,28)" fg:x="476" fg:w="208"/><text x="29.0636%" y="1247.50">tokio::runtime::par..</text></g><g><title>bin::run::{{closure}} (208 samples, 12.59%)</title><rect x="28.8136%" y="1221" width="12.5908%" height="15" fill="rgb(248,143,15)" fg:x="476" fg:w="208"/><text x="29.0636%" y="1231.50">bin::run::{{closure..</text></g><g><title>alloy_etherscan::contract::&lt;impl alloy_etherscan::Client&gt;::contract_abi::{{closure}} (170 samples, 10.29%)</title><rect x="31.1138%" y="1205" width="10.2906%" height="15" fill="rgb(238,164,6)" fg:x="514" fg:w="170"/><text x="31.3638%" y="1215.50">alloy_etherscan..</text></g><g><title>serde_json::de::from_str (103 samples, 6.23%)</title><rect x="35.1695%" y="1189" width="6.2349%" height="15" fill="rgb(217,198,13)" fg:x="581" fg:w="103"/><text x="35.4195%" y="1199.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (103 samples, 6.23%)</title><rect x="35.1695%" y="1173" width="6.2349%" height="15" fill="rgb(211,112,39)" fg:x="581" fg:w="103"/><text x="35.4195%" y="1183.50">&lt;&amp;mut se..</text></g><g><title>&lt;alloy_json_abi::abi::JsonAbiVisitor as serde::de::Visitor&gt;::visit_seq (103 samples, 6.23%)</title><rect x="35.1695%" y="1157" width="6.2349%" height="15" fill="rgb(231,180,14)" fg:x="581" fg:w="103"/><text x="35.4195%" y="1167.50">&lt;alloy_j..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.24%)</title><rect x="41.1622%" y="1141" width="0.2421%" height="15" fill="rgb(213,87,31)" fg:x="680" fg:w="4"/><text x="41.4122%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.12%)</title><rect x="41.2833%" y="1125" width="0.1211%" height="15" fill="rgb(217,123,23)" fg:x="682" fg:w="2"/><text x="41.5333%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.12%)</title><rect x="41.2833%" y="1109" width="0.1211%" height="15" fill="rgb(231,80,37)" fg:x="682" fg:w="2"/><text x="41.5333%" y="1119.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.12%)</title><rect x="41.2833%" y="1093" width="0.1211%" height="15" fill="rgb(206,112,53)" fg:x="682" fg:w="2"/><text x="41.5333%" y="1103.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="41.3438%" y="1077" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="683" fg:w="1"/><text x="41.5938%" y="1087.50"></text></g><g><title>perf_event_addr_filters_exec (1 samples, 0.06%)</title><rect x="41.7070%" y="1013" width="0.0605%" height="15" fill="rgb(228,177,25)" fg:x="689" fg:w="1"/><text x="41.9570%" y="1023.50"></text></g><g><title>perf-exec (7 samples, 0.42%)</title><rect x="41.4044%" y="1253" width="0.4237%" height="15" fill="rgb(250,111,27)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1263.50"></text></g><g><title>el0t_64_sync_handler (7 samples, 0.42%)</title><rect x="41.4044%" y="1237" width="0.4237%" height="15" fill="rgb(232,35,33)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1247.50"></text></g><g><title>el0_svc (7 samples, 0.42%)</title><rect x="41.4044%" y="1221" width="0.4237%" height="15" fill="rgb(225,46,33)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1231.50"></text></g><g><title>do_el0_svc (7 samples, 0.42%)</title><rect x="41.4044%" y="1205" width="0.4237%" height="15" fill="rgb(221,53,8)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1215.50"></text></g><g><title>el0_svc_common.constprop.0 (7 samples, 0.42%)</title><rect x="41.4044%" y="1189" width="0.4237%" height="15" fill="rgb(219,7,42)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1199.50"></text></g><g><title>invoke_syscall (7 samples, 0.42%)</title><rect x="41.4044%" y="1173" width="0.4237%" height="15" fill="rgb(234,209,2)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1183.50"></text></g><g><title>__arm64_sys_execve (7 samples, 0.42%)</title><rect x="41.4044%" y="1157" width="0.4237%" height="15" fill="rgb(220,15,8)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1167.50"></text></g><g><title>do_execveat_common.isra.0 (7 samples, 0.42%)</title><rect x="41.4044%" y="1141" width="0.4237%" height="15" fill="rgb(248,134,53)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1151.50"></text></g><g><title>bprm_execve (7 samples, 0.42%)</title><rect x="41.4044%" y="1125" width="0.4237%" height="15" fill="rgb(232,147,16)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1135.50"></text></g><g><title>bprm_execve.part.0 (7 samples, 0.42%)</title><rect x="41.4044%" y="1109" width="0.4237%" height="15" fill="rgb(223,6,31)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1119.50"></text></g><g><title>exec_binprm (7 samples, 0.42%)</title><rect x="41.4044%" y="1093" width="0.4237%" height="15" fill="rgb(223,123,21)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1103.50"></text></g><g><title>search_binary_handler (7 samples, 0.42%)</title><rect x="41.4044%" y="1077" width="0.4237%" height="15" fill="rgb(243,193,38)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1087.50"></text></g><g><title>load_elf_binary (7 samples, 0.42%)</title><rect x="41.4044%" y="1061" width="0.4237%" height="15" fill="rgb(246,102,21)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1071.50"></text></g><g><title>begin_new_exec (7 samples, 0.42%)</title><rect x="41.4044%" y="1045" width="0.4237%" height="15" fill="rgb(219,195,31)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1055.50"></text></g><g><title>perf_event_exec (7 samples, 0.42%)</title><rect x="41.4044%" y="1029" width="0.4237%" height="15" fill="rgb(225,89,21)" fg:x="684" fg:w="7"/><text x="41.6544%" y="1039.50"></text></g><g><title>perf_event_remove_on_exec (1 samples, 0.06%)</title><rect x="41.7676%" y="1013" width="0.0605%" height="15" fill="rgb(244,41,42)" fg:x="690" fg:w="1"/><text x="42.0176%" y="1023.50"></text></g><g><title>&lt;reth_db::tables::models::sharded_key::ShardedKey&lt;T&gt; as reth_db::abstraction::table::Encode&gt;::encode (1 samples, 0.06%)</title><rect x="41.8281%" y="1029" width="0.0605%" height="15" fill="rgb(234,122,47)" fg:x="691" fg:w="1"/><text x="42.0781%" y="1039.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (2 samples, 0.12%)</title><rect x="41.8281%" y="1045" width="0.1211%" height="15" fill="rgb(228,63,22)" fg:x="691" fg:w="2"/><text x="42.0781%" y="1055.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="41.8886%" y="1029" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="692" fg:w="1"/><text x="42.1386%" y="1039.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="41.8886%" y="1013" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="692" fg:w="1"/><text x="42.1386%" y="1023.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="41.8886%" y="997" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="692" fg:w="1"/><text x="42.1386%" y="1007.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="41.8886%" y="981" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="692" fg:w="1"/><text x="42.1386%" y="991.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="41.8886%" y="965" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="692" fg:w="1"/><text x="42.1386%" y="975.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="41.8886%" y="949" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="692" fg:w="1"/><text x="42.1386%" y="959.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="41.8886%" y="933" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="692" fg:w="1"/><text x="42.1386%" y="943.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="41.8886%" y="917" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="692" fg:w="1"/><text x="42.1386%" y="927.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="41.8886%" y="901" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="692" fg:w="1"/><text x="42.1386%" y="911.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="41.8886%" y="885" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="692" fg:w="1"/><text x="42.1386%" y="895.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="41.8886%" y="869" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="692" fg:w="1"/><text x="42.1386%" y="879.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="41.8886%" y="853" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="692" fg:w="1"/><text x="42.1386%" y="863.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="41.8886%" y="837" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="692" fg:w="1"/><text x="42.1386%" y="847.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="41.8886%" y="821" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="692" fg:w="1"/><text x="42.1386%" y="831.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="41.8886%" y="805" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="692" fg:w="1"/><text x="42.1386%" y="815.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="41.8886%" y="789" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="692" fg:w="1"/><text x="42.1386%" y="799.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="41.8886%" y="773" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="692" fg:w="1"/><text x="42.1386%" y="783.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="41.8886%" y="757" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="692" fg:w="1"/><text x="42.1386%" y="767.50"></text></g><g><title>xas_find (1 samples, 0.06%)</title><rect x="41.8886%" y="741" width="0.0605%" height="15" fill="rgb(231,91,46)" fg:x="692" fg:w="1"/><text x="42.1386%" y="751.50"></text></g><g><title>xas_load (1 samples, 0.06%)</title><rect x="41.8886%" y="725" width="0.0605%" height="15" fill="rgb(249,146,47)" fg:x="692" fg:w="1"/><text x="42.1386%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="42.0097%" y="869" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="694" fg:w="1"/><text x="42.2597%" y="879.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="42.0097%" y="853" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="694" fg:w="1"/><text x="42.2597%" y="863.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="42.0097%" y="837" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="694" fg:w="1"/><text x="42.2597%" y="847.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="42.0097%" y="821" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="694" fg:w="1"/><text x="42.2597%" y="831.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="42.0097%" y="805" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="694" fg:w="1"/><text x="42.2597%" y="815.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="42.0097%" y="789" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="694" fg:w="1"/><text x="42.2597%" y="799.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="42.0097%" y="773" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="694" fg:w="1"/><text x="42.2597%" y="783.50"></text></g><g><title>xas_find (1 samples, 0.06%)</title><rect x="42.0097%" y="757" width="0.0605%" height="15" fill="rgb(231,91,46)" fg:x="694" fg:w="1"/><text x="42.2597%" y="767.50"></text></g><g><title>xas_load (1 samples, 0.06%)</title><rect x="42.0097%" y="741" width="0.0605%" height="15" fill="rgb(249,146,47)" fg:x="694" fg:w="1"/><text x="42.2597%" y="751.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (5 samples, 0.30%)</title><rect x="41.8281%" y="1125" width="0.3027%" height="15" fill="rgb(234,79,13)" fg:x="691" fg:w="5"/><text x="42.0781%" y="1135.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (5 samples, 0.30%)</title><rect x="41.8281%" y="1109" width="0.3027%" height="15" fill="rgb(236,137,21)" fg:x="691" fg:w="5"/><text x="42.0781%" y="1119.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (5 samples, 0.30%)</title><rect x="41.8281%" y="1093" width="0.3027%" height="15" fill="rgb(224,127,46)" fg:x="691" fg:w="5"/><text x="42.0781%" y="1103.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (5 samples, 0.30%)</title><rect x="41.8281%" y="1077" width="0.3027%" height="15" fill="rgb(250,92,26)" fg:x="691" fg:w="5"/><text x="42.0781%" y="1087.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (5 samples, 0.30%)</title><rect x="41.8281%" y="1061" width="0.3027%" height="15" fill="rgb(241,33,38)" fg:x="691" fg:w="5"/><text x="42.0781%" y="1071.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::tx::Tx&lt;K,E&gt; as reth_db::abstraction::transaction::DbTx&gt;::get (3 samples, 0.18%)</title><rect x="41.9492%" y="1045" width="0.1816%" height="15" fill="rgb(253,2,53)" fg:x="693" fg:w="3"/><text x="42.1992%" y="1055.50"></text></g><g><title>reth_libmdbx::transaction::Transaction&lt;K,E&gt;::get (3 samples, 0.18%)</title><rect x="41.9492%" y="1029" width="0.1816%" height="15" fill="rgb(250,84,16)" fg:x="693" fg:w="3"/><text x="42.1992%" y="1039.50"></text></g><g><title>mdbx_get (3 samples, 0.18%)</title><rect x="41.9492%" y="1013" width="0.1816%" height="15" fill="rgb(207,205,41)" fg:x="693" fg:w="3"/><text x="42.1992%" y="1023.50"></text></g><g><title>cursor_set (3 samples, 0.18%)</title><rect x="41.9492%" y="997" width="0.1816%" height="15" fill="rgb(233,136,1)" fg:x="693" fg:w="3"/><text x="42.1992%" y="1007.50"></text></g><g><title>page_search_root (3 samples, 0.18%)</title><rect x="41.9492%" y="981" width="0.1816%" height="15" fill="rgb(251,173,43)" fg:x="693" fg:w="3"/><text x="42.1992%" y="991.50"></text></g><g><title>page_get_three (3 samples, 0.18%)</title><rect x="41.9492%" y="965" width="0.1816%" height="15" fill="rgb(212,228,35)" fg:x="693" fg:w="3"/><text x="42.1992%" y="975.50"></text></g><g><title>el0t_64_sync_handler (3 samples, 0.18%)</title><rect x="41.9492%" y="949" width="0.1816%" height="15" fill="rgb(232,35,33)" fg:x="693" fg:w="3"/><text x="42.1992%" y="959.50"></text></g><g><title>el0_da (3 samples, 0.18%)</title><rect x="41.9492%" y="933" width="0.1816%" height="15" fill="rgb(222,99,46)" fg:x="693" fg:w="3"/><text x="42.1992%" y="943.50"></text></g><g><title>do_mem_abort (2 samples, 0.12%)</title><rect x="42.0097%" y="917" width="0.1211%" height="15" fill="rgb(239,157,43)" fg:x="694" fg:w="2"/><text x="42.2597%" y="927.50"></text></g><g><title>do_translation_fault (2 samples, 0.12%)</title><rect x="42.0097%" y="901" width="0.1211%" height="15" fill="rgb(237,78,44)" fg:x="694" fg:w="2"/><text x="42.2597%" y="911.50"></text></g><g><title>do_page_fault (2 samples, 0.12%)</title><rect x="42.0097%" y="885" width="0.1211%" height="15" fill="rgb(206,63,28)" fg:x="694" fg:w="2"/><text x="42.2597%" y="895.50"></text></g><g><title>mt_find (1 samples, 0.06%)</title><rect x="42.0702%" y="869" width="0.0605%" height="15" fill="rgb(232,55,28)" fg:x="695" fg:w="1"/><text x="42.3202%" y="879.50"></text></g><g><title>el1h_64_irq (1 samples, 0.06%)</title><rect x="42.0702%" y="853" width="0.0605%" height="15" fill="rgb(223,86,28)" fg:x="695" fg:w="1"/><text x="42.3202%" y="863.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.06%)</title><rect x="42.0702%" y="837" width="0.0605%" height="15" fill="rgb(231,46,5)" fg:x="695" fg:w="1"/><text x="42.3202%" y="847.50"></text></g><g><title>el1_interrupt (1 samples, 0.06%)</title><rect x="42.0702%" y="821" width="0.0605%" height="15" fill="rgb(254,19,43)" fg:x="695" fg:w="1"/><text x="42.3202%" y="831.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="42.0702%" y="805" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="695" fg:w="1"/><text x="42.3202%" y="815.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="42.0702%" y="789" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="695" fg:w="1"/><text x="42.3202%" y="799.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="42.0702%" y="773" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="695" fg:w="1"/><text x="42.3202%" y="783.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="42.0702%" y="757" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="695" fg:w="1"/><text x="42.3202%" y="767.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="42.0702%" y="741" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="695" fg:w="1"/><text x="42.3202%" y="751.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="42.0702%" y="725" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="695" fg:w="1"/><text x="42.3202%" y="735.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="42.0702%" y="709" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="695" fg:w="1"/><text x="42.3202%" y="719.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="42.0702%" y="693" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="695" fg:w="1"/><text x="42.3202%" y="703.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="42.0702%" y="677" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="695" fg:w="1"/><text x="42.3202%" y="687.50"></text></g><g><title>ena_clean_rx_irq (1 samples, 0.06%)</title><rect x="42.0702%" y="661" width="0.0605%" height="15" fill="rgb(226,177,46)" fg:x="695" fg:w="1"/><text x="42.3202%" y="671.50"></text></g><g><title>ena_com_rx_pkt (1 samples, 0.06%)</title><rect x="42.0702%" y="645" width="0.0605%" height="15" fill="rgb(248,3,38)" fg:x="695" fg:w="1"/><text x="42.3202%" y="655.50"></text></g><g><title>ena_com_cdesc_rx_pkt_get (1 samples, 0.06%)</title><rect x="42.0702%" y="629" width="0.0605%" height="15" fill="rgb(234,64,21)" fg:x="695" fg:w="1"/><text x="42.3202%" y="639.50"></text></g><g><title>cursor_sibling (1 samples, 0.06%)</title><rect x="42.1308%" y="933" width="0.0605%" height="15" fill="rgb(242,95,18)" fg:x="696" fg:w="1"/><text x="42.3808%" y="943.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="42.1308%" y="917" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="696" fg:w="1"/><text x="42.3808%" y="927.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="42.1913%" y="917" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="697" fg:w="1"/><text x="42.4413%" y="927.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (6 samples, 0.36%)</title><rect x="42.1308%" y="1013" width="0.3632%" height="15" fill="rgb(228,63,22)" fg:x="696" fg:w="6"/><text x="42.3808%" y="1023.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (6 samples, 0.36%)</title><rect x="42.1308%" y="997" width="0.3632%" height="15" fill="rgb(247,141,48)" fg:x="696" fg:w="6"/><text x="42.3808%" y="1007.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (6 samples, 0.36%)</title><rect x="42.1308%" y="981" width="0.3632%" height="15" fill="rgb(253,188,5)" fg:x="696" fg:w="6"/><text x="42.3808%" y="991.50"></text></g><g><title>cursor_get (6 samples, 0.36%)</title><rect x="42.1308%" y="965" width="0.3632%" height="15" fill="rgb(238,62,13)" fg:x="696" fg:w="6"/><text x="42.3808%" y="975.50"></text></g><g><title>cursor_set (6 samples, 0.36%)</title><rect x="42.1308%" y="949" width="0.3632%" height="15" fill="rgb(233,136,1)" fg:x="696" fg:w="6"/><text x="42.3808%" y="959.50"></text></g><g><title>page_search_root (5 samples, 0.30%)</title><rect x="42.1913%" y="933" width="0.3027%" height="15" fill="rgb(251,173,43)" fg:x="697" fg:w="5"/><text x="42.4413%" y="943.50"></text></g><g><title>page_get_three (4 samples, 0.24%)</title><rect x="42.2518%" y="917" width="0.2421%" height="15" fill="rgb(212,228,35)" fg:x="698" fg:w="4"/><text x="42.5018%" y="927.50"></text></g><g><title>el0t_64_sync_handler (4 samples, 0.24%)</title><rect x="42.2518%" y="901" width="0.2421%" height="15" fill="rgb(232,35,33)" fg:x="698" fg:w="4"/><text x="42.5018%" y="911.50"></text></g><g><title>el0_da (4 samples, 0.24%)</title><rect x="42.2518%" y="885" width="0.2421%" height="15" fill="rgb(222,99,46)" fg:x="698" fg:w="4"/><text x="42.5018%" y="895.50"></text></g><g><title>do_mem_abort (4 samples, 0.24%)</title><rect x="42.2518%" y="869" width="0.2421%" height="15" fill="rgb(239,157,43)" fg:x="698" fg:w="4"/><text x="42.5018%" y="879.50"></text></g><g><title>do_translation_fault (4 samples, 0.24%)</title><rect x="42.2518%" y="853" width="0.2421%" height="15" fill="rgb(237,78,44)" fg:x="698" fg:w="4"/><text x="42.5018%" y="863.50"></text></g><g><title>do_page_fault (4 samples, 0.24%)</title><rect x="42.2518%" y="837" width="0.2421%" height="15" fill="rgb(206,63,28)" fg:x="698" fg:w="4"/><text x="42.5018%" y="847.50"></text></g><g><title>handle_mm_fault (4 samples, 0.24%)</title><rect x="42.2518%" y="821" width="0.2421%" height="15" fill="rgb(247,31,49)" fg:x="698" fg:w="4"/><text x="42.5018%" y="831.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.24%)</title><rect x="42.2518%" y="805" width="0.2421%" height="15" fill="rgb(254,123,40)" fg:x="698" fg:w="4"/><text x="42.5018%" y="815.50"></text></g><g><title>handle_pte_fault (3 samples, 0.18%)</title><rect x="42.3123%" y="789" width="0.1816%" height="15" fill="rgb(225,148,24)" fg:x="699" fg:w="3"/><text x="42.5623%" y="799.50"></text></g><g><title>do_fault (3 samples, 0.18%)</title><rect x="42.3123%" y="773" width="0.1816%" height="15" fill="rgb(236,204,42)" fg:x="699" fg:w="3"/><text x="42.5623%" y="783.50"></text></g><g><title>do_read_fault (3 samples, 0.18%)</title><rect x="42.3123%" y="757" width="0.1816%" height="15" fill="rgb(241,58,29)" fg:x="699" fg:w="3"/><text x="42.5623%" y="767.50"></text></g><g><title>xfs_filemap_map_pages (3 samples, 0.18%)</title><rect x="42.3123%" y="741" width="0.1816%" height="15" fill="rgb(225,181,35)" fg:x="699" fg:w="3"/><text x="42.5623%" y="751.50"></text></g><g><title>filemap_map_pages (3 samples, 0.18%)</title><rect x="42.3123%" y="725" width="0.1816%" height="15" fill="rgb(240,96,12)" fg:x="699" fg:w="3"/><text x="42.5623%" y="735.50"></text></g><g><title>xas_find (3 samples, 0.18%)</title><rect x="42.3123%" y="709" width="0.1816%" height="15" fill="rgb(231,91,46)" fg:x="699" fg:w="3"/><text x="42.5623%" y="719.50"></text></g><g><title>xas_load (3 samples, 0.18%)</title><rect x="42.3123%" y="693" width="0.1816%" height="15" fill="rgb(249,146,47)" fg:x="699" fg:w="3"/><text x="42.5623%" y="703.50"></text></g><g><title>page_search (1 samples, 0.06%)</title><rect x="42.4939%" y="933" width="0.0605%" height="15" fill="rgb(240,108,8)" fg:x="702" fg:w="1"/><text x="42.7439%" y="943.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="42.4939%" y="917" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="702" fg:w="1"/><text x="42.7439%" y="927.50"></text></g><g><title>cursor_set (2 samples, 0.12%)</title><rect x="42.4939%" y="949" width="0.1211%" height="15" fill="rgb(233,136,1)" fg:x="702" fg:w="2"/><text x="42.7439%" y="959.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="42.5545%" y="933" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="703" fg:w="1"/><text x="42.8045%" y="943.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="42.5545%" y="917" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="703" fg:w="1"/><text x="42.8045%" y="927.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="42.5545%" y="901" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="703" fg:w="1"/><text x="42.8045%" y="911.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="42.5545%" y="885" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="703" fg:w="1"/><text x="42.8045%" y="895.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="42.5545%" y="869" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="703" fg:w="1"/><text x="42.8045%" y="879.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="42.5545%" y="853" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="703" fg:w="1"/><text x="42.8045%" y="863.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="42.5545%" y="837" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="703" fg:w="1"/><text x="42.8045%" y="847.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="42.5545%" y="821" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="703" fg:w="1"/><text x="42.8045%" y="831.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="42.5545%" y="805" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="703" fg:w="1"/><text x="42.8045%" y="815.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="42.5545%" y="789" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="703" fg:w="1"/><text x="42.8045%" y="799.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="42.5545%" y="773" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="703" fg:w="1"/><text x="42.8045%" y="783.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="42.5545%" y="757" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="703" fg:w="1"/><text x="42.8045%" y="767.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="42.5545%" y="741" width="0.0605%" height="15" fill="rgb(232,180,1)" fg:x="703" fg:w="1"/><text x="42.8045%" y="751.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="42.5545%" y="725" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="703" fg:w="1"/><text x="42.8045%" y="735.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.06%)</title><rect x="42.5545%" y="709" width="0.0605%" height="15" fill="rgb(244,209,18)" fg:x="703" fg:w="1"/><text x="42.8045%" y="719.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="42.5545%" y="693" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="703" fg:w="1"/><text x="42.8045%" y="703.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (3 samples, 0.18%)</title><rect x="42.4939%" y="1013" width="0.1816%" height="15" fill="rgb(243,169,33)" fg:x="702" fg:w="3"/><text x="42.7439%" y="1023.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (3 samples, 0.18%)</title><rect x="42.4939%" y="997" width="0.1816%" height="15" fill="rgb(253,188,5)" fg:x="702" fg:w="3"/><text x="42.7439%" y="1007.50"></text></g><g><title>cursor_get (3 samples, 0.18%)</title><rect x="42.4939%" y="981" width="0.1816%" height="15" fill="rgb(238,62,13)" fg:x="702" fg:w="3"/><text x="42.7439%" y="991.50"></text></g><g><title>cursor_set (3 samples, 0.18%)</title><rect x="42.4939%" y="965" width="0.1816%" height="15" fill="rgb(233,136,1)" fg:x="702" fg:w="3"/><text x="42.7439%" y="975.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="42.6150%" y="949" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="704" fg:w="1"/><text x="42.8650%" y="959.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="42.6150%" y="933" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="704" fg:w="1"/><text x="42.8650%" y="943.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="42.6150%" y="917" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="704" fg:w="1"/><text x="42.8650%" y="927.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="42.6150%" y="901" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="704" fg:w="1"/><text x="42.8650%" y="911.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="42.6150%" y="885" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="704" fg:w="1"/><text x="42.8650%" y="895.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="42.6150%" y="869" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="704" fg:w="1"/><text x="42.8650%" y="879.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="42.6150%" y="853" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="704" fg:w="1"/><text x="42.8650%" y="863.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="42.6150%" y="837" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="704" fg:w="1"/><text x="42.8650%" y="847.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="42.6150%" y="821" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="704" fg:w="1"/><text x="42.8650%" y="831.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="42.6150%" y="805" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="704" fg:w="1"/><text x="42.8650%" y="815.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="42.6150%" y="789" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="704" fg:w="1"/><text x="42.8650%" y="799.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="42.6150%" y="773" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="704" fg:w="1"/><text x="42.8650%" y="783.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="42.6150%" y="757" width="0.0605%" height="15" fill="rgb(232,180,1)" fg:x="704" fg:w="1"/><text x="42.8650%" y="767.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="42.6150%" y="741" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="704" fg:w="1"/><text x="42.8650%" y="751.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="42.6150%" y="725" width="0.0605%" height="15" fill="rgb(246,35,53)" fg:x="704" fg:w="1"/><text x="42.8650%" y="735.50"></text></g><g><title>rmqueue (1 samples, 0.06%)</title><rect x="42.6150%" y="709" width="0.0605%" height="15" fill="rgb(227,170,9)" fg:x="704" fg:w="1"/><text x="42.8650%" y="719.50"></text></g><g><title>rmqueue_pcplist (1 samples, 0.06%)</title><rect x="42.6150%" y="693" width="0.0605%" height="15" fill="rgb(222,51,4)" fg:x="704" fg:w="1"/><text x="42.8650%" y="703.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (11 samples, 0.67%)</title><rect x="42.1308%" y="1093" width="0.6659%" height="15" fill="rgb(240,86,32)" fg:x="696" fg:w="11"/><text x="42.3808%" y="1103.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (11 samples, 0.67%)</title><rect x="42.1308%" y="1077" width="0.6659%" height="15" fill="rgb(250,133,8)" fg:x="696" fg:w="11"/><text x="42.3808%" y="1087.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (11 samples, 0.67%)</title><rect x="42.1308%" y="1061" width="0.6659%" height="15" fill="rgb(215,64,41)" fg:x="696" fg:w="11"/><text x="42.3808%" y="1071.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (11 samples, 0.67%)</title><rect x="42.1308%" y="1045" width="0.6659%" height="15" fill="rgb(253,194,2)" fg:x="696" fg:w="11"/><text x="42.3808%" y="1055.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (11 samples, 0.67%)</title><rect x="42.1308%" y="1029" width="0.6659%" height="15" fill="rgb(207,143,46)" fg:x="696" fg:w="11"/><text x="42.3808%" y="1039.50"></text></g><g><title>sucds::elias_fano::EliasFano::enable_rank (2 samples, 0.12%)</title><rect x="42.6755%" y="1013" width="0.1211%" height="15" fill="rgb(230,113,53)" fg:x="705" fg:w="2"/><text x="42.9255%" y="1023.50"></text></g><g><title>sucds::darray::DArrayIndex::build (2 samples, 0.12%)</title><rect x="42.6755%" y="997" width="0.1211%" height="15" fill="rgb(224,166,54)" fg:x="705" fg:w="2"/><text x="42.9255%" y="1007.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (1 samples, 0.06%)</title><rect x="42.7966%" y="1077" width="0.0605%" height="15" fill="rgb(234,79,13)" fg:x="707" fg:w="1"/><text x="43.0466%" y="1087.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="42.7966%" y="1061" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="707" fg:w="1"/><text x="43.0466%" y="1071.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="42.7966%" y="1045" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="707" fg:w="1"/><text x="43.0466%" y="1055.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="42.7966%" y="1029" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="707" fg:w="1"/><text x="43.0466%" y="1039.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="42.7966%" y="1013" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="707" fg:w="1"/><text x="43.0466%" y="1023.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="42.7966%" y="997" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="707" fg:w="1"/><text x="43.0466%" y="1007.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="42.7966%" y="981" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="707" fg:w="1"/><text x="43.0466%" y="991.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="42.7966%" y="965" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="707" fg:w="1"/><text x="43.0466%" y="975.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="42.7966%" y="949" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="707" fg:w="1"/><text x="43.0466%" y="959.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="42.7966%" y="933" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="707" fg:w="1"/><text x="43.0466%" y="943.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="42.7966%" y="917" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="707" fg:w="1"/><text x="43.0466%" y="927.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="42.7966%" y="901" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="707" fg:w="1"/><text x="43.0466%" y="911.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="42.7966%" y="885" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="707" fg:w="1"/><text x="43.0466%" y="895.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="42.7966%" y="869" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="707" fg:w="1"/><text x="43.0466%" y="879.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="42.7966%" y="853" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="707" fg:w="1"/><text x="43.0466%" y="863.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="42.7966%" y="837" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="707" fg:w="1"/><text x="43.0466%" y="847.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="42.7966%" y="821" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="707" fg:w="1"/><text x="43.0466%" y="831.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="42.7966%" y="805" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="707" fg:w="1"/><text x="43.0466%" y="815.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="42.7966%" y="789" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="707" fg:w="1"/><text x="43.0466%" y="799.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="42.7966%" y="773" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="707" fg:w="1"/><text x="43.0466%" y="783.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="42.7966%" y="757" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="707" fg:w="1"/><text x="43.0466%" y="767.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="42.7966%" y="741" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="707" fg:w="1"/><text x="43.0466%" y="751.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="42.7966%" y="725" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="707" fg:w="1"/><text x="43.0466%" y="735.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="42.7966%" y="709" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="707" fg:w="1"/><text x="43.0466%" y="719.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="42.7966%" y="693" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="707" fg:w="1"/><text x="43.0466%" y="703.50"></text></g><g><title>cursor_sibling (1 samples, 0.06%)</title><rect x="42.8571%" y="885" width="0.0605%" height="15" fill="rgb(242,95,18)" fg:x="708" fg:w="1"/><text x="43.1071%" y="895.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="42.8571%" y="869" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="708" fg:w="1"/><text x="43.1071%" y="879.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="42.8571%" y="853" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="708" fg:w="1"/><text x="43.1071%" y="863.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="42.8571%" y="837" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="708" fg:w="1"/><text x="43.1071%" y="847.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="42.8571%" y="821" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="708" fg:w="1"/><text x="43.1071%" y="831.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="42.8571%" y="805" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="708" fg:w="1"/><text x="43.1071%" y="815.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="42.8571%" y="789" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="708" fg:w="1"/><text x="43.1071%" y="799.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="42.8571%" y="773" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="708" fg:w="1"/><text x="43.1071%" y="783.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="42.8571%" y="757" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="708" fg:w="1"/><text x="43.1071%" y="767.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="42.8571%" y="741" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="708" fg:w="1"/><text x="43.1071%" y="751.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="42.8571%" y="725" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="708" fg:w="1"/><text x="43.1071%" y="735.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="42.8571%" y="709" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="708" fg:w="1"/><text x="43.1071%" y="719.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="42.8571%" y="693" width="0.0605%" height="15" fill="rgb(232,180,1)" fg:x="708" fg:w="1"/><text x="43.1071%" y="703.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="42.8571%" y="677" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="708" fg:w="1"/><text x="43.1071%" y="687.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.06%)</title><rect x="42.8571%" y="661" width="0.0605%" height="15" fill="rgb(244,209,18)" fg:x="708" fg:w="1"/><text x="43.1071%" y="671.50"></text></g><g><title>try_charge_memcg (1 samples, 0.06%)</title><rect x="42.8571%" y="645" width="0.0605%" height="15" fill="rgb(209,44,39)" fg:x="708" fg:w="1"/><text x="43.1071%" y="655.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="42.9177%" y="869" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="709" fg:w="1"/><text x="43.1677%" y="879.50"></text></g><g><title>__do_fault (1 samples, 0.06%)</title><rect x="43.0387%" y="693" width="0.0605%" height="15" fill="rgb(232,18,38)" fg:x="711" fg:w="1"/><text x="43.2887%" y="703.50"></text></g><g><title>xfs_filemap_fault (1 samples, 0.06%)</title><rect x="43.0387%" y="677" width="0.0605%" height="15" fill="rgb(230,143,35)" fg:x="711" fg:w="1"/><text x="43.2887%" y="687.50"></text></g><g><title>filemap_fault (1 samples, 0.06%)</title><rect x="43.0387%" y="661" width="0.0605%" height="15" fill="rgb(254,137,16)" fg:x="711" fg:w="1"/><text x="43.2887%" y="671.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.06%)</title><rect x="43.0387%" y="645" width="0.0605%" height="15" fill="rgb(240,58,36)" fg:x="711" fg:w="1"/><text x="43.2887%" y="655.50"></text></g><g><title>filemap_alloc_folio (1 samples, 0.06%)</title><rect x="43.0387%" y="629" width="0.0605%" height="15" fill="rgb(222,56,20)" fg:x="711" fg:w="1"/><text x="43.2887%" y="639.50"></text></g><g><title>folio_alloc (1 samples, 0.06%)</title><rect x="43.0387%" y="613" width="0.0605%" height="15" fill="rgb(246,171,8)" fg:x="711" fg:w="1"/><text x="43.2887%" y="623.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="43.0387%" y="597" width="0.0605%" height="15" fill="rgb(232,180,1)" fg:x="711" fg:w="1"/><text x="43.2887%" y="607.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="43.0387%" y="581" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="711" fg:w="1"/><text x="43.2887%" y="591.50"></text></g><g><title>do_set_pte (1 samples, 0.06%)</title><rect x="43.0993%" y="661" width="0.0605%" height="15" fill="rgb(208,28,54)" fg:x="712" fg:w="1"/><text x="43.3493%" y="671.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (7 samples, 0.42%)</title><rect x="42.8571%" y="965" width="0.4237%" height="15" fill="rgb(228,63,22)" fg:x="708" fg:w="7"/><text x="43.1071%" y="975.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (7 samples, 0.42%)</title><rect x="42.8571%" y="949" width="0.4237%" height="15" fill="rgb(247,141,48)" fg:x="708" fg:w="7"/><text x="43.1071%" y="959.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (7 samples, 0.42%)</title><rect x="42.8571%" y="933" width="0.4237%" height="15" fill="rgb(253,188,5)" fg:x="708" fg:w="7"/><text x="43.1071%" y="943.50"></text></g><g><title>cursor_get (7 samples, 0.42%)</title><rect x="42.8571%" y="917" width="0.4237%" height="15" fill="rgb(238,62,13)" fg:x="708" fg:w="7"/><text x="43.1071%" y="927.50"></text></g><g><title>cursor_set (7 samples, 0.42%)</title><rect x="42.8571%" y="901" width="0.4237%" height="15" fill="rgb(233,136,1)" fg:x="708" fg:w="7"/><text x="43.1071%" y="911.50"></text></g><g><title>page_search_root (6 samples, 0.36%)</title><rect x="42.9177%" y="885" width="0.3632%" height="15" fill="rgb(251,173,43)" fg:x="709" fg:w="6"/><text x="43.1677%" y="895.50"></text></g><g><title>page_get_three (5 samples, 0.30%)</title><rect x="42.9782%" y="869" width="0.3027%" height="15" fill="rgb(212,228,35)" fg:x="710" fg:w="5"/><text x="43.2282%" y="879.50"></text></g><g><title>el0t_64_sync_handler (5 samples, 0.30%)</title><rect x="42.9782%" y="853" width="0.3027%" height="15" fill="rgb(232,35,33)" fg:x="710" fg:w="5"/><text x="43.2282%" y="863.50"></text></g><g><title>el0_da (5 samples, 0.30%)</title><rect x="42.9782%" y="837" width="0.3027%" height="15" fill="rgb(222,99,46)" fg:x="710" fg:w="5"/><text x="43.2282%" y="847.50"></text></g><g><title>do_mem_abort (4 samples, 0.24%)</title><rect x="43.0387%" y="821" width="0.2421%" height="15" fill="rgb(239,157,43)" fg:x="711" fg:w="4"/><text x="43.2887%" y="831.50"></text></g><g><title>do_translation_fault (4 samples, 0.24%)</title><rect x="43.0387%" y="805" width="0.2421%" height="15" fill="rgb(237,78,44)" fg:x="711" fg:w="4"/><text x="43.2887%" y="815.50"></text></g><g><title>do_page_fault (4 samples, 0.24%)</title><rect x="43.0387%" y="789" width="0.2421%" height="15" fill="rgb(206,63,28)" fg:x="711" fg:w="4"/><text x="43.2887%" y="799.50"></text></g><g><title>handle_mm_fault (4 samples, 0.24%)</title><rect x="43.0387%" y="773" width="0.2421%" height="15" fill="rgb(247,31,49)" fg:x="711" fg:w="4"/><text x="43.2887%" y="783.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.24%)</title><rect x="43.0387%" y="757" width="0.2421%" height="15" fill="rgb(254,123,40)" fg:x="711" fg:w="4"/><text x="43.2887%" y="767.50"></text></g><g><title>handle_pte_fault (4 samples, 0.24%)</title><rect x="43.0387%" y="741" width="0.2421%" height="15" fill="rgb(225,148,24)" fg:x="711" fg:w="4"/><text x="43.2887%" y="751.50"></text></g><g><title>do_fault (4 samples, 0.24%)</title><rect x="43.0387%" y="725" width="0.2421%" height="15" fill="rgb(236,204,42)" fg:x="711" fg:w="4"/><text x="43.2887%" y="735.50"></text></g><g><title>do_read_fault (4 samples, 0.24%)</title><rect x="43.0387%" y="709" width="0.2421%" height="15" fill="rgb(241,58,29)" fg:x="711" fg:w="4"/><text x="43.2887%" y="719.50"></text></g><g><title>xfs_filemap_map_pages (3 samples, 0.18%)</title><rect x="43.0993%" y="693" width="0.1816%" height="15" fill="rgb(225,181,35)" fg:x="712" fg:w="3"/><text x="43.3493%" y="703.50"></text></g><g><title>filemap_map_pages (3 samples, 0.18%)</title><rect x="43.0993%" y="677" width="0.1816%" height="15" fill="rgb(240,96,12)" fg:x="712" fg:w="3"/><text x="43.3493%" y="687.50"></text></g><g><title>xas_find (2 samples, 0.12%)</title><rect x="43.1598%" y="661" width="0.1211%" height="15" fill="rgb(231,91,46)" fg:x="713" fg:w="2"/><text x="43.4098%" y="671.50"></text></g><g><title>xas_load (2 samples, 0.12%)</title><rect x="43.1598%" y="645" width="0.1211%" height="15" fill="rgb(249,146,47)" fg:x="713" fg:w="2"/><text x="43.4098%" y="655.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="43.2809%" y="901" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="715" fg:w="1"/><text x="43.5309%" y="911.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="43.2809%" y="885" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="715" fg:w="1"/><text x="43.5309%" y="895.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="43.2809%" y="869" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="715" fg:w="1"/><text x="43.5309%" y="879.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="43.2809%" y="853" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="715" fg:w="1"/><text x="43.5309%" y="863.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="43.2809%" y="837" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="715" fg:w="1"/><text x="43.5309%" y="847.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="43.2809%" y="821" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="715" fg:w="1"/><text x="43.5309%" y="831.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="43.2809%" y="805" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="715" fg:w="1"/><text x="43.5309%" y="815.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="43.2809%" y="789" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="715" fg:w="1"/><text x="43.5309%" y="799.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="43.2809%" y="773" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="715" fg:w="1"/><text x="43.5309%" y="783.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="43.2809%" y="757" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="715" fg:w="1"/><text x="43.5309%" y="767.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="43.2809%" y="741" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="715" fg:w="1"/><text x="43.5309%" y="751.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="43.2809%" y="725" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="715" fg:w="1"/><text x="43.5309%" y="735.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="43.2809%" y="709" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="715" fg:w="1"/><text x="43.5309%" y="719.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="43.2809%" y="693" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="715" fg:w="1"/><text x="43.5309%" y="703.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="43.2809%" y="677" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="715" fg:w="1"/><text x="43.5309%" y="687.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="43.2809%" y="661" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="715" fg:w="1"/><text x="43.5309%" y="671.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (2 samples, 0.12%)</title><rect x="43.2809%" y="965" width="0.1211%" height="15" fill="rgb(243,169,33)" fg:x="715" fg:w="2"/><text x="43.5309%" y="975.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (2 samples, 0.12%)</title><rect x="43.2809%" y="949" width="0.1211%" height="15" fill="rgb(253,188,5)" fg:x="715" fg:w="2"/><text x="43.5309%" y="959.50"></text></g><g><title>cursor_get (2 samples, 0.12%)</title><rect x="43.2809%" y="933" width="0.1211%" height="15" fill="rgb(238,62,13)" fg:x="715" fg:w="2"/><text x="43.5309%" y="943.50"></text></g><g><title>cursor_set (2 samples, 0.12%)</title><rect x="43.2809%" y="917" width="0.1211%" height="15" fill="rgb(233,136,1)" fg:x="715" fg:w="2"/><text x="43.5309%" y="927.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="43.3414%" y="901" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="716" fg:w="1"/><text x="43.5914%" y="911.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="43.3414%" y="885" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="716" fg:w="1"/><text x="43.5914%" y="895.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (10 samples, 0.61%)</title><rect x="42.8571%" y="1045" width="0.6053%" height="15" fill="rgb(240,86,32)" fg:x="708" fg:w="10"/><text x="43.1071%" y="1055.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (10 samples, 0.61%)</title><rect x="42.8571%" y="1029" width="0.6053%" height="15" fill="rgb(250,133,8)" fg:x="708" fg:w="10"/><text x="43.1071%" y="1039.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (10 samples, 0.61%)</title><rect x="42.8571%" y="1013" width="0.6053%" height="15" fill="rgb(215,64,41)" fg:x="708" fg:w="10"/><text x="43.1071%" y="1023.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (10 samples, 0.61%)</title><rect x="42.8571%" y="997" width="0.6053%" height="15" fill="rgb(253,194,2)" fg:x="708" fg:w="10"/><text x="43.1071%" y="1007.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (10 samples, 0.61%)</title><rect x="42.8571%" y="981" width="0.6053%" height="15" fill="rgb(207,143,46)" fg:x="708" fg:w="10"/><text x="43.1071%" y="991.50"></text></g><g><title>__aarch64_cas1_rel (1 samples, 0.06%)</title><rect x="43.4019%" y="965" width="0.0605%" height="15" fill="rgb(232,202,28)" fg:x="717" fg:w="1"/><text x="43.6519%" y="975.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (1 samples, 0.06%)</title><rect x="43.4625%" y="1029" width="0.0605%" height="15" fill="rgb(234,79,13)" fg:x="718" fg:w="1"/><text x="43.7125%" y="1039.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="43.4625%" y="1013" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="718" fg:w="1"/><text x="43.7125%" y="1023.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::call (1 samples, 0.06%)</title><rect x="43.6441%" y="965" width="0.0605%" height="15" fill="rgb(237,35,0)" fg:x="721" fg:w="1"/><text x="43.8941%" y="975.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (1 samples, 0.06%)</title><rect x="43.6441%" y="949" width="0.0605%" height="15" fill="rgb(206,157,28)" fg:x="721" fg:w="1"/><text x="43.8941%" y="959.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="43.6441%" y="933" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="721" fg:w="1"/><text x="43.8941%" y="943.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="43.6441%" y="917" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="721" fg:w="1"/><text x="43.8941%" y="927.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.06%)</title><rect x="43.6441%" y="901" width="0.0605%" height="15" fill="rgb(237,173,29)" fg:x="721" fg:w="1"/><text x="43.8941%" y="911.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (3 samples, 0.18%)</title><rect x="43.6441%" y="997" width="0.1816%" height="15" fill="rgb(222,82,5)" fg:x="721" fg:w="3"/><text x="43.8941%" y="1007.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (3 samples, 0.18%)</title><rect x="43.6441%" y="981" width="0.1816%" height="15" fill="rgb(232,116,6)" fg:x="721" fg:w="3"/><text x="43.8941%" y="991.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (2 samples, 0.12%)</title><rect x="43.7046%" y="965" width="0.1211%" height="15" fill="rgb(236,181,49)" fg:x="722" fg:w="2"/><text x="43.9546%" y="975.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (7 samples, 0.42%)</title><rect x="43.4625%" y="1045" width="0.4237%" height="15" fill="rgb(222,82,5)" fg:x="718" fg:w="7"/><text x="43.7125%" y="1055.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (6 samples, 0.36%)</title><rect x="43.5230%" y="1029" width="0.3632%" height="15" fill="rgb(232,116,6)" fg:x="719" fg:w="6"/><text x="43.7730%" y="1039.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (6 samples, 0.36%)</title><rect x="43.5230%" y="1013" width="0.3632%" height="15" fill="rgb(236,181,49)" fg:x="719" fg:w="6"/><text x="43.7730%" y="1023.50"></text></g><g><title>revm_interpreter::instructions::system::sha3 (1 samples, 0.06%)</title><rect x="43.8257%" y="997" width="0.0605%" height="15" fill="rgb(230,22,54)" fg:x="724" fg:w="1"/><text x="44.0757%" y="1007.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (1 samples, 0.06%)</title><rect x="43.8257%" y="981" width="0.0605%" height="15" fill="rgb(224,106,26)" fg:x="724" fg:w="1"/><text x="44.0757%" y="991.50"></text></g><g><title>keccak::keccak_p (1 samples, 0.06%)</title><rect x="43.8257%" y="965" width="0.0605%" height="15" fill="rgb(234,0,40)" fg:x="724" fg:w="1"/><text x="44.0757%" y="975.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (18 samples, 1.09%)</title><rect x="42.8571%" y="1061" width="1.0896%" height="15" fill="rgb(236,181,49)" fg:x="708" fg:w="18"/><text x="43.1071%" y="1071.50"></text></g><g><title>revm_interpreter::instructions::system::sha3 (1 samples, 0.06%)</title><rect x="43.8862%" y="1045" width="0.0605%" height="15" fill="rgb(230,22,54)" fg:x="725" fg:w="1"/><text x="44.1362%" y="1055.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (1 samples, 0.06%)</title><rect x="43.8862%" y="1029" width="0.0605%" height="15" fill="rgb(224,106,26)" fg:x="725" fg:w="1"/><text x="44.1362%" y="1039.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::{{closure}} (1 samples, 0.06%)</title><rect x="43.8862%" y="1013" width="0.0605%" height="15" fill="rgb(234,225,13)" fg:x="725" fg:w="1"/><text x="44.1362%" y="1023.50"></text></g><g><title>keccak::keccak_p (1 samples, 0.06%)</title><rect x="43.8862%" y="997" width="0.0605%" height="15" fill="rgb(234,0,40)" fg:x="725" fg:w="1"/><text x="44.1362%" y="1007.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (1 samples, 0.06%)</title><rect x="44.0073%" y="981" width="0.0605%" height="15" fill="rgb(232,212,25)" fg:x="727" fg:w="1"/><text x="44.2573%" y="991.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecdsa_recover (4 samples, 0.24%)</title><rect x="43.9467%" y="1029" width="0.2421%" height="15" fill="rgb(213,80,39)" fg:x="726" fg:w="4"/><text x="44.1967%" y="1039.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecdsa_sig_recover (4 samples, 0.24%)</title><rect x="43.9467%" y="1013" width="0.2421%" height="15" fill="rgb(223,43,13)" fg:x="726" fg:w="4"/><text x="44.1967%" y="1023.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_strauss_wnaf.constprop.0 (4 samples, 0.24%)</title><rect x="43.9467%" y="997" width="0.2421%" height="15" fill="rgb(233,192,27)" fg:x="726" fg:w="4"/><text x="44.1967%" y="1007.50"></text></g><g><title>rustsecp256k1_v0_8_1_gej_add_ge_var (2 samples, 0.12%)</title><rect x="44.0678%" y="981" width="0.1211%" height="15" fill="rgb(239,191,24)" fg:x="728" fg:w="2"/><text x="44.3178%" y="991.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (2 samples, 0.12%)</title><rect x="44.0678%" y="965" width="0.1211%" height="15" fill="rgb(232,212,25)" fg:x="728" fg:w="2"/><text x="44.3178%" y="975.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (24 samples, 1.45%)</title><rect x="42.7966%" y="1093" width="1.4528%" height="15" fill="rgb(222,82,5)" fg:x="707" fg:w="24"/><text x="43.0466%" y="1103.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (23 samples, 1.39%)</title><rect x="42.8571%" y="1077" width="1.3923%" height="15" fill="rgb(232,116,6)" fg:x="708" fg:w="23"/><text x="43.1071%" y="1087.50"></text></g><g><title>revm_precompile::secp256k1::ec_recover_run (5 samples, 0.30%)</title><rect x="43.9467%" y="1061" width="0.3027%" height="15" fill="rgb(229,73,9)" fg:x="726" fg:w="5"/><text x="44.1967%" y="1071.50"></text></g><g><title>revm_precompile::secp256k1::secp256k1::ecrecover (5 samples, 0.30%)</title><rect x="43.9467%" y="1045" width="0.3027%" height="15" fill="rgb(233,99,19)" fg:x="726" fg:w="5"/><text x="44.1967%" y="1055.50"></text></g><g><title>secp256k1::context::alloc_only::&lt;impl secp256k1::Secp256k1&lt;secp256k1::context::alloc_only::All&gt;&gt;::new (1 samples, 0.06%)</title><rect x="44.1889%" y="1029" width="0.0605%" height="15" fill="rgb(214,74,23)" fg:x="730" fg:w="1"/><text x="44.4389%" y="1039.50"></text></g><g><title>rustsecp256k1_v0_8_1_context_randomize (1 samples, 0.06%)</title><rect x="44.1889%" y="1013" width="0.0605%" height="15" fill="rgb(228,93,17)" fg:x="730" fg:w="1"/><text x="44.4389%" y="1023.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_gen_blind (1 samples, 0.06%)</title><rect x="44.1889%" y="997" width="0.0605%" height="15" fill="rgb(252,146,48)" fg:x="730" fg:w="1"/><text x="44.4389%" y="1007.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_gen (1 samples, 0.06%)</title><rect x="44.1889%" y="981" width="0.0605%" height="15" fill="rgb(227,226,9)" fg:x="730" fg:w="1"/><text x="44.4389%" y="991.50"></text></g><g><title>rustsecp256k1_v0_8_1_gej_add_ge (1 samples, 0.06%)</title><rect x="44.1889%" y="965" width="0.0605%" height="15" fill="rgb(218,17,44)" fg:x="730" fg:w="1"/><text x="44.4389%" y="975.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (1 samples, 0.06%)</title><rect x="44.1889%" y="949" width="0.0605%" height="15" fill="rgb(232,212,25)" fg:x="730" fg:w="1"/><text x="44.4389%" y="959.50"></text></g><g><title>reth_db::tables::utils::decoder (1 samples, 0.06%)</title><rect x="44.2494%" y="981" width="0.0605%" height="15" fill="rgb(237,90,39)" fg:x="731" fg:w="1"/><text x="44.4994%" y="991.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (37 samples, 2.24%)</title><rect x="42.1308%" y="1109" width="2.2397%" height="15" fill="rgb(236,181,49)" fg:x="696" fg:w="37"/><text x="42.3808%" y="1119.50">r..</text></g><g><title>revm_interpreter::instructions::host::extcodesize (2 samples, 0.12%)</title><rect x="44.2494%" y="1093" width="0.1211%" height="15" fill="rgb(226,145,24)" fg:x="731" fg:w="2"/><text x="44.4994%" y="1103.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::code (2 samples, 0.12%)</title><rect x="44.2494%" y="1077" width="0.1211%" height="15" fill="rgb(231,80,48)" fg:x="731" fg:w="2"/><text x="44.4994%" y="1087.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (2 samples, 0.12%)</title><rect x="44.2494%" y="1061" width="0.1211%" height="15" fill="rgb(236,137,21)" fg:x="731" fg:w="2"/><text x="44.4994%" y="1071.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (2 samples, 0.12%)</title><rect x="44.2494%" y="1045" width="0.1211%" height="15" fill="rgb(224,127,46)" fg:x="731" fg:w="2"/><text x="44.4994%" y="1055.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (2 samples, 0.12%)</title><rect x="44.2494%" y="1029" width="0.1211%" height="15" fill="rgb(250,92,26)" fg:x="731" fg:w="2"/><text x="44.4994%" y="1039.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (2 samples, 0.12%)</title><rect x="44.2494%" y="1013" width="0.1211%" height="15" fill="rgb(241,33,38)" fg:x="731" fg:w="2"/><text x="44.4994%" y="1023.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (2 samples, 0.12%)</title><rect x="44.2494%" y="997" width="0.1211%" height="15" fill="rgb(228,63,22)" fg:x="731" fg:w="2"/><text x="44.4994%" y="1007.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="44.3099%" y="981" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="732" fg:w="1"/><text x="44.5599%" y="991.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="44.3099%" y="965" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="732" fg:w="1"/><text x="44.5599%" y="975.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="44.3099%" y="949" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="732" fg:w="1"/><text x="44.5599%" y="959.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="44.3099%" y="933" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="732" fg:w="1"/><text x="44.5599%" y="943.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="44.3099%" y="917" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="732" fg:w="1"/><text x="44.5599%" y="927.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="44.3099%" y="901" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="732" fg:w="1"/><text x="44.5599%" y="911.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="44.3099%" y="885" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="732" fg:w="1"/><text x="44.5599%" y="895.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="44.3099%" y="869" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="732" fg:w="1"/><text x="44.5599%" y="879.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="44.3099%" y="853" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="732" fg:w="1"/><text x="44.5599%" y="863.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="44.3099%" y="837" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="732" fg:w="1"/><text x="44.5599%" y="847.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="44.3099%" y="821" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="732" fg:w="1"/><text x="44.5599%" y="831.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="44.3099%" y="805" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="732" fg:w="1"/><text x="44.5599%" y="815.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="44.3099%" y="789" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="732" fg:w="1"/><text x="44.5599%" y="799.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="44.3099%" y="773" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="732" fg:w="1"/><text x="44.5599%" y="783.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="44.3099%" y="757" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="732" fg:w="1"/><text x="44.5599%" y="767.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="44.3099%" y="741" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="732" fg:w="1"/><text x="44.5599%" y="751.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="44.3099%" y="725" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="732" fg:w="1"/><text x="44.5599%" y="735.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="44.3099%" y="709" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="732" fg:w="1"/><text x="44.5599%" y="719.50"></text></g><g><title>xas_find (1 samples, 0.06%)</title><rect x="44.3099%" y="693" width="0.0605%" height="15" fill="rgb(231,91,46)" fg:x="732" fg:w="1"/><text x="44.5599%" y="703.50"></text></g><g><title>xas_load (1 samples, 0.06%)</title><rect x="44.3099%" y="677" width="0.0605%" height="15" fill="rgb(249,146,47)" fg:x="732" fg:w="1"/><text x="44.5599%" y="687.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_strauss_wnaf.constprop.0 (1 samples, 0.06%)</title><rect x="44.3705%" y="1045" width="0.0605%" height="15" fill="rgb(233,192,27)" fg:x="733" fg:w="1"/><text x="44.6205%" y="1055.50"></text></g><g><title>rustsecp256k1_v0_8_1_ge_set_gej_var (1 samples, 0.06%)</title><rect x="44.4310%" y="1045" width="0.0605%" height="15" fill="rgb(218,191,25)" fg:x="734" fg:w="1"/><text x="44.6810%" y="1055.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (1 samples, 0.06%)</title><rect x="44.4310%" y="1029" width="0.0605%" height="15" fill="rgb(232,212,25)" fg:x="734" fg:w="1"/><text x="44.6810%" y="1039.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="44.4310%" y="1013" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="734" fg:w="1"/><text x="44.6810%" y="1023.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="44.4310%" y="997" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="734" fg:w="1"/><text x="44.6810%" y="1007.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="44.4310%" y="981" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="734" fg:w="1"/><text x="44.6810%" y="991.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="44.4310%" y="965" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="734" fg:w="1"/><text x="44.6810%" y="975.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="44.4310%" y="949" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="734" fg:w="1"/><text x="44.6810%" y="959.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="44.4310%" y="933" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="734" fg:w="1"/><text x="44.6810%" y="943.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="44.4310%" y="917" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="734" fg:w="1"/><text x="44.6810%" y="927.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="44.4310%" y="901" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="734" fg:w="1"/><text x="44.6810%" y="911.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="44.4310%" y="885" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="734" fg:w="1"/><text x="44.6810%" y="895.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (45 samples, 2.72%)</title><rect x="41.8281%" y="1237" width="2.7240%" height="15" fill="rgb(244,101,36)" fg:x="691" fg:w="45"/><text x="42.0781%" y="1247.50">&lt;r..</text></g><g><title>reth_rpc::eth::revm_utils::inspect (45 samples, 2.72%)</title><rect x="41.8281%" y="1221" width="2.7240%" height="15" fill="rgb(223,3,11)" fg:x="691" fg:w="45"/><text x="42.0781%" y="1231.50">re..</text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (45 samples, 2.72%)</title><rect x="41.8281%" y="1205" width="2.7240%" height="15" fill="rgb(248,177,53)" fg:x="691" fg:w="45"/><text x="42.0781%" y="1215.50">re..</text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (45 samples, 2.72%)</title><rect x="41.8281%" y="1189" width="2.7240%" height="15" fill="rgb(206,114,36)" fg:x="691" fg:w="45"/><text x="42.0781%" y="1199.50">&lt;r..</text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (45 samples, 2.72%)</title><rect x="41.8281%" y="1173" width="2.7240%" height="15" fill="rgb(232,116,6)" fg:x="691" fg:w="45"/><text x="42.0781%" y="1183.50">re..</text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (45 samples, 2.72%)</title><rect x="41.8281%" y="1157" width="2.7240%" height="15" fill="rgb(236,181,49)" fg:x="691" fg:w="45"/><text x="42.0781%" y="1167.50">re..</text></g><g><title>revm_interpreter::instructions::host::call_inner (45 samples, 2.72%)</title><rect x="41.8281%" y="1141" width="2.7240%" height="15" fill="rgb(222,82,5)" fg:x="691" fg:w="45"/><text x="42.0781%" y="1151.50">re..</text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (40 samples, 2.42%)</title><rect x="42.1308%" y="1125" width="2.4213%" height="15" fill="rgb(232,116,6)" fg:x="696" fg:w="40"/><text x="42.3808%" y="1135.50">re..</text></g><g><title>revm_precompile::secp256k1::ec_recover_run (3 samples, 0.18%)</title><rect x="44.3705%" y="1109" width="0.1816%" height="15" fill="rgb(229,73,9)" fg:x="733" fg:w="3"/><text x="44.6205%" y="1119.50"></text></g><g><title>revm_precompile::secp256k1::secp256k1::ecrecover (3 samples, 0.18%)</title><rect x="44.3705%" y="1093" width="0.1816%" height="15" fill="rgb(233,99,19)" fg:x="733" fg:w="3"/><text x="44.6205%" y="1103.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecdsa_recover (3 samples, 0.18%)</title><rect x="44.3705%" y="1077" width="0.1816%" height="15" fill="rgb(213,80,39)" fg:x="733" fg:w="3"/><text x="44.6205%" y="1087.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecdsa_sig_recover (3 samples, 0.18%)</title><rect x="44.3705%" y="1061" width="0.1816%" height="15" fill="rgb(223,43,13)" fg:x="733" fg:w="3"/><text x="44.6205%" y="1071.50"></text></g><g><title>rustsecp256k1_v0_8_1_ge_set_xo_var (1 samples, 0.06%)</title><rect x="44.4915%" y="1045" width="0.0605%" height="15" fill="rgb(253,129,30)" fg:x="735" fg:w="1"/><text x="44.7415%" y="1055.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (1 samples, 0.06%)</title><rect x="44.5521%" y="1077" width="0.0605%" height="15" fill="rgb(234,79,13)" fg:x="736" fg:w="1"/><text x="44.8021%" y="1087.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="44.5521%" y="1061" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="736" fg:w="1"/><text x="44.8021%" y="1071.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="44.5521%" y="1045" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="736" fg:w="1"/><text x="44.8021%" y="1055.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="44.5521%" y="1029" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="736" fg:w="1"/><text x="44.8021%" y="1039.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="44.5521%" y="1013" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="736" fg:w="1"/><text x="44.8021%" y="1023.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="44.5521%" y="997" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="736" fg:w="1"/><text x="44.8021%" y="1007.50"></text></g><g><title>reth_db::tables::utils::decoder (1 samples, 0.06%)</title><rect x="44.5521%" y="981" width="0.0605%" height="15" fill="rgb(237,90,39)" fg:x="736" fg:w="1"/><text x="44.8021%" y="991.50"></text></g><g><title>reth_primitives::integer_list::IntegerList::from_bytes (1 samples, 0.06%)</title><rect x="44.5521%" y="965" width="0.0605%" height="15" fill="rgb(238,143,35)" fg:x="736" fg:w="1"/><text x="44.8021%" y="975.50"></text></g><g><title>&lt;sucds::elias_fano::EliasFano as sucds::serial::Searial&gt;::deserialize_from (1 samples, 0.06%)</title><rect x="44.5521%" y="949" width="0.0605%" height="15" fill="rgb(224,226,12)" fg:x="736" fg:w="1"/><text x="44.8021%" y="959.50"></text></g><g><title>&lt;sucds::darray::DArrayIndex as sucds::serial::Searial&gt;::deserialize_from (1 samples, 0.06%)</title><rect x="44.5521%" y="933" width="0.0605%" height="15" fill="rgb(220,142,24)" fg:x="736" fg:w="1"/><text x="44.8021%" y="943.50"></text></g><g><title>reth_db::tables::utils::decoder (1 samples, 0.06%)</title><rect x="44.6126%" y="949" width="0.0605%" height="15" fill="rgb(237,90,39)" fg:x="737" fg:w="1"/><text x="44.8626%" y="959.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (2 samples, 0.12%)</title><rect x="44.6126%" y="1045" width="0.1211%" height="15" fill="rgb(240,86,32)" fg:x="737" fg:w="2"/><text x="44.8626%" y="1055.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (2 samples, 0.12%)</title><rect x="44.6126%" y="1029" width="0.1211%" height="15" fill="rgb(250,133,8)" fg:x="737" fg:w="2"/><text x="44.8626%" y="1039.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (2 samples, 0.12%)</title><rect x="44.6126%" y="1013" width="0.1211%" height="15" fill="rgb(215,64,41)" fg:x="737" fg:w="2"/><text x="44.8626%" y="1023.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (2 samples, 0.12%)</title><rect x="44.6126%" y="997" width="0.1211%" height="15" fill="rgb(253,194,2)" fg:x="737" fg:w="2"/><text x="44.8626%" y="1007.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (2 samples, 0.12%)</title><rect x="44.6126%" y="981" width="0.1211%" height="15" fill="rgb(207,143,46)" fg:x="737" fg:w="2"/><text x="44.8626%" y="991.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (2 samples, 0.12%)</title><rect x="44.6126%" y="965" width="0.1211%" height="15" fill="rgb(228,63,22)" fg:x="737" fg:w="2"/><text x="44.8626%" y="975.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="44.6731%" y="949" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="738" fg:w="1"/><text x="44.9231%" y="959.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="44.6731%" y="933" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="738" fg:w="1"/><text x="44.9231%" y="943.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="44.6731%" y="917" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="738" fg:w="1"/><text x="44.9231%" y="927.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="44.6731%" y="901" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="738" fg:w="1"/><text x="44.9231%" y="911.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="44.6731%" y="885" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="738" fg:w="1"/><text x="44.9231%" y="895.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="44.6731%" y="869" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="738" fg:w="1"/><text x="44.9231%" y="879.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="44.6731%" y="853" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="738" fg:w="1"/><text x="44.9231%" y="863.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="44.6731%" y="837" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="738" fg:w="1"/><text x="44.9231%" y="847.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="44.6731%" y="821" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="738" fg:w="1"/><text x="44.9231%" y="831.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="44.6731%" y="805" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="738" fg:w="1"/><text x="44.9231%" y="815.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="44.6731%" y="789" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="738" fg:w="1"/><text x="44.9231%" y="799.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="44.6731%" y="773" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="738" fg:w="1"/><text x="44.9231%" y="783.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="44.6731%" y="757" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="738" fg:w="1"/><text x="44.9231%" y="767.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="44.6731%" y="741" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="738" fg:w="1"/><text x="44.9231%" y="751.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="44.6731%" y="725" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="738" fg:w="1"/><text x="44.9231%" y="735.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="44.6731%" y="709" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="738" fg:w="1"/><text x="44.9231%" y="719.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="44.6731%" y="693" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="738" fg:w="1"/><text x="44.9231%" y="703.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="44.6731%" y="677" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="738" fg:w="1"/><text x="44.9231%" y="687.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="44.6731%" y="661" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="738" fg:w="1"/><text x="44.9231%" y="671.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="44.7337%" y="1045" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="739" fg:w="1"/><text x="44.9837%" y="1055.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="44.7337%" y="1029" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="739" fg:w="1"/><text x="44.9837%" y="1039.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="44.7337%" y="1013" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="739" fg:w="1"/><text x="44.9837%" y="1023.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="44.7337%" y="997" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="739" fg:w="1"/><text x="44.9837%" y="1007.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (1 samples, 0.06%)</title><rect x="44.7337%" y="981" width="0.0605%" height="15" fill="rgb(234,79,13)" fg:x="739" fg:w="1"/><text x="44.9837%" y="991.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="44.7337%" y="965" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="739" fg:w="1"/><text x="44.9837%" y="975.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::code_by_hash (1 samples, 0.06%)</title><rect x="44.7337%" y="949" width="0.0605%" height="15" fill="rgb(246,45,5)" fg:x="739" fg:w="1"/><text x="44.9837%" y="959.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::bytecode_by_hash (1 samples, 0.06%)</title><rect x="44.7337%" y="933" width="0.0605%" height="15" fill="rgb(219,182,3)" fg:x="739" fg:w="1"/><text x="44.9837%" y="943.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::tx::Tx&lt;K,E&gt; as reth_db::abstraction::transaction::DbTx&gt;::get (1 samples, 0.06%)</title><rect x="44.7337%" y="917" width="0.0605%" height="15" fill="rgb(253,2,53)" fg:x="739" fg:w="1"/><text x="44.9837%" y="927.50"></text></g><g><title>reth_db::tables::utils::decode_one (1 samples, 0.06%)</title><rect x="44.7337%" y="901" width="0.0605%" height="15" fill="rgb(235,218,31)" fg:x="739" fg:w="1"/><text x="44.9837%" y="911.50"></text></g><g><title>&lt;reth_primitives::account::Bytecode as reth_codecs::Compact&gt;::from_compact (1 samples, 0.06%)</title><rect x="44.7337%" y="885" width="0.0605%" height="15" fill="rgb(207,201,1)" fg:x="739" fg:w="1"/><text x="44.9837%" y="895.50"></text></g><g><title>revm_primitives::bytecode::JumpMap::from_slice (1 samples, 0.06%)</title><rect x="44.7337%" y="869" width="0.0605%" height="15" fill="rgb(239,176,16)" fg:x="739" fg:w="1"/><text x="44.9837%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="44.7337%" y="853" width="0.0605%" height="15" fill="rgb(232,211,42)" fg:x="739" fg:w="1"/><text x="44.9837%" y="863.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (5 samples, 0.30%)</title><rect x="44.5521%" y="1237" width="0.3027%" height="15" fill="rgb(206,114,36)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1247.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (5 samples, 0.30%)</title><rect x="44.5521%" y="1221" width="0.3027%" height="15" fill="rgb(232,116,6)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1231.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (5 samples, 0.30%)</title><rect x="44.5521%" y="1205" width="0.3027%" height="15" fill="rgb(236,181,49)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1215.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (5 samples, 0.30%)</title><rect x="44.5521%" y="1189" width="0.3027%" height="15" fill="rgb(222,82,5)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1199.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (5 samples, 0.30%)</title><rect x="44.5521%" y="1173" width="0.3027%" height="15" fill="rgb(232,116,6)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1183.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (5 samples, 0.30%)</title><rect x="44.5521%" y="1157" width="0.3027%" height="15" fill="rgb(236,181,49)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1167.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (5 samples, 0.30%)</title><rect x="44.5521%" y="1141" width="0.3027%" height="15" fill="rgb(222,82,5)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1151.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (5 samples, 0.30%)</title><rect x="44.5521%" y="1125" width="0.3027%" height="15" fill="rgb(232,116,6)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1135.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (5 samples, 0.30%)</title><rect x="44.5521%" y="1109" width="0.3027%" height="15" fill="rgb(236,181,49)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1119.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (5 samples, 0.30%)</title><rect x="44.5521%" y="1093" width="0.3027%" height="15" fill="rgb(222,82,5)" fg:x="736" fg:w="5"/><text x="44.8021%" y="1103.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (4 samples, 0.24%)</title><rect x="44.6126%" y="1077" width="0.2421%" height="15" fill="rgb(232,116,6)" fg:x="737" fg:w="4"/><text x="44.8626%" y="1087.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (4 samples, 0.24%)</title><rect x="44.6126%" y="1061" width="0.2421%" height="15" fill="rgb(236,181,49)" fg:x="737" fg:w="4"/><text x="44.8626%" y="1071.50"></text></g><g><title>revm_interpreter::instructions::host::sstore (1 samples, 0.06%)</title><rect x="44.7942%" y="1045" width="0.0605%" height="15" fill="rgb(218,158,31)" fg:x="740" fg:w="1"/><text x="45.0442%" y="1055.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sstore (1 samples, 0.06%)</title><rect x="44.7942%" y="1029" width="0.0605%" height="15" fill="rgb(253,30,10)" fg:x="740" fg:w="1"/><text x="45.0442%" y="1039.50"></text></g><g><title>revm::journaled_state::JournaledState::sstore (1 samples, 0.06%)</title><rect x="44.7942%" y="1013" width="0.0605%" height="15" fill="rgb(219,98,43)" fg:x="740" fg:w="1"/><text x="45.0442%" y="1023.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (1 samples, 0.06%)</title><rect x="44.7942%" y="997" width="0.0605%" height="15" fill="rgb(250,133,8)" fg:x="740" fg:w="1"/><text x="45.0442%" y="1007.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (1 samples, 0.06%)</title><rect x="44.7942%" y="981" width="0.0605%" height="15" fill="rgb(215,64,41)" fg:x="740" fg:w="1"/><text x="45.0442%" y="991.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (1 samples, 0.06%)</title><rect x="44.7942%" y="965" width="0.0605%" height="15" fill="rgb(253,194,2)" fg:x="740" fg:w="1"/><text x="45.0442%" y="975.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (1 samples, 0.06%)</title><rect x="44.7942%" y="949" width="0.0605%" height="15" fill="rgb(207,143,46)" fg:x="740" fg:w="1"/><text x="45.0442%" y="959.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="44.7942%" y="933" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="740" fg:w="1"/><text x="45.0442%" y="943.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="44.7942%" y="917" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="740" fg:w="1"/><text x="45.0442%" y="927.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="44.7942%" y="901" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="740" fg:w="1"/><text x="45.0442%" y="911.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="44.7942%" y="885" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="740" fg:w="1"/><text x="45.0442%" y="895.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="44.7942%" y="869" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="740" fg:w="1"/><text x="45.0442%" y="879.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="44.7942%" y="853" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="740" fg:w="1"/><text x="45.0442%" y="863.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="44.7942%" y="837" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="740" fg:w="1"/><text x="45.0442%" y="847.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="44.7942%" y="821" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="740" fg:w="1"/><text x="45.0442%" y="831.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="44.7942%" y="805" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="740" fg:w="1"/><text x="45.0442%" y="815.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="44.7942%" y="789" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="740" fg:w="1"/><text x="45.0442%" y="799.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="44.7942%" y="773" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="740" fg:w="1"/><text x="45.0442%" y="783.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="44.7942%" y="757" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="740" fg:w="1"/><text x="45.0442%" y="767.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="44.7942%" y="741" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="740" fg:w="1"/><text x="45.0442%" y="751.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="44.7942%" y="725" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="740" fg:w="1"/><text x="45.0442%" y="735.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="44.7942%" y="709" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="740" fg:w="1"/><text x="45.0442%" y="719.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="44.7942%" y="693" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="740" fg:w="1"/><text x="45.0442%" y="703.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="44.7942%" y="677" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="740" fg:w="1"/><text x="45.0442%" y="687.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="44.7942%" y="661" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="740" fg:w="1"/><text x="45.0442%" y="671.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="44.7942%" y="645" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="740" fg:w="1"/><text x="45.0442%" y="655.50"></text></g><g><title>xas_find (1 samples, 0.06%)</title><rect x="44.7942%" y="629" width="0.0605%" height="15" fill="rgb(231,91,46)" fg:x="740" fg:w="1"/><text x="45.0442%" y="639.50"></text></g><g><title>xas_load (1 samples, 0.06%)</title><rect x="44.7942%" y="613" width="0.0605%" height="15" fill="rgb(249,146,47)" fg:x="740" fg:w="1"/><text x="45.0442%" y="623.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="44.8547%" y="885" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="741" fg:w="1"/><text x="45.1047%" y="895.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (2 samples, 0.12%)</title><rect x="44.8547%" y="1029" width="0.1211%" height="15" fill="rgb(234,79,13)" fg:x="741" fg:w="2"/><text x="45.1047%" y="1039.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (2 samples, 0.12%)</title><rect x="44.8547%" y="1013" width="0.1211%" height="15" fill="rgb(236,137,21)" fg:x="741" fg:w="2"/><text x="45.1047%" y="1023.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::code_by_hash (2 samples, 0.12%)</title><rect x="44.8547%" y="997" width="0.1211%" height="15" fill="rgb(246,45,5)" fg:x="741" fg:w="2"/><text x="45.1047%" y="1007.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::bytecode_by_hash (2 samples, 0.12%)</title><rect x="44.8547%" y="981" width="0.1211%" height="15" fill="rgb(219,182,3)" fg:x="741" fg:w="2"/><text x="45.1047%" y="991.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::tx::Tx&lt;K,E&gt; as reth_db::abstraction::transaction::DbTx&gt;::get (2 samples, 0.12%)</title><rect x="44.8547%" y="965" width="0.1211%" height="15" fill="rgb(253,2,53)" fg:x="741" fg:w="2"/><text x="45.1047%" y="975.50"></text></g><g><title>reth_libmdbx::transaction::Transaction&lt;K,E&gt;::get (2 samples, 0.12%)</title><rect x="44.8547%" y="949" width="0.1211%" height="15" fill="rgb(250,84,16)" fg:x="741" fg:w="2"/><text x="45.1047%" y="959.50"></text></g><g><title>mdbx_get (2 samples, 0.12%)</title><rect x="44.8547%" y="933" width="0.1211%" height="15" fill="rgb(207,205,41)" fg:x="741" fg:w="2"/><text x="45.1047%" y="943.50"></text></g><g><title>cursor_set (2 samples, 0.12%)</title><rect x="44.8547%" y="917" width="0.1211%" height="15" fill="rgb(233,136,1)" fg:x="741" fg:w="2"/><text x="45.1047%" y="927.50"></text></g><g><title>page_search_root (2 samples, 0.12%)</title><rect x="44.8547%" y="901" width="0.1211%" height="15" fill="rgb(251,173,43)" fg:x="741" fg:w="2"/><text x="45.1047%" y="911.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="44.9153%" y="885" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="742" fg:w="1"/><text x="45.1653%" y="895.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="44.9153%" y="869" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="742" fg:w="1"/><text x="45.1653%" y="879.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="44.9153%" y="853" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="742" fg:w="1"/><text x="45.1653%" y="863.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="44.9153%" y="837" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="742" fg:w="1"/><text x="45.1653%" y="847.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="44.9153%" y="821" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="742" fg:w="1"/><text x="45.1653%" y="831.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="44.9153%" y="805" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="742" fg:w="1"/><text x="45.1653%" y="815.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="44.9153%" y="789" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="742" fg:w="1"/><text x="45.1653%" y="799.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="44.9153%" y="773" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="742" fg:w="1"/><text x="45.1653%" y="783.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="44.9153%" y="757" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="742" fg:w="1"/><text x="45.1653%" y="767.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="44.9153%" y="741" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="742" fg:w="1"/><text x="45.1653%" y="751.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="44.9153%" y="725" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="742" fg:w="1"/><text x="45.1653%" y="735.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="44.9153%" y="709" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="742" fg:w="1"/><text x="45.1653%" y="719.50"></text></g><g><title>PageHeadHuge (1 samples, 0.06%)</title><rect x="44.9153%" y="693" width="0.0605%" height="15" fill="rgb(231,66,17)" fg:x="742" fg:w="1"/><text x="45.1653%" y="703.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (3 samples, 0.18%)</title><rect x="44.8547%" y="1077" width="0.1816%" height="15" fill="rgb(232,116,6)" fg:x="741" fg:w="3"/><text x="45.1047%" y="1087.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (3 samples, 0.18%)</title><rect x="44.8547%" y="1061" width="0.1816%" height="15" fill="rgb(236,181,49)" fg:x="741" fg:w="3"/><text x="45.1047%" y="1071.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (3 samples, 0.18%)</title><rect x="44.8547%" y="1045" width="0.1816%" height="15" fill="rgb(222,82,5)" fg:x="741" fg:w="3"/><text x="45.1047%" y="1055.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="44.9758%" y="1029" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="743" fg:w="1"/><text x="45.2258%" y="1039.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::call (1 samples, 0.06%)</title><rect x="44.9758%" y="1013" width="0.0605%" height="15" fill="rgb(237,35,0)" fg:x="743" fg:w="1"/><text x="45.2258%" y="1023.50"></text></g><g><title>reth_revm_inspectors::tracing::TracingInspector::start_trace_on_call (1 samples, 0.06%)</title><rect x="44.9758%" y="997" width="0.0605%" height="15" fill="rgb(206,7,30)" fg:x="743" fg:w="1"/><text x="45.2258%" y="1007.50"></text></g><g><title>reth_revm_inspectors::tracing::arena::CallTraceArena::push_trace (1 samples, 0.06%)</title><rect x="44.9758%" y="981" width="0.0605%" height="15" fill="rgb(247,65,33)" fg:x="743" fg:w="1"/><text x="45.2258%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="44.9758%" y="965" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="743" fg:w="1"/><text x="45.2258%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="44.9758%" y="949" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="743" fg:w="1"/><text x="45.2258%" y="959.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="44.9758%" y="933" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="743" fg:w="1"/><text x="45.2258%" y="943.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="44.9758%" y="917" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="743" fg:w="1"/><text x="45.2258%" y="927.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="44.9758%" y="901" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="743" fg:w="1"/><text x="45.2258%" y="911.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="44.9758%" y="885" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="743" fg:w="1"/><text x="45.2258%" y="895.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="44.9758%" y="869" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="743" fg:w="1"/><text x="45.2258%" y="879.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="44.9758%" y="853" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="743" fg:w="1"/><text x="45.2258%" y="863.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="44.9758%" y="837" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="743" fg:w="1"/><text x="45.2258%" y="847.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="44.9758%" y="821" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="743" fg:w="1"/><text x="45.2258%" y="831.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="44.9758%" y="805" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="743" fg:w="1"/><text x="45.2258%" y="815.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="44.9758%" y="789" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="743" fg:w="1"/><text x="45.2258%" y="799.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="44.9758%" y="773" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="743" fg:w="1"/><text x="45.2258%" y="783.50"></text></g><g><title>alloc_zeroed_user_highpage_movable (1 samples, 0.06%)</title><rect x="44.9758%" y="757" width="0.0605%" height="15" fill="rgb(239,183,41)" fg:x="743" fg:w="1"/><text x="45.2258%" y="767.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="44.9758%" y="741" width="0.0605%" height="15" fill="rgb(252,142,48)" fg:x="743" fg:w="1"/><text x="45.2258%" y="751.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="44.9758%" y="725" width="0.0605%" height="15" fill="rgb(250,70,46)" fg:x="743" fg:w="1"/><text x="45.2258%" y="735.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="44.9758%" y="709" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="743" fg:w="1"/><text x="45.2258%" y="719.50"></text></g><g><title>__pi_clear_page (1 samples, 0.06%)</title><rect x="44.9758%" y="693" width="0.0605%" height="15" fill="rgb(227,148,36)" fg:x="743" fg:w="1"/><text x="45.2258%" y="703.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::initialization (1 samples, 0.06%)</title><rect x="45.0363%" y="1077" width="0.0605%" height="15" fill="rgb(224,149,29)" fg:x="744" fg:w="1"/><text x="45.2863%" y="1087.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (1 samples, 0.06%)</title><rect x="45.0363%" y="1061" width="0.0605%" height="15" fill="rgb(250,133,8)" fg:x="744" fg:w="1"/><text x="45.2863%" y="1071.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (1 samples, 0.06%)</title><rect x="45.0363%" y="1045" width="0.0605%" height="15" fill="rgb(215,64,41)" fg:x="744" fg:w="1"/><text x="45.2863%" y="1055.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (1 samples, 0.06%)</title><rect x="45.0363%" y="1029" width="0.0605%" height="15" fill="rgb(253,194,2)" fg:x="744" fg:w="1"/><text x="45.2863%" y="1039.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (1 samples, 0.06%)</title><rect x="45.0363%" y="1013" width="0.0605%" height="15" fill="rgb(207,143,46)" fg:x="744" fg:w="1"/><text x="45.2863%" y="1023.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="45.0363%" y="997" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="744" fg:w="1"/><text x="45.2863%" y="1007.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="45.0363%" y="981" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="744" fg:w="1"/><text x="45.2863%" y="991.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="45.0363%" y="965" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="744" fg:w="1"/><text x="45.2863%" y="975.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="45.0363%" y="949" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="744" fg:w="1"/><text x="45.2863%" y="959.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="45.0363%" y="933" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="744" fg:w="1"/><text x="45.2863%" y="943.50"></text></g><g><title>node_read_bigdata (1 samples, 0.06%)</title><rect x="45.0363%" y="917" width="0.0605%" height="15" fill="rgb(238,103,6)" fg:x="744" fg:w="1"/><text x="45.2863%" y="927.50"></text></g><g><title>page_get_large (1 samples, 0.06%)</title><rect x="45.0363%" y="901" width="0.0605%" height="15" fill="rgb(224,145,53)" fg:x="744" fg:w="1"/><text x="45.2863%" y="911.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="45.0363%" y="885" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="744" fg:w="1"/><text x="45.2863%" y="895.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="45.0363%" y="869" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="744" fg:w="1"/><text x="45.2863%" y="879.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="45.0363%" y="853" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="744" fg:w="1"/><text x="45.2863%" y="863.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="45.0363%" y="837" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="744" fg:w="1"/><text x="45.2863%" y="847.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="45.0363%" y="821" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="744" fg:w="1"/><text x="45.2863%" y="831.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="45.0363%" y="805" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="744" fg:w="1"/><text x="45.2863%" y="815.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="45.0363%" y="789" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="744" fg:w="1"/><text x="45.2863%" y="799.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="45.0363%" y="773" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="744" fg:w="1"/><text x="45.2863%" y="783.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="45.0363%" y="757" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="744" fg:w="1"/><text x="45.2863%" y="767.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="45.0363%" y="741" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="744" fg:w="1"/><text x="45.2863%" y="751.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="45.0363%" y="725" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="744" fg:w="1"/><text x="45.2863%" y="735.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="45.0363%" y="709" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="744" fg:w="1"/><text x="45.2863%" y="719.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="45.0363%" y="693" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="744" fg:w="1"/><text x="45.2863%" y="703.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.30%)</title><rect x="44.8547%" y="1237" width="0.3027%" height="15" fill="rgb(228,76,43)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1247.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5 samples, 0.30%)</title><rect x="44.8547%" y="1221" width="0.3027%" height="15" fill="rgb(250,218,41)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1231.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5 samples, 0.30%)</title><rect x="44.8547%" y="1205" width="0.3027%" height="15" fill="rgb(238,208,28)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1215.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.30%)</title><rect x="44.8547%" y="1189" width="0.3027%" height="15" fill="rgb(208,157,13)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1199.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (5 samples, 0.30%)</title><rect x="44.8547%" y="1173" width="0.3027%" height="15" fill="rgb(212,174,39)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1183.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (5 samples, 0.30%)</title><rect x="44.8547%" y="1157" width="0.3027%" height="15" fill="rgb(243,177,20)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1167.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (5 samples, 0.30%)</title><rect x="44.8547%" y="1141" width="0.3027%" height="15" fill="rgb(244,101,36)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1151.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (5 samples, 0.30%)</title><rect x="44.8547%" y="1125" width="0.3027%" height="15" fill="rgb(223,3,11)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1135.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (5 samples, 0.30%)</title><rect x="44.8547%" y="1109" width="0.3027%" height="15" fill="rgb(248,177,53)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1119.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (5 samples, 0.30%)</title><rect x="44.8547%" y="1093" width="0.3027%" height="15" fill="rgb(206,114,36)" fg:x="741" fg:w="5"/><text x="45.1047%" y="1103.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="45.0969%" y="1077" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="745" fg:w="1"/><text x="45.3469%" y="1087.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="45.0969%" y="1061" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="745" fg:w="1"/><text x="45.3469%" y="1071.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="45.0969%" y="1045" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="745" fg:w="1"/><text x="45.3469%" y="1055.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="45.0969%" y="1029" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="745" fg:w="1"/><text x="45.3469%" y="1039.50"></text></g><g><title>reth_db::tables::utils::decoder (1 samples, 0.06%)</title><rect x="45.0969%" y="1013" width="0.0605%" height="15" fill="rgb(237,90,39)" fg:x="745" fg:w="1"/><text x="45.3469%" y="1023.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.06%)</title><rect x="45.1574%" y="1237" width="0.0605%" height="15" fill="rgb(230,77,10)" fg:x="746" fg:w="1"/><text x="45.4074%" y="1247.50"></text></g><g><title>memset@plt (1 samples, 0.06%)</title><rect x="45.1574%" y="1221" width="0.0605%" height="15" fill="rgb(241,27,30)" fg:x="746" fg:w="1"/><text x="45.4074%" y="1231.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.06%)</title><rect x="45.2179%" y="1237" width="0.0605%" height="15" fill="rgb(238,16,53)" fg:x="747" fg:w="1"/><text x="45.4679%" y="1247.50"></text></g><g><title>BIO_get_data@plt (1 samples, 0.06%)</title><rect x="45.2179%" y="1221" width="0.0605%" height="15" fill="rgb(235,118,50)" fg:x="747" fg:w="1"/><text x="45.4679%" y="1231.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (3 samples, 0.18%)</title><rect x="45.2785%" y="1013" width="0.1816%" height="15" fill="rgb(243,169,33)" fg:x="748" fg:w="3"/><text x="45.5285%" y="1023.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (3 samples, 0.18%)</title><rect x="45.2785%" y="997" width="0.1816%" height="15" fill="rgb(253,188,5)" fg:x="748" fg:w="3"/><text x="45.5285%" y="1007.50"></text></g><g><title>cursor_get (3 samples, 0.18%)</title><rect x="45.2785%" y="981" width="0.1816%" height="15" fill="rgb(238,62,13)" fg:x="748" fg:w="3"/><text x="45.5285%" y="991.50"></text></g><g><title>cursor_set (3 samples, 0.18%)</title><rect x="45.2785%" y="965" width="0.1816%" height="15" fill="rgb(233,136,1)" fg:x="748" fg:w="3"/><text x="45.5285%" y="975.50"></text></g><g><title>page_search_root (3 samples, 0.18%)</title><rect x="45.2785%" y="949" width="0.1816%" height="15" fill="rgb(251,173,43)" fg:x="748" fg:w="3"/><text x="45.5285%" y="959.50"></text></g><g><title>page_get_three (3 samples, 0.18%)</title><rect x="45.2785%" y="933" width="0.1816%" height="15" fill="rgb(212,228,35)" fg:x="748" fg:w="3"/><text x="45.5285%" y="943.50"></text></g><g><title>el0t_64_sync_handler (2 samples, 0.12%)</title><rect x="45.3390%" y="917" width="0.1211%" height="15" fill="rgb(232,35,33)" fg:x="749" fg:w="2"/><text x="45.5890%" y="927.50"></text></g><g><title>el0_da (2 samples, 0.12%)</title><rect x="45.3390%" y="901" width="0.1211%" height="15" fill="rgb(222,99,46)" fg:x="749" fg:w="2"/><text x="45.5890%" y="911.50"></text></g><g><title>do_mem_abort (2 samples, 0.12%)</title><rect x="45.3390%" y="885" width="0.1211%" height="15" fill="rgb(239,157,43)" fg:x="749" fg:w="2"/><text x="45.5890%" y="895.50"></text></g><g><title>do_translation_fault (2 samples, 0.12%)</title><rect x="45.3390%" y="869" width="0.1211%" height="15" fill="rgb(237,78,44)" fg:x="749" fg:w="2"/><text x="45.5890%" y="879.50"></text></g><g><title>do_page_fault (2 samples, 0.12%)</title><rect x="45.3390%" y="853" width="0.1211%" height="15" fill="rgb(206,63,28)" fg:x="749" fg:w="2"/><text x="45.5890%" y="863.50"></text></g><g><title>handle_mm_fault (2 samples, 0.12%)</title><rect x="45.3390%" y="837" width="0.1211%" height="15" fill="rgb(247,31,49)" fg:x="749" fg:w="2"/><text x="45.5890%" y="847.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.12%)</title><rect x="45.3390%" y="821" width="0.1211%" height="15" fill="rgb(254,123,40)" fg:x="749" fg:w="2"/><text x="45.5890%" y="831.50"></text></g><g><title>handle_pte_fault (2 samples, 0.12%)</title><rect x="45.3390%" y="805" width="0.1211%" height="15" fill="rgb(225,148,24)" fg:x="749" fg:w="2"/><text x="45.5890%" y="815.50"></text></g><g><title>do_fault (2 samples, 0.12%)</title><rect x="45.3390%" y="789" width="0.1211%" height="15" fill="rgb(236,204,42)" fg:x="749" fg:w="2"/><text x="45.5890%" y="799.50"></text></g><g><title>do_read_fault (2 samples, 0.12%)</title><rect x="45.3390%" y="773" width="0.1211%" height="15" fill="rgb(241,58,29)" fg:x="749" fg:w="2"/><text x="45.5890%" y="783.50"></text></g><g><title>xfs_filemap_map_pages (2 samples, 0.12%)</title><rect x="45.3390%" y="757" width="0.1211%" height="15" fill="rgb(225,181,35)" fg:x="749" fg:w="2"/><text x="45.5890%" y="767.50"></text></g><g><title>filemap_map_pages (2 samples, 0.12%)</title><rect x="45.3390%" y="741" width="0.1211%" height="15" fill="rgb(240,96,12)" fg:x="749" fg:w="2"/><text x="45.5890%" y="751.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="45.3995%" y="725" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="750" fg:w="1"/><text x="45.6495%" y="735.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (4 samples, 0.24%)</title><rect x="45.2785%" y="1093" width="0.2421%" height="15" fill="rgb(240,86,32)" fg:x="748" fg:w="4"/><text x="45.5285%" y="1103.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (4 samples, 0.24%)</title><rect x="45.2785%" y="1077" width="0.2421%" height="15" fill="rgb(250,133,8)" fg:x="748" fg:w="4"/><text x="45.5285%" y="1087.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (4 samples, 0.24%)</title><rect x="45.2785%" y="1061" width="0.2421%" height="15" fill="rgb(215,64,41)" fg:x="748" fg:w="4"/><text x="45.5285%" y="1071.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (4 samples, 0.24%)</title><rect x="45.2785%" y="1045" width="0.2421%" height="15" fill="rgb(253,194,2)" fg:x="748" fg:w="4"/><text x="45.5285%" y="1055.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (4 samples, 0.24%)</title><rect x="45.2785%" y="1029" width="0.2421%" height="15" fill="rgb(207,143,46)" fg:x="748" fg:w="4"/><text x="45.5285%" y="1039.50"></text></g><g><title>sucds::elias_fano::EliasFano::enable_rank (1 samples, 0.06%)</title><rect x="45.4600%" y="1013" width="0.0605%" height="15" fill="rgb(230,113,53)" fg:x="751" fg:w="1"/><text x="45.7100%" y="1023.50"></text></g><g><title>sucds::darray::DArrayIndex::build (1 samples, 0.06%)</title><rect x="45.4600%" y="997" width="0.0605%" height="15" fill="rgb(224,166,54)" fg:x="751" fg:w="1"/><text x="45.7100%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="45.4600%" y="981" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="751" fg:w="1"/><text x="45.7100%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="45.4600%" y="965" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="751" fg:w="1"/><text x="45.7100%" y="975.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="45.4600%" y="949" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="751" fg:w="1"/><text x="45.7100%" y="959.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="45.4600%" y="933" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="751" fg:w="1"/><text x="45.7100%" y="943.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="45.4600%" y="917" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="751" fg:w="1"/><text x="45.7100%" y="927.50"></text></g><g><title>revm_interpreter::instructions::bitwise::slt (1 samples, 0.06%)</title><rect x="45.8838%" y="997" width="0.0605%" height="15" fill="rgb(226,85,33)" fg:x="758" fg:w="1"/><text x="46.1338%" y="1007.50"></text></g><g><title>revm_interpreter::instructions::control::jump (1 samples, 0.06%)</title><rect x="45.9443%" y="997" width="0.0605%" height="15" fill="rgb(211,99,1)" fg:x="759" fg:w="1"/><text x="46.1943%" y="1007.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.79%)</title><rect x="45.2785%" y="1237" width="0.7869%" height="15" fill="rgb(208,157,13)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1247.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (13 samples, 0.79%)</title><rect x="45.2785%" y="1221" width="0.7869%" height="15" fill="rgb(212,174,39)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1231.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (13 samples, 0.79%)</title><rect x="45.2785%" y="1205" width="0.7869%" height="15" fill="rgb(243,177,20)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1215.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (13 samples, 0.79%)</title><rect x="45.2785%" y="1189" width="0.7869%" height="15" fill="rgb(244,101,36)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1199.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (13 samples, 0.79%)</title><rect x="45.2785%" y="1173" width="0.7869%" height="15" fill="rgb(223,3,11)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1183.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (13 samples, 0.79%)</title><rect x="45.2785%" y="1157" width="0.7869%" height="15" fill="rgb(248,177,53)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1167.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (13 samples, 0.79%)</title><rect x="45.2785%" y="1141" width="0.7869%" height="15" fill="rgb(206,114,36)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1151.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (13 samples, 0.79%)</title><rect x="45.2785%" y="1125" width="0.7869%" height="15" fill="rgb(232,116,6)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1135.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (13 samples, 0.79%)</title><rect x="45.2785%" y="1109" width="0.7869%" height="15" fill="rgb(236,181,49)" fg:x="748" fg:w="13"/><text x="45.5285%" y="1119.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (9 samples, 0.54%)</title><rect x="45.5206%" y="1093" width="0.5448%" height="15" fill="rgb(222,82,5)" fg:x="752" fg:w="9"/><text x="45.7706%" y="1103.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (9 samples, 0.54%)</title><rect x="45.5206%" y="1077" width="0.5448%" height="15" fill="rgb(232,116,6)" fg:x="752" fg:w="9"/><text x="45.7706%" y="1087.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (9 samples, 0.54%)</title><rect x="45.5206%" y="1061" width="0.5448%" height="15" fill="rgb(236,181,49)" fg:x="752" fg:w="9"/><text x="45.7706%" y="1071.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (9 samples, 0.54%)</title><rect x="45.5206%" y="1045" width="0.5448%" height="15" fill="rgb(222,82,5)" fg:x="752" fg:w="9"/><text x="45.7706%" y="1055.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (9 samples, 0.54%)</title><rect x="45.5206%" y="1029" width="0.5448%" height="15" fill="rgb(232,116,6)" fg:x="752" fg:w="9"/><text x="45.7706%" y="1039.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (9 samples, 0.54%)</title><rect x="45.5206%" y="1013" width="0.5448%" height="15" fill="rgb(236,181,49)" fg:x="752" fg:w="9"/><text x="45.7706%" y="1023.50"></text></g><g><title>revm_interpreter::instructions::system::returndatacopy (1 samples, 0.06%)</title><rect x="46.0048%" y="997" width="0.0605%" height="15" fill="rgb(225,136,35)" fg:x="760" fg:w="1"/><text x="46.2548%" y="1007.50"></text></g><g><title>[libcrypto.so.3.0.8] (19 samples, 1.15%)</title><rect x="46.0654%" y="1221" width="1.1501%" height="15" fill="rgb(222,124,3)" fg:x="761" fg:w="19"/><text x="46.3154%" y="1231.50"></text></g><g><title>[libcrypto.so.3.0.8] (19 samples, 1.15%)</title><rect x="46.0654%" y="1205" width="1.1501%" height="15" fill="rgb(222,124,3)" fg:x="761" fg:w="19"/><text x="46.3154%" y="1215.50"></text></g><g><title>[libcrypto.so.3.0.8] (20 samples, 1.21%)</title><rect x="46.0654%" y="1237" width="1.2107%" height="15" fill="rgb(222,124,3)" fg:x="761" fg:w="20"/><text x="46.3154%" y="1247.50"></text></g><g><title>__errno_location@plt (1 samples, 0.06%)</title><rect x="47.2155%" y="1221" width="0.0605%" height="15" fill="rgb(233,86,42)" fg:x="780" fg:w="1"/><text x="47.4655%" y="1231.50"></text></g><g><title>BIO_ctrl@plt (1 samples, 0.06%)</title><rect x="47.2760%" y="1221" width="0.0605%" height="15" fill="rgb(246,190,46)" fg:x="781" fg:w="1"/><text x="47.5260%" y="1231.50"></text></g><g><title>CRYPTO_malloc@plt (1 samples, 0.06%)</title><rect x="47.3366%" y="1221" width="0.0605%" height="15" fill="rgb(239,38,29)" fg:x="782" fg:w="1"/><text x="47.5866%" y="1231.50"></text></g><g><title>CRYPTO_zalloc@plt (1 samples, 0.06%)</title><rect x="47.3971%" y="1221" width="0.0605%" height="15" fill="rgb(233,12,19)" fg:x="783" fg:w="1"/><text x="47.6471%" y="1231.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl@plt (1 samples, 0.06%)</title><rect x="47.4576%" y="1221" width="0.0605%" height="15" fill="rgb(210,130,36)" fg:x="784" fg:w="1"/><text x="47.7076%" y="1231.50"></text></g><g><title>[libssl.so.3.0.8] (5 samples, 0.30%)</title><rect x="47.2760%" y="1237" width="0.3027%" height="15" fill="rgb(243,173,28)" fg:x="781" fg:w="5"/><text x="47.5260%" y="1247.50"></text></g><g><title>EVP_CIPHER_CTX_get0_cipher@plt (1 samples, 0.06%)</title><rect x="47.5182%" y="1221" width="0.0605%" height="15" fill="rgb(221,2,11)" fg:x="785" fg:w="1"/><text x="47.7682%" y="1231.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (1 samples, 0.06%)</title><rect x="47.5787%" y="1221" width="0.0605%" height="15" fill="rgb(209,69,36)" fg:x="786" fg:w="1"/><text x="47.8287%" y="1231.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="47.5787%" y="1205" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="786" fg:w="1"/><text x="47.8287%" y="1215.50"></text></g><g><title>SSL_get_error (1 samples, 0.06%)</title><rect x="47.6392%" y="1205" width="0.0605%" height="15" fill="rgb(221,63,27)" fg:x="787" fg:w="1"/><text x="47.8892%" y="1215.50"></text></g><g><title>ERR_peek_error@plt (1 samples, 0.06%)</title><rect x="47.6392%" y="1189" width="0.0605%" height="15" fill="rgb(241,73,36)" fg:x="787" fg:w="1"/><text x="47.8892%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.12%)</title><rect x="47.6392%" y="1221" width="0.1211%" height="15" fill="rgb(227,28,50)" fg:x="787" fg:w="2"/><text x="47.8892%" y="1231.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.06%)</title><rect x="47.6998%" y="1205" width="0.0605%" height="15" fill="rgb(243,173,28)" fg:x="788" fg:w="1"/><text x="47.9498%" y="1215.50"></text></g><g><title>__errno_location@plt (1 samples, 0.06%)</title><rect x="47.6998%" y="1189" width="0.0605%" height="15" fill="rgb(233,86,42)" fg:x="788" fg:w="1"/><text x="47.9498%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.30%)</title><rect x="47.5787%" y="1237" width="0.3027%" height="15" fill="rgb(227,28,50)" fg:x="786" fg:w="5"/><text x="47.8287%" y="1247.50"></text></g><g><title>__GI___clock_gettime (2 samples, 0.12%)</title><rect x="47.7603%" y="1221" width="0.1211%" height="15" fill="rgb(231,211,11)" fg:x="789" fg:w="2"/><text x="48.0103%" y="1231.50"></text></g><g><title>__kernel_clock_gettime (2 samples, 0.12%)</title><rect x="47.7603%" y="1205" width="0.1211%" height="15" fill="rgb(249,105,20)" fg:x="789" fg:w="2"/><text x="48.0103%" y="1215.50"></text></g><g><title>[[vdso]] (1 samples, 0.06%)</title><rect x="47.8208%" y="1189" width="0.0605%" height="15" fill="rgb(229,169,17)" fg:x="790" fg:w="1"/><text x="48.0708%" y="1199.50"></text></g><g><title>__GI___clock_gettime (2 samples, 0.12%)</title><rect x="47.8814%" y="1237" width="0.1211%" height="15" fill="rgb(231,211,11)" fg:x="791" fg:w="2"/><text x="48.1314%" y="1247.50"></text></g><g><title>__kernel_clock_gettime (2 samples, 0.12%)</title><rect x="47.8814%" y="1221" width="0.1211%" height="15" fill="rgb(249,105,20)" fg:x="791" fg:w="2"/><text x="48.1314%" y="1231.50"></text></g><g><title>[[vdso]] (2 samples, 0.12%)</title><rect x="47.8814%" y="1205" width="0.1211%" height="15" fill="rgb(229,169,17)" fg:x="791" fg:w="2"/><text x="48.1314%" y="1215.50"></text></g><g><title>__errno_location@plt (1 samples, 0.06%)</title><rect x="48.0024%" y="1237" width="0.0605%" height="15" fill="rgb(233,86,42)" fg:x="793" fg:w="1"/><text x="48.2524%" y="1247.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="48.0630%" y="981" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="794" fg:w="1"/><text x="48.3130%" y="991.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="48.0630%" y="965" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="794" fg:w="1"/><text x="48.3130%" y="975.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="48.0630%" y="949" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="794" fg:w="1"/><text x="48.3130%" y="959.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="48.0630%" y="933" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="794" fg:w="1"/><text x="48.3130%" y="943.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="48.0630%" y="917" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="794" fg:w="1"/><text x="48.3130%" y="927.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::step_end (1 samples, 0.06%)</title><rect x="48.0630%" y="901" width="0.0605%" height="15" fill="rgb(253,106,23)" fg:x="794" fg:w="1"/><text x="48.3130%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.12%)</title><rect x="48.0630%" y="1237" width="0.1211%" height="15" fill="rgb(218,104,40)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1247.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.12%)</title><rect x="48.0630%" y="1221" width="0.1211%" height="15" fill="rgb(210,88,34)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1231.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (2 samples, 0.12%)</title><rect x="48.0630%" y="1205" width="0.1211%" height="15" fill="rgb(249,26,43)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.12%)</title><rect x="48.0630%" y="1189" width="0.1211%" height="15" fill="rgb(244,44,31)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.12%)</title><rect x="48.0630%" y="1173" width="0.1211%" height="15" fill="rgb(227,84,42)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.12%)</title><rect x="48.0630%" y="1157" width="0.1211%" height="15" fill="rgb(231,124,40)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="48.0630%" y="1141" width="0.1211%" height="15" fill="rgb(228,76,43)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1151.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2 samples, 0.12%)</title><rect x="48.0630%" y="1125" width="0.1211%" height="15" fill="rgb(250,218,41)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1135.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.12%)</title><rect x="48.0630%" y="1109" width="0.1211%" height="15" fill="rgb(238,208,28)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1119.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="48.0630%" y="1093" width="0.1211%" height="15" fill="rgb(208,157,13)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1103.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="48.0630%" y="1077" width="0.1211%" height="15" fill="rgb(212,174,39)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1087.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (2 samples, 0.12%)</title><rect x="48.0630%" y="1061" width="0.1211%" height="15" fill="rgb(243,177,20)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1071.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (2 samples, 0.12%)</title><rect x="48.0630%" y="1045" width="0.1211%" height="15" fill="rgb(244,101,36)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1055.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (2 samples, 0.12%)</title><rect x="48.0630%" y="1029" width="0.1211%" height="15" fill="rgb(223,3,11)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1039.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (2 samples, 0.12%)</title><rect x="48.0630%" y="1013" width="0.1211%" height="15" fill="rgb(248,177,53)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1023.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (2 samples, 0.12%)</title><rect x="48.0630%" y="997" width="0.1211%" height="15" fill="rgb(206,114,36)" fg:x="794" fg:w="2"/><text x="48.3130%" y="1007.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="48.1235%" y="981" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="795" fg:w="1"/><text x="48.3735%" y="991.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="48.1235%" y="965" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="795" fg:w="1"/><text x="48.3735%" y="975.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="48.1235%" y="949" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="795" fg:w="1"/><text x="48.3735%" y="959.50"></text></g><g><title>sucds::elias_fano::EliasFano::enable_rank (1 samples, 0.06%)</title><rect x="48.1235%" y="933" width="0.0605%" height="15" fill="rgb(230,113,53)" fg:x="795" fg:w="1"/><text x="48.3735%" y="943.50"></text></g><g><title>sucds::darray::DArrayIndex::build (1 samples, 0.06%)</title><rect x="48.1235%" y="917" width="0.0605%" height="15" fill="rgb(224,166,54)" fg:x="795" fg:w="1"/><text x="48.3735%" y="927.50"></text></g><g><title>asm_exit_to_user_mode (1 samples, 0.06%)</title><rect x="48.1840%" y="1205" width="0.0605%" height="15" fill="rgb(250,201,26)" fg:x="796" fg:w="1"/><text x="48.4340%" y="1215.50"></text></g><g><title>fpsimd_restore_current_state (1 samples, 0.06%)</title><rect x="48.1840%" y="1189" width="0.0605%" height="15" fill="rgb(218,94,51)" fg:x="796" fg:w="1"/><text x="48.4340%" y="1199.50"></text></g><g><title>create_thread (7 samples, 0.42%)</title><rect x="48.1840%" y="1237" width="0.4237%" height="15" fill="rgb(238,226,5)" fg:x="796" fg:w="7"/><text x="48.4340%" y="1247.50"></text></g><g><title>__GI___clone (7 samples, 0.42%)</title><rect x="48.1840%" y="1221" width="0.4237%" height="15" fill="rgb(233,28,32)" fg:x="796" fg:w="7"/><text x="48.4340%" y="1231.50"></text></g><g><title>schedule_tail (6 samples, 0.36%)</title><rect x="48.2446%" y="1205" width="0.3632%" height="15" fill="rgb(215,144,34)" fg:x="797" fg:w="6"/><text x="48.4946%" y="1215.50"></text></g><g><title>arch_local_irq_enable (6 samples, 0.36%)</title><rect x="48.2446%" y="1189" width="0.3632%" height="15" fill="rgb(232,216,33)" fg:x="797" fg:w="6"/><text x="48.4946%" y="1199.50"></text></g><g><title>down_read (6 samples, 0.36%)</title><rect x="48.6683%" y="1157" width="0.3632%" height="15" fill="rgb(208,214,33)" fg:x="804" fg:w="6"/><text x="48.9183%" y="1167.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.36%)</title><rect x="48.6683%" y="1141" width="0.3632%" height="15" fill="rgb(234,34,4)" fg:x="804" fg:w="6"/><text x="48.9183%" y="1151.50"></text></g><g><title>schedule_preempt_disabled (6 samples, 0.36%)</title><rect x="48.6683%" y="1125" width="0.3632%" height="15" fill="rgb(241,42,14)" fg:x="804" fg:w="6"/><text x="48.9183%" y="1135.50"></text></g><g><title>schedule (6 samples, 0.36%)</title><rect x="48.6683%" y="1109" width="0.3632%" height="15" fill="rgb(213,215,35)" fg:x="804" fg:w="6"/><text x="48.9183%" y="1119.50"></text></g><g><title>__schedule (6 samples, 0.36%)</title><rect x="48.6683%" y="1093" width="0.3632%" height="15" fill="rgb(207,40,26)" fg:x="804" fg:w="6"/><text x="48.9183%" y="1103.50"></text></g><g><title>arch_local_irq_enable (6 samples, 0.36%)</title><rect x="48.6683%" y="1077" width="0.3632%" height="15" fill="rgb(232,216,33)" fg:x="804" fg:w="6"/><text x="48.9183%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (8 samples, 0.48%)</title><rect x="48.6077%" y="1237" width="0.4843%" height="15" fill="rgb(232,35,33)" fg:x="803" fg:w="8"/><text x="48.8577%" y="1247.50"></text></g><g><title>el0_da (8 samples, 0.48%)</title><rect x="48.6077%" y="1221" width="0.4843%" height="15" fill="rgb(222,99,46)" fg:x="803" fg:w="8"/><text x="48.8577%" y="1231.50"></text></g><g><title>do_mem_abort (8 samples, 0.48%)</title><rect x="48.6077%" y="1205" width="0.4843%" height="15" fill="rgb(239,157,43)" fg:x="803" fg:w="8"/><text x="48.8577%" y="1215.50"></text></g><g><title>do_translation_fault (8 samples, 0.48%)</title><rect x="48.6077%" y="1189" width="0.4843%" height="15" fill="rgb(237,78,44)" fg:x="803" fg:w="8"/><text x="48.8577%" y="1199.50"></text></g><g><title>do_page_fault (7 samples, 0.42%)</title><rect x="48.6683%" y="1173" width="0.4237%" height="15" fill="rgb(206,63,28)" fg:x="804" fg:w="7"/><text x="48.9183%" y="1183.50"></text></g><g><title>find_vma (1 samples, 0.06%)</title><rect x="49.0315%" y="1157" width="0.0605%" height="15" fill="rgb(227,147,34)" fg:x="810" fg:w="1"/><text x="49.2815%" y="1167.50"></text></g><g><title>mtree_range_walk (1 samples, 0.06%)</title><rect x="49.0315%" y="1141" width="0.0605%" height="15" fill="rgb(252,125,21)" fg:x="810" fg:w="1"/><text x="49.2815%" y="1151.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (1 samples, 0.06%)</title><rect x="49.0920%" y="1237" width="0.0605%" height="15" fill="rgb(229,98,16)" fg:x="811" fg:w="1"/><text x="49.3420%" y="1247.50"></text></g><g><title>memcpy@plt (1 samples, 0.06%)</title><rect x="49.0920%" y="1221" width="0.0605%" height="15" fill="rgb(221,70,25)" fg:x="811" fg:w="1"/><text x="49.3420%" y="1231.50"></text></g><g><title>memmove@plt (2 samples, 0.12%)</title><rect x="49.1525%" y="1237" width="0.1211%" height="15" fill="rgb(233,53,34)" fg:x="812" fg:w="2"/><text x="49.4025%" y="1247.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::code (1 samples, 0.06%)</title><rect x="49.2736%" y="1141" width="0.0605%" height="15" fill="rgb(231,80,48)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1151.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="49.2736%" y="1125" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1135.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="49.2736%" y="1109" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1119.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="49.2736%" y="1093" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1103.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="49.2736%" y="1077" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1087.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="49.2736%" y="1061" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1071.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="49.2736%" y="1045" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1055.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="49.2736%" y="1029" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1039.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="49.2736%" y="1013" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1023.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="49.2736%" y="997" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="814" fg:w="1"/><text x="49.5236%" y="1007.50"></text></g><g><title>node_read_bigdata (1 samples, 0.06%)</title><rect x="49.2736%" y="981" width="0.0605%" height="15" fill="rgb(238,103,6)" fg:x="814" fg:w="1"/><text x="49.5236%" y="991.50"></text></g><g><title>page_get_large (1 samples, 0.06%)</title><rect x="49.2736%" y="965" width="0.0605%" height="15" fill="rgb(224,145,53)" fg:x="814" fg:w="1"/><text x="49.5236%" y="975.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="49.2736%" y="949" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="814" fg:w="1"/><text x="49.5236%" y="959.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="49.2736%" y="933" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="814" fg:w="1"/><text x="49.5236%" y="943.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="49.2736%" y="917" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="814" fg:w="1"/><text x="49.5236%" y="927.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="49.2736%" y="901" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="814" fg:w="1"/><text x="49.5236%" y="911.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="49.2736%" y="885" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="814" fg:w="1"/><text x="49.5236%" y="895.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="49.2736%" y="869" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="814" fg:w="1"/><text x="49.5236%" y="879.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="49.2736%" y="853" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="814" fg:w="1"/><text x="49.5236%" y="863.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="49.2736%" y="837" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="814" fg:w="1"/><text x="49.5236%" y="847.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="49.2736%" y="821" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="814" fg:w="1"/><text x="49.5236%" y="831.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="49.2736%" y="805" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="814" fg:w="1"/><text x="49.5236%" y="815.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="49.2736%" y="789" width="0.0605%" height="15" fill="rgb(232,180,1)" fg:x="814" fg:w="1"/><text x="49.5236%" y="799.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="49.2736%" y="773" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="814" fg:w="1"/><text x="49.5236%" y="783.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.06%)</title><rect x="49.2736%" y="757" width="0.0605%" height="15" fill="rgb(244,209,18)" fg:x="814" fg:w="1"/><text x="49.5236%" y="767.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="49.2736%" y="741" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="814" fg:w="1"/><text x="49.5236%" y="751.50"></text></g><g><title>&lt;reth_db::tables::models::storage_sharded_key::StorageShardedKey as reth_db::abstraction::table::Encode&gt;::encode (1 samples, 0.06%)</title><rect x="49.3341%" y="1029" width="0.0605%" height="15" fill="rgb(252,2,40)" fg:x="815" fg:w="1"/><text x="49.5841%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="49.3341%" y="1013" width="0.0605%" height="15" fill="rgb(249,2,22)" fg:x="815" fg:w="1"/><text x="49.5841%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="49.3341%" y="997" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="815" fg:w="1"/><text x="49.5841%" y="1007.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="49.3341%" y="981" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="815" fg:w="1"/><text x="49.5841%" y="991.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="49.3947%" y="949" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="816" fg:w="1"/><text x="49.6447%" y="959.50"></text></g><g><title>cmp_lexical (1 samples, 0.06%)</title><rect x="49.3947%" y="933" width="0.0605%" height="15" fill="rgb(230,73,15)" fg:x="816" fg:w="1"/><text x="49.6447%" y="943.50"></text></g><g><title>__pmd_alloc (1 samples, 0.06%)</title><rect x="49.5157%" y="821" width="0.0605%" height="15" fill="rgb(206,41,46)" fg:x="818" fg:w="1"/><text x="49.7657%" y="831.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="49.5157%" y="805" width="0.0605%" height="15" fill="rgb(232,180,1)" fg:x="818" fg:w="1"/><text x="49.7657%" y="815.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="49.5157%" y="789" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="818" fg:w="1"/><text x="49.7657%" y="799.50"></text></g><g><title>__pi_clear_page (1 samples, 0.06%)</title><rect x="49.5157%" y="773" width="0.0605%" height="15" fill="rgb(227,148,36)" fg:x="818" fg:w="1"/><text x="49.7657%" y="783.50"></text></g><g><title>__do_fault (1 samples, 0.06%)</title><rect x="49.5763%" y="773" width="0.0605%" height="15" fill="rgb(232,18,38)" fg:x="819" fg:w="1"/><text x="49.8263%" y="783.50"></text></g><g><title>xfs_filemap_fault (1 samples, 0.06%)</title><rect x="49.5763%" y="757" width="0.0605%" height="15" fill="rgb(230,143,35)" fg:x="819" fg:w="1"/><text x="49.8263%" y="767.50"></text></g><g><title>filemap_fault (1 samples, 0.06%)</title><rect x="49.5763%" y="741" width="0.0605%" height="15" fill="rgb(254,137,16)" fg:x="819" fg:w="1"/><text x="49.8263%" y="751.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.06%)</title><rect x="49.5763%" y="725" width="0.0605%" height="15" fill="rgb(240,58,36)" fg:x="819" fg:w="1"/><text x="49.8263%" y="735.50"></text></g><g><title>filemap_add_folio (1 samples, 0.06%)</title><rect x="49.5763%" y="709" width="0.0605%" height="15" fill="rgb(223,49,34)" fg:x="819" fg:w="1"/><text x="49.8263%" y="719.50"></text></g><g><title>folio_add_lru (1 samples, 0.06%)</title><rect x="49.5763%" y="693" width="0.0605%" height="15" fill="rgb(242,171,7)" fg:x="819" fg:w="1"/><text x="49.8263%" y="703.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.06%)</title><rect x="49.5763%" y="677" width="0.0605%" height="15" fill="rgb(228,174,4)" fg:x="819" fg:w="1"/><text x="49.8263%" y="687.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (6 samples, 0.36%)</title><rect x="49.3341%" y="1045" width="0.3632%" height="15" fill="rgb(228,63,22)" fg:x="815" fg:w="6"/><text x="49.5841%" y="1055.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (5 samples, 0.30%)</title><rect x="49.3947%" y="1029" width="0.3027%" height="15" fill="rgb(247,141,48)" fg:x="816" fg:w="5"/><text x="49.6447%" y="1039.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (5 samples, 0.30%)</title><rect x="49.3947%" y="1013" width="0.3027%" height="15" fill="rgb(253,188,5)" fg:x="816" fg:w="5"/><text x="49.6447%" y="1023.50"></text></g><g><title>cursor_get (5 samples, 0.30%)</title><rect x="49.3947%" y="997" width="0.3027%" height="15" fill="rgb(238,62,13)" fg:x="816" fg:w="5"/><text x="49.6447%" y="1007.50"></text></g><g><title>cursor_set (5 samples, 0.30%)</title><rect x="49.3947%" y="981" width="0.3027%" height="15" fill="rgb(233,136,1)" fg:x="816" fg:w="5"/><text x="49.6447%" y="991.50"></text></g><g><title>page_search_root (5 samples, 0.30%)</title><rect x="49.3947%" y="965" width="0.3027%" height="15" fill="rgb(251,173,43)" fg:x="816" fg:w="5"/><text x="49.6447%" y="975.50"></text></g><g><title>page_get_three (4 samples, 0.24%)</title><rect x="49.4552%" y="949" width="0.2421%" height="15" fill="rgb(212,228,35)" fg:x="817" fg:w="4"/><text x="49.7052%" y="959.50"></text></g><g><title>el0t_64_sync_handler (4 samples, 0.24%)</title><rect x="49.4552%" y="933" width="0.2421%" height="15" fill="rgb(232,35,33)" fg:x="817" fg:w="4"/><text x="49.7052%" y="943.50"></text></g><g><title>el0_da (4 samples, 0.24%)</title><rect x="49.4552%" y="917" width="0.2421%" height="15" fill="rgb(222,99,46)" fg:x="817" fg:w="4"/><text x="49.7052%" y="927.50"></text></g><g><title>do_mem_abort (4 samples, 0.24%)</title><rect x="49.4552%" y="901" width="0.2421%" height="15" fill="rgb(239,157,43)" fg:x="817" fg:w="4"/><text x="49.7052%" y="911.50"></text></g><g><title>do_translation_fault (4 samples, 0.24%)</title><rect x="49.4552%" y="885" width="0.2421%" height="15" fill="rgb(237,78,44)" fg:x="817" fg:w="4"/><text x="49.7052%" y="895.50"></text></g><g><title>do_page_fault (4 samples, 0.24%)</title><rect x="49.4552%" y="869" width="0.2421%" height="15" fill="rgb(206,63,28)" fg:x="817" fg:w="4"/><text x="49.7052%" y="879.50"></text></g><g><title>handle_mm_fault (4 samples, 0.24%)</title><rect x="49.4552%" y="853" width="0.2421%" height="15" fill="rgb(247,31,49)" fg:x="817" fg:w="4"/><text x="49.7052%" y="863.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.18%)</title><rect x="49.5157%" y="837" width="0.1816%" height="15" fill="rgb(254,123,40)" fg:x="818" fg:w="3"/><text x="49.7657%" y="847.50"></text></g><g><title>handle_pte_fault (2 samples, 0.12%)</title><rect x="49.5763%" y="821" width="0.1211%" height="15" fill="rgb(225,148,24)" fg:x="819" fg:w="2"/><text x="49.8263%" y="831.50"></text></g><g><title>do_fault (2 samples, 0.12%)</title><rect x="49.5763%" y="805" width="0.1211%" height="15" fill="rgb(236,204,42)" fg:x="819" fg:w="2"/><text x="49.8263%" y="815.50"></text></g><g><title>do_read_fault (2 samples, 0.12%)</title><rect x="49.5763%" y="789" width="0.1211%" height="15" fill="rgb(241,58,29)" fg:x="819" fg:w="2"/><text x="49.8263%" y="799.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="49.6368%" y="773" width="0.0605%" height="15" fill="rgb(232,180,1)" fg:x="820" fg:w="1"/><text x="49.8868%" y="783.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="49.6368%" y="757" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="820" fg:w="1"/><text x="49.8868%" y="767.50"></text></g><g><title>__pi_clear_page (1 samples, 0.06%)</title><rect x="49.6368%" y="741" width="0.0605%" height="15" fill="rgb(227,148,36)" fg:x="820" fg:w="1"/><text x="49.8868%" y="751.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (7 samples, 0.42%)</title><rect x="49.3341%" y="1125" width="0.4237%" height="15" fill="rgb(240,86,32)" fg:x="815" fg:w="7"/><text x="49.5841%" y="1135.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (7 samples, 0.42%)</title><rect x="49.3341%" y="1109" width="0.4237%" height="15" fill="rgb(250,133,8)" fg:x="815" fg:w="7"/><text x="49.5841%" y="1119.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (7 samples, 0.42%)</title><rect x="49.3341%" y="1093" width="0.4237%" height="15" fill="rgb(215,64,41)" fg:x="815" fg:w="7"/><text x="49.5841%" y="1103.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (7 samples, 0.42%)</title><rect x="49.3341%" y="1077" width="0.4237%" height="15" fill="rgb(253,194,2)" fg:x="815" fg:w="7"/><text x="49.5841%" y="1087.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (7 samples, 0.42%)</title><rect x="49.3341%" y="1061" width="0.4237%" height="15" fill="rgb(207,143,46)" fg:x="815" fg:w="7"/><text x="49.5841%" y="1071.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (1 samples, 0.06%)</title><rect x="49.6973%" y="1045" width="0.0605%" height="15" fill="rgb(243,169,33)" fg:x="821" fg:w="1"/><text x="49.9473%" y="1055.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="49.6973%" y="1029" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="821" fg:w="1"/><text x="49.9473%" y="1039.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="49.6973%" y="1013" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="821" fg:w="1"/><text x="49.9473%" y="1023.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="49.6973%" y="997" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="821" fg:w="1"/><text x="49.9473%" y="1007.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="49.6973%" y="981" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="821" fg:w="1"/><text x="49.9473%" y="991.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="49.6973%" y="965" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="821" fg:w="1"/><text x="49.9473%" y="975.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="49.6973%" y="949" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="821" fg:w="1"/><text x="49.9473%" y="959.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="49.6973%" y="933" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="821" fg:w="1"/><text x="49.9473%" y="943.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="49.6973%" y="917" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="821" fg:w="1"/><text x="49.9473%" y="927.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="49.6973%" y="901" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="821" fg:w="1"/><text x="49.9473%" y="911.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="49.6973%" y="885" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="821" fg:w="1"/><text x="49.9473%" y="895.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="49.6973%" y="869" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="821" fg:w="1"/><text x="49.9473%" y="879.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="49.6973%" y="853" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="821" fg:w="1"/><text x="49.9473%" y="863.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="49.6973%" y="837" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="821" fg:w="1"/><text x="49.9473%" y="847.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="49.6973%" y="821" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="821" fg:w="1"/><text x="49.9473%" y="831.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="49.6973%" y="805" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="821" fg:w="1"/><text x="49.9473%" y="815.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="49.6973%" y="789" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="821" fg:w="1"/><text x="49.9473%" y="799.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="49.6973%" y="773" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="821" fg:w="1"/><text x="49.9473%" y="783.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="49.6973%" y="757" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="821" fg:w="1"/><text x="49.9473%" y="767.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="49.6973%" y="741" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="821" fg:w="1"/><text x="49.9473%" y="751.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::step (1 samples, 0.06%)</title><rect x="49.7579%" y="1029" width="0.0605%" height="15" fill="rgb(238,141,0)" fg:x="822" fg:w="1"/><text x="50.0079%" y="1039.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (10 samples, 0.61%)</title><rect x="49.2736%" y="1157" width="0.6053%" height="15" fill="rgb(232,116,6)" fg:x="814" fg:w="10"/><text x="49.5236%" y="1167.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (9 samples, 0.54%)</title><rect x="49.3341%" y="1141" width="0.5448%" height="15" fill="rgb(236,181,49)" fg:x="815" fg:w="9"/><text x="49.5841%" y="1151.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (2 samples, 0.12%)</title><rect x="49.7579%" y="1125" width="0.1211%" height="15" fill="rgb(222,82,5)" fg:x="822" fg:w="2"/><text x="50.0079%" y="1135.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (2 samples, 0.12%)</title><rect x="49.7579%" y="1109" width="0.1211%" height="15" fill="rgb(232,116,6)" fg:x="822" fg:w="2"/><text x="50.0079%" y="1119.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (2 samples, 0.12%)</title><rect x="49.7579%" y="1093" width="0.1211%" height="15" fill="rgb(236,181,49)" fg:x="822" fg:w="2"/><text x="50.0079%" y="1103.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (2 samples, 0.12%)</title><rect x="49.7579%" y="1077" width="0.1211%" height="15" fill="rgb(222,82,5)" fg:x="822" fg:w="2"/><text x="50.0079%" y="1087.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (2 samples, 0.12%)</title><rect x="49.7579%" y="1061" width="0.1211%" height="15" fill="rgb(232,116,6)" fg:x="822" fg:w="2"/><text x="50.0079%" y="1071.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (2 samples, 0.12%)</title><rect x="49.7579%" y="1045" width="0.1211%" height="15" fill="rgb(236,181,49)" fg:x="822" fg:w="2"/><text x="50.0079%" y="1055.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::step_end (1 samples, 0.06%)</title><rect x="49.8184%" y="1029" width="0.0605%" height="15" fill="rgb(253,106,23)" fg:x="823" fg:w="1"/><text x="50.0684%" y="1039.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::create_inner (1 samples, 0.06%)</title><rect x="49.8789%" y="1157" width="0.0605%" height="15" fill="rgb(206,193,44)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1167.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="49.8789%" y="1141" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1151.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="49.8789%" y="1125" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1135.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="49.8789%" y="1109" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1119.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="49.8789%" y="1093" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1103.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="49.8789%" y="1077" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1087.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="49.8789%" y="1061" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1071.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="49.8789%" y="1045" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1055.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="49.8789%" y="1029" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1039.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="49.8789%" y="1013" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1023.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="49.8789%" y="997" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="824" fg:w="1"/><text x="50.1289%" y="1007.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="49.8789%" y="981" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="824" fg:w="1"/><text x="50.1289%" y="991.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="49.8789%" y="965" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="824" fg:w="1"/><text x="50.1289%" y="975.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="49.8789%" y="949" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="824" fg:w="1"/><text x="50.1289%" y="959.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="49.8789%" y="933" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="824" fg:w="1"/><text x="50.1289%" y="943.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="49.8789%" y="917" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="824" fg:w="1"/><text x="50.1289%" y="927.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="49.8789%" y="901" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="824" fg:w="1"/><text x="50.1289%" y="911.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="49.8789%" y="885" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="824" fg:w="1"/><text x="50.1289%" y="895.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="49.8789%" y="869" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="824" fg:w="1"/><text x="50.1289%" y="879.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="49.8789%" y="853" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="824" fg:w="1"/><text x="50.1289%" y="863.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="49.8789%" y="837" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="824" fg:w="1"/><text x="50.1289%" y="847.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="49.8789%" y="821" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="824" fg:w="1"/><text x="50.1289%" y="831.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="49.8789%" y="805" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="824" fg:w="1"/><text x="50.1289%" y="815.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="49.8789%" y="789" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="824" fg:w="1"/><text x="50.1289%" y="799.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="49.8789%" y="773" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="824" fg:w="1"/><text x="50.1289%" y="783.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (12 samples, 0.73%)</title><rect x="49.2736%" y="1237" width="0.7264%" height="15" fill="rgb(243,177,20)" fg:x="814" fg:w="12"/><text x="49.5236%" y="1247.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (12 samples, 0.73%)</title><rect x="49.2736%" y="1221" width="0.7264%" height="15" fill="rgb(244,101,36)" fg:x="814" fg:w="12"/><text x="49.5236%" y="1231.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (12 samples, 0.73%)</title><rect x="49.2736%" y="1205" width="0.7264%" height="15" fill="rgb(223,3,11)" fg:x="814" fg:w="12"/><text x="49.5236%" y="1215.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (12 samples, 0.73%)</title><rect x="49.2736%" y="1189" width="0.7264%" height="15" fill="rgb(248,177,53)" fg:x="814" fg:w="12"/><text x="49.5236%" y="1199.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (12 samples, 0.73%)</title><rect x="49.2736%" y="1173" width="0.7264%" height="15" fill="rgb(206,114,36)" fg:x="814" fg:w="12"/><text x="49.5236%" y="1183.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::initialization (1 samples, 0.06%)</title><rect x="49.9395%" y="1157" width="0.0605%" height="15" fill="rgb(224,149,29)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1167.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (1 samples, 0.06%)</title><rect x="49.9395%" y="1141" width="0.0605%" height="15" fill="rgb(250,133,8)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1151.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (1 samples, 0.06%)</title><rect x="49.9395%" y="1125" width="0.0605%" height="15" fill="rgb(215,64,41)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1135.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (1 samples, 0.06%)</title><rect x="49.9395%" y="1109" width="0.0605%" height="15" fill="rgb(253,194,2)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1119.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (1 samples, 0.06%)</title><rect x="49.9395%" y="1093" width="0.0605%" height="15" fill="rgb(207,143,46)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1103.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="49.9395%" y="1077" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1087.50"></text></g><g><title>reth_db::tables::utils::decoder (1 samples, 0.06%)</title><rect x="49.9395%" y="1061" width="0.0605%" height="15" fill="rgb(237,90,39)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1071.50"></text></g><g><title>reth_primitives::integer_list::IntegerList::from_bytes (1 samples, 0.06%)</title><rect x="49.9395%" y="1045" width="0.0605%" height="15" fill="rgb(238,143,35)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1055.50"></text></g><g><title>&lt;sucds::elias_fano::EliasFano as sucds::serial::Searial&gt;::deserialize_from (1 samples, 0.06%)</title><rect x="49.9395%" y="1029" width="0.0605%" height="15" fill="rgb(224,226,12)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1039.50"></text></g><g><title>&lt;sucds::bit_vector::BitVector as sucds::serial::Searial&gt;::deserialize_from (1 samples, 0.06%)</title><rect x="49.9395%" y="1013" width="0.0605%" height="15" fill="rgb(254,98,47)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;S&gt; as sucds::serial::Searial&gt;::deserialize_from (1 samples, 0.06%)</title><rect x="49.9395%" y="997" width="0.0605%" height="15" fill="rgb(221,79,23)" fg:x="825" fg:w="1"/><text x="50.1895%" y="1007.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="49.9395%" y="981" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="825" fg:w="1"/><text x="50.1895%" y="991.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (1 samples, 0.06%)</title><rect x="50.0000%" y="1237" width="0.0605%" height="15" fill="rgb(248,177,53)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1247.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (1 samples, 0.06%)</title><rect x="50.0000%" y="1221" width="0.0605%" height="15" fill="rgb(206,114,36)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1231.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.0000%" y="1205" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1215.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.0000%" y="1189" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1199.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="50.0000%" y="1173" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1183.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.0000%" y="1157" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1167.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.0000%" y="1141" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1151.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="50.0000%" y="1125" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1135.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.0000%" y="1109" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1119.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.0000%" y="1093" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1103.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="50.0000%" y="1077" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1087.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.0000%" y="1061" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1071.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.0000%" y="1045" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1055.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (1 samples, 0.06%)</title><rect x="50.0000%" y="1029" width="0.0605%" height="15" fill="rgb(240,86,32)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1039.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (1 samples, 0.06%)</title><rect x="50.0000%" y="1013" width="0.0605%" height="15" fill="rgb(250,133,8)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1023.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (1 samples, 0.06%)</title><rect x="50.0000%" y="997" width="0.0605%" height="15" fill="rgb(215,64,41)" fg:x="826" fg:w="1"/><text x="50.2500%" y="1007.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (1 samples, 0.06%)</title><rect x="50.0000%" y="981" width="0.0605%" height="15" fill="rgb(253,194,2)" fg:x="826" fg:w="1"/><text x="50.2500%" y="991.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (1 samples, 0.06%)</title><rect x="50.0000%" y="965" width="0.0605%" height="15" fill="rgb(207,143,46)" fg:x="826" fg:w="1"/><text x="50.2500%" y="975.50"></text></g><g><title>sucds::elias_fano::EliasFano::enable_rank (1 samples, 0.06%)</title><rect x="50.0000%" y="949" width="0.0605%" height="15" fill="rgb(230,113,53)" fg:x="826" fg:w="1"/><text x="50.2500%" y="959.50"></text></g><g><title>sucds::darray::DArrayIndex::build (1 samples, 0.06%)</title><rect x="50.0000%" y="933" width="0.0605%" height="15" fill="rgb(224,166,54)" fg:x="826" fg:w="1"/><text x="50.2500%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="50.0000%" y="917" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="826" fg:w="1"/><text x="50.2500%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="50.0000%" y="901" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="826" fg:w="1"/><text x="50.2500%" y="911.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="50.0000%" y="885" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="826" fg:w="1"/><text x="50.2500%" y="895.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="50.0000%" y="869" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="826" fg:w="1"/><text x="50.2500%" y="879.50"></text></g><g><title>__memcpy_generic (1 samples, 0.06%)</title><rect x="50.0000%" y="853" width="0.0605%" height="15" fill="rgb(209,187,6)" fg:x="826" fg:w="1"/><text x="50.2500%" y="863.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="50.0000%" y="837" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="826" fg:w="1"/><text x="50.2500%" y="847.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="50.0000%" y="821" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="826" fg:w="1"/><text x="50.2500%" y="831.50"></text></g><g><title>__do_fault (1 samples, 0.06%)</title><rect x="50.0605%" y="693" width="0.0605%" height="15" fill="rgb(232,18,38)" fg:x="827" fg:w="1"/><text x="50.3105%" y="703.50"></text></g><g><title>xfs_filemap_fault (1 samples, 0.06%)</title><rect x="50.0605%" y="677" width="0.0605%" height="15" fill="rgb(230,143,35)" fg:x="827" fg:w="1"/><text x="50.3105%" y="687.50"></text></g><g><title>filemap_fault (1 samples, 0.06%)</title><rect x="50.0605%" y="661" width="0.0605%" height="15" fill="rgb(254,137,16)" fg:x="827" fg:w="1"/><text x="50.3105%" y="671.50"></text></g><g><title>filemap_read_folio (1 samples, 0.06%)</title><rect x="50.0605%" y="645" width="0.0605%" height="15" fill="rgb(208,133,8)" fg:x="827" fg:w="1"/><text x="50.3105%" y="655.50"></text></g><g><title>xfs_vm_read_folio (1 samples, 0.06%)</title><rect x="50.0605%" y="629" width="0.0605%" height="15" fill="rgb(246,67,53)" fg:x="827" fg:w="1"/><text x="50.3105%" y="639.50"></text></g><g><title>iomap_read_folio (1 samples, 0.06%)</title><rect x="50.0605%" y="613" width="0.0605%" height="15" fill="rgb(238,182,3)" fg:x="827" fg:w="1"/><text x="50.3105%" y="623.50"></text></g><g><title>iomap_iter (1 samples, 0.06%)</title><rect x="50.0605%" y="597" width="0.0605%" height="15" fill="rgb(208,5,31)" fg:x="827" fg:w="1"/><text x="50.3105%" y="607.50"></text></g><g><title>xfs_read_iomap_begin (1 samples, 0.06%)</title><rect x="50.0605%" y="581" width="0.0605%" height="15" fill="rgb(238,177,24)" fg:x="827" fg:w="1"/><text x="50.3105%" y="591.50"></text></g><g><title>xfs_iext_lookup_extent (1 samples, 0.06%)</title><rect x="50.0605%" y="565" width="0.0605%" height="15" fill="rgb(247,71,0)" fg:x="827" fg:w="1"/><text x="50.3105%" y="575.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (2 samples, 0.12%)</title><rect x="50.0605%" y="965" width="0.1211%" height="15" fill="rgb(228,63,22)" fg:x="827" fg:w="2"/><text x="50.3105%" y="975.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (2 samples, 0.12%)</title><rect x="50.0605%" y="949" width="0.1211%" height="15" fill="rgb(247,141,48)" fg:x="827" fg:w="2"/><text x="50.3105%" y="959.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (2 samples, 0.12%)</title><rect x="50.0605%" y="933" width="0.1211%" height="15" fill="rgb(253,188,5)" fg:x="827" fg:w="2"/><text x="50.3105%" y="943.50"></text></g><g><title>cursor_get (2 samples, 0.12%)</title><rect x="50.0605%" y="917" width="0.1211%" height="15" fill="rgb(238,62,13)" fg:x="827" fg:w="2"/><text x="50.3105%" y="927.50"></text></g><g><title>cursor_set (2 samples, 0.12%)</title><rect x="50.0605%" y="901" width="0.1211%" height="15" fill="rgb(233,136,1)" fg:x="827" fg:w="2"/><text x="50.3105%" y="911.50"></text></g><g><title>page_search_root (2 samples, 0.12%)</title><rect x="50.0605%" y="885" width="0.1211%" height="15" fill="rgb(251,173,43)" fg:x="827" fg:w="2"/><text x="50.3105%" y="895.50"></text></g><g><title>page_get_three (2 samples, 0.12%)</title><rect x="50.0605%" y="869" width="0.1211%" height="15" fill="rgb(212,228,35)" fg:x="827" fg:w="2"/><text x="50.3105%" y="879.50"></text></g><g><title>el0t_64_sync_handler (2 samples, 0.12%)</title><rect x="50.0605%" y="853" width="0.1211%" height="15" fill="rgb(232,35,33)" fg:x="827" fg:w="2"/><text x="50.3105%" y="863.50"></text></g><g><title>el0_da (2 samples, 0.12%)</title><rect x="50.0605%" y="837" width="0.1211%" height="15" fill="rgb(222,99,46)" fg:x="827" fg:w="2"/><text x="50.3105%" y="847.50"></text></g><g><title>do_mem_abort (2 samples, 0.12%)</title><rect x="50.0605%" y="821" width="0.1211%" height="15" fill="rgb(239,157,43)" fg:x="827" fg:w="2"/><text x="50.3105%" y="831.50"></text></g><g><title>do_translation_fault (2 samples, 0.12%)</title><rect x="50.0605%" y="805" width="0.1211%" height="15" fill="rgb(237,78,44)" fg:x="827" fg:w="2"/><text x="50.3105%" y="815.50"></text></g><g><title>do_page_fault (2 samples, 0.12%)</title><rect x="50.0605%" y="789" width="0.1211%" height="15" fill="rgb(206,63,28)" fg:x="827" fg:w="2"/><text x="50.3105%" y="799.50"></text></g><g><title>handle_mm_fault (2 samples, 0.12%)</title><rect x="50.0605%" y="773" width="0.1211%" height="15" fill="rgb(247,31,49)" fg:x="827" fg:w="2"/><text x="50.3105%" y="783.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.12%)</title><rect x="50.0605%" y="757" width="0.1211%" height="15" fill="rgb(254,123,40)" fg:x="827" fg:w="2"/><text x="50.3105%" y="767.50"></text></g><g><title>handle_pte_fault (2 samples, 0.12%)</title><rect x="50.0605%" y="741" width="0.1211%" height="15" fill="rgb(225,148,24)" fg:x="827" fg:w="2"/><text x="50.3105%" y="751.50"></text></g><g><title>do_fault (2 samples, 0.12%)</title><rect x="50.0605%" y="725" width="0.1211%" height="15" fill="rgb(236,204,42)" fg:x="827" fg:w="2"/><text x="50.3105%" y="735.50"></text></g><g><title>do_read_fault (2 samples, 0.12%)</title><rect x="50.0605%" y="709" width="0.1211%" height="15" fill="rgb(241,58,29)" fg:x="827" fg:w="2"/><text x="50.3105%" y="719.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="50.1211%" y="693" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="828" fg:w="1"/><text x="50.3711%" y="703.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="50.1211%" y="677" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="828" fg:w="1"/><text x="50.3711%" y="687.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="50.1211%" y="661" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="828" fg:w="1"/><text x="50.3711%" y="671.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (3 samples, 0.18%)</title><rect x="50.0605%" y="1045" width="0.1816%" height="15" fill="rgb(234,79,13)" fg:x="827" fg:w="3"/><text x="50.3105%" y="1055.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (3 samples, 0.18%)</title><rect x="50.0605%" y="1029" width="0.1816%" height="15" fill="rgb(236,137,21)" fg:x="827" fg:w="3"/><text x="50.3105%" y="1039.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (3 samples, 0.18%)</title><rect x="50.0605%" y="1013" width="0.1816%" height="15" fill="rgb(224,127,46)" fg:x="827" fg:w="3"/><text x="50.3105%" y="1023.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (3 samples, 0.18%)</title><rect x="50.0605%" y="997" width="0.1816%" height="15" fill="rgb(250,92,26)" fg:x="827" fg:w="3"/><text x="50.3105%" y="1007.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (3 samples, 0.18%)</title><rect x="50.0605%" y="981" width="0.1816%" height="15" fill="rgb(241,33,38)" fg:x="827" fg:w="3"/><text x="50.3105%" y="991.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::tx::Tx&lt;K,E&gt; as reth_db::abstraction::transaction::DbTx&gt;::get (1 samples, 0.06%)</title><rect x="50.1816%" y="965" width="0.0605%" height="15" fill="rgb(253,2,53)" fg:x="829" fg:w="1"/><text x="50.4316%" y="975.50"></text></g><g><title>reth_libmdbx::transaction::Transaction&lt;K,E&gt;::get (1 samples, 0.06%)</title><rect x="50.1816%" y="949" width="0.0605%" height="15" fill="rgb(250,84,16)" fg:x="829" fg:w="1"/><text x="50.4316%" y="959.50"></text></g><g><title>mdbx_get (1 samples, 0.06%)</title><rect x="50.1816%" y="933" width="0.0605%" height="15" fill="rgb(207,205,41)" fg:x="829" fg:w="1"/><text x="50.4316%" y="943.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="50.1816%" y="917" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="829" fg:w="1"/><text x="50.4316%" y="927.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="50.1816%" y="901" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="829" fg:w="1"/><text x="50.4316%" y="911.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="50.1816%" y="885" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="829" fg:w="1"/><text x="50.4316%" y="895.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="50.1816%" y="869" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="829" fg:w="1"/><text x="50.4316%" y="879.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="50.1816%" y="853" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="829" fg:w="1"/><text x="50.4316%" y="863.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="50.1816%" y="837" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="829" fg:w="1"/><text x="50.4316%" y="847.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="50.1816%" y="821" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="829" fg:w="1"/><text x="50.4316%" y="831.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="50.1816%" y="805" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="829" fg:w="1"/><text x="50.4316%" y="815.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1237" width="0.2421%" height="15" fill="rgb(232,116,6)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1247.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (4 samples, 0.24%)</title><rect x="50.0605%" y="1221" width="0.2421%" height="15" fill="rgb(236,181,49)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1231.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1205" width="0.2421%" height="15" fill="rgb(222,82,5)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1215.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1189" width="0.2421%" height="15" fill="rgb(232,116,6)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1199.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (4 samples, 0.24%)</title><rect x="50.0605%" y="1173" width="0.2421%" height="15" fill="rgb(236,181,49)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1183.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1157" width="0.2421%" height="15" fill="rgb(222,82,5)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1167.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1141" width="0.2421%" height="15" fill="rgb(232,116,6)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1151.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (4 samples, 0.24%)</title><rect x="50.0605%" y="1125" width="0.2421%" height="15" fill="rgb(236,181,49)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1135.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1109" width="0.2421%" height="15" fill="rgb(222,82,5)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1119.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1093" width="0.2421%" height="15" fill="rgb(232,116,6)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1103.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (4 samples, 0.24%)</title><rect x="50.0605%" y="1077" width="0.2421%" height="15" fill="rgb(236,181,49)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1087.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (4 samples, 0.24%)</title><rect x="50.0605%" y="1061" width="0.2421%" height="15" fill="rgb(222,82,5)" fg:x="827" fg:w="4"/><text x="50.3105%" y="1071.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.2421%" y="1045" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="830" fg:w="1"/><text x="50.4921%" y="1055.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.2421%" y="1029" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="830" fg:w="1"/><text x="50.4921%" y="1039.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="50.2421%" y="1013" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="830" fg:w="1"/><text x="50.4921%" y="1023.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.2421%" y="997" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="830" fg:w="1"/><text x="50.4921%" y="1007.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.2421%" y="981" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="830" fg:w="1"/><text x="50.4921%" y="991.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="50.2421%" y="965" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="830" fg:w="1"/><text x="50.4921%" y="975.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.2421%" y="949" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="830" fg:w="1"/><text x="50.4921%" y="959.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.2421%" y="933" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="830" fg:w="1"/><text x="50.4921%" y="943.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::step (1 samples, 0.06%)</title><rect x="50.2421%" y="917" width="0.0605%" height="15" fill="rgb(238,141,0)" fg:x="830" fg:w="1"/><text x="50.4921%" y="927.50"></text></g><g><title>node_search (2 samples, 0.12%)</title><rect x="50.3027%" y="853" width="0.1211%" height="15" fill="rgb(216,89,10)" fg:x="831" fg:w="2"/><text x="50.5527%" y="863.50"></text></g><g><title>__GI_memcmp (1 samples, 0.06%)</title><rect x="50.3632%" y="837" width="0.0605%" height="15" fill="rgb(230,39,14)" fg:x="832" fg:w="1"/><text x="50.6132%" y="847.50"></text></g><g><title>alloc_pages (2 samples, 0.12%)</title><rect x="50.4237%" y="677" width="0.1211%" height="15" fill="rgb(232,180,1)" fg:x="833" fg:w="2"/><text x="50.6737%" y="687.50"></text></g><g><title>__alloc_pages (2 samples, 0.12%)</title><rect x="50.4237%" y="661" width="0.1211%" height="15" fill="rgb(244,104,38)" fg:x="833" fg:w="2"/><text x="50.6737%" y="671.50"></text></g><g><title>__pi_clear_page (2 samples, 0.12%)</title><rect x="50.4237%" y="645" width="0.1211%" height="15" fill="rgb(227,148,36)" fg:x="833" fg:w="2"/><text x="50.6737%" y="655.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (5 samples, 0.30%)</title><rect x="50.3027%" y="949" width="0.3027%" height="15" fill="rgb(228,63,22)" fg:x="831" fg:w="5"/><text x="50.5527%" y="959.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (5 samples, 0.30%)</title><rect x="50.3027%" y="933" width="0.3027%" height="15" fill="rgb(247,141,48)" fg:x="831" fg:w="5"/><text x="50.5527%" y="943.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (5 samples, 0.30%)</title><rect x="50.3027%" y="917" width="0.3027%" height="15" fill="rgb(253,188,5)" fg:x="831" fg:w="5"/><text x="50.5527%" y="927.50"></text></g><g><title>cursor_get (5 samples, 0.30%)</title><rect x="50.3027%" y="901" width="0.3027%" height="15" fill="rgb(238,62,13)" fg:x="831" fg:w="5"/><text x="50.5527%" y="911.50"></text></g><g><title>cursor_set (5 samples, 0.30%)</title><rect x="50.3027%" y="885" width="0.3027%" height="15" fill="rgb(233,136,1)" fg:x="831" fg:w="5"/><text x="50.5527%" y="895.50"></text></g><g><title>page_search_root (5 samples, 0.30%)</title><rect x="50.3027%" y="869" width="0.3027%" height="15" fill="rgb(251,173,43)" fg:x="831" fg:w="5"/><text x="50.5527%" y="879.50"></text></g><g><title>page_get_three (3 samples, 0.18%)</title><rect x="50.4237%" y="853" width="0.1816%" height="15" fill="rgb(212,228,35)" fg:x="833" fg:w="3"/><text x="50.6737%" y="863.50"></text></g><g><title>el0t_64_sync_handler (3 samples, 0.18%)</title><rect x="50.4237%" y="837" width="0.1816%" height="15" fill="rgb(232,35,33)" fg:x="833" fg:w="3"/><text x="50.6737%" y="847.50"></text></g><g><title>el0_da (3 samples, 0.18%)</title><rect x="50.4237%" y="821" width="0.1816%" height="15" fill="rgb(222,99,46)" fg:x="833" fg:w="3"/><text x="50.6737%" y="831.50"></text></g><g><title>do_mem_abort (3 samples, 0.18%)</title><rect x="50.4237%" y="805" width="0.1816%" height="15" fill="rgb(239,157,43)" fg:x="833" fg:w="3"/><text x="50.6737%" y="815.50"></text></g><g><title>do_translation_fault (3 samples, 0.18%)</title><rect x="50.4237%" y="789" width="0.1816%" height="15" fill="rgb(237,78,44)" fg:x="833" fg:w="3"/><text x="50.6737%" y="799.50"></text></g><g><title>do_page_fault (3 samples, 0.18%)</title><rect x="50.4237%" y="773" width="0.1816%" height="15" fill="rgb(206,63,28)" fg:x="833" fg:w="3"/><text x="50.6737%" y="783.50"></text></g><g><title>handle_mm_fault (3 samples, 0.18%)</title><rect x="50.4237%" y="757" width="0.1816%" height="15" fill="rgb(247,31,49)" fg:x="833" fg:w="3"/><text x="50.6737%" y="767.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.18%)</title><rect x="50.4237%" y="741" width="0.1816%" height="15" fill="rgb(254,123,40)" fg:x="833" fg:w="3"/><text x="50.6737%" y="751.50"></text></g><g><title>handle_pte_fault (3 samples, 0.18%)</title><rect x="50.4237%" y="725" width="0.1816%" height="15" fill="rgb(225,148,24)" fg:x="833" fg:w="3"/><text x="50.6737%" y="735.50"></text></g><g><title>do_fault (3 samples, 0.18%)</title><rect x="50.4237%" y="709" width="0.1816%" height="15" fill="rgb(236,204,42)" fg:x="833" fg:w="3"/><text x="50.6737%" y="719.50"></text></g><g><title>do_read_fault (3 samples, 0.18%)</title><rect x="50.4237%" y="693" width="0.1816%" height="15" fill="rgb(241,58,29)" fg:x="833" fg:w="3"/><text x="50.6737%" y="703.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="50.5448%" y="677" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="835" fg:w="1"/><text x="50.7948%" y="687.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="50.5448%" y="661" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="835" fg:w="1"/><text x="50.7948%" y="671.50"></text></g><g><title>do_set_pte (1 samples, 0.06%)</title><rect x="50.5448%" y="645" width="0.0605%" height="15" fill="rgb(208,28,54)" fg:x="835" fg:w="1"/><text x="50.7948%" y="655.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (6 samples, 0.36%)</title><rect x="50.3027%" y="1237" width="0.3632%" height="15" fill="rgb(236,181,49)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1247.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1221" width="0.3632%" height="15" fill="rgb(222,82,5)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1231.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1205" width="0.3632%" height="15" fill="rgb(232,116,6)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1215.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (6 samples, 0.36%)</title><rect x="50.3027%" y="1189" width="0.3632%" height="15" fill="rgb(236,181,49)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1199.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1173" width="0.3632%" height="15" fill="rgb(222,82,5)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1183.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1157" width="0.3632%" height="15" fill="rgb(232,116,6)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1167.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (6 samples, 0.36%)</title><rect x="50.3027%" y="1141" width="0.3632%" height="15" fill="rgb(236,181,49)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1151.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1125" width="0.3632%" height="15" fill="rgb(222,82,5)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1135.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1109" width="0.3632%" height="15" fill="rgb(232,116,6)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1119.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (6 samples, 0.36%)</title><rect x="50.3027%" y="1093" width="0.3632%" height="15" fill="rgb(236,181,49)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1103.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1077" width="0.3632%" height="15" fill="rgb(222,82,5)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1087.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (6 samples, 0.36%)</title><rect x="50.3027%" y="1061" width="0.3632%" height="15" fill="rgb(232,116,6)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1071.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (6 samples, 0.36%)</title><rect x="50.3027%" y="1045" width="0.3632%" height="15" fill="rgb(236,181,49)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1055.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (6 samples, 0.36%)</title><rect x="50.3027%" y="1029" width="0.3632%" height="15" fill="rgb(240,86,32)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1039.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (6 samples, 0.36%)</title><rect x="50.3027%" y="1013" width="0.3632%" height="15" fill="rgb(250,133,8)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1023.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (6 samples, 0.36%)</title><rect x="50.3027%" y="997" width="0.3632%" height="15" fill="rgb(215,64,41)" fg:x="831" fg:w="6"/><text x="50.5527%" y="1007.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (6 samples, 0.36%)</title><rect x="50.3027%" y="981" width="0.3632%" height="15" fill="rgb(253,194,2)" fg:x="831" fg:w="6"/><text x="50.5527%" y="991.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (6 samples, 0.36%)</title><rect x="50.3027%" y="965" width="0.3632%" height="15" fill="rgb(207,143,46)" fg:x="831" fg:w="6"/><text x="50.5527%" y="975.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (1 samples, 0.06%)</title><rect x="50.6053%" y="949" width="0.0605%" height="15" fill="rgb(243,169,33)" fg:x="836" fg:w="1"/><text x="50.8553%" y="959.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="50.6053%" y="933" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="836" fg:w="1"/><text x="50.8553%" y="943.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="50.6053%" y="917" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="836" fg:w="1"/><text x="50.8553%" y="927.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="50.6053%" y="901" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="836" fg:w="1"/><text x="50.8553%" y="911.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="50.6053%" y="885" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="836" fg:w="1"/><text x="50.8553%" y="895.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="50.6053%" y="869" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="836" fg:w="1"/><text x="50.8553%" y="879.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.06%)</title><rect x="50.6659%" y="1237" width="0.0605%" height="15" fill="rgb(215,36,0)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.06%)</title><rect x="50.6659%" y="1221" width="0.0605%" height="15" fill="rgb(228,202,16)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.06%)</title><rect x="50.6659%" y="1205" width="0.0605%" height="15" fill="rgb(228,202,16)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.06%)</title><rect x="50.6659%" y="1189" width="0.0605%" height="15" fill="rgb(218,104,40)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1199.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.06%)</title><rect x="50.6659%" y="1173" width="0.0605%" height="15" fill="rgb(210,88,34)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1183.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.06%)</title><rect x="50.6659%" y="1157" width="0.0605%" height="15" fill="rgb(249,26,43)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.06%)</title><rect x="50.6659%" y="1141" width="0.0605%" height="15" fill="rgb(244,44,31)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.06%)</title><rect x="50.6659%" y="1125" width="0.0605%" height="15" fill="rgb(227,84,42)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.06%)</title><rect x="50.6659%" y="1109" width="0.0605%" height="15" fill="rgb(231,124,40)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="50.6659%" y="1093" width="0.0605%" height="15" fill="rgb(228,76,43)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1103.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1 samples, 0.06%)</title><rect x="50.6659%" y="1077" width="0.0605%" height="15" fill="rgb(250,218,41)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1087.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.06%)</title><rect x="50.6659%" y="1061" width="0.0605%" height="15" fill="rgb(238,208,28)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1071.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="50.6659%" y="1045" width="0.0605%" height="15" fill="rgb(208,157,13)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1055.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="50.6659%" y="1029" width="0.0605%" height="15" fill="rgb(212,174,39)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1039.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (1 samples, 0.06%)</title><rect x="50.6659%" y="1013" width="0.0605%" height="15" fill="rgb(243,177,20)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1023.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (1 samples, 0.06%)</title><rect x="50.6659%" y="997" width="0.0605%" height="15" fill="rgb(244,101,36)" fg:x="837" fg:w="1"/><text x="50.9159%" y="1007.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (1 samples, 0.06%)</title><rect x="50.6659%" y="981" width="0.0605%" height="15" fill="rgb(223,3,11)" fg:x="837" fg:w="1"/><text x="50.9159%" y="991.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (1 samples, 0.06%)</title><rect x="50.6659%" y="965" width="0.0605%" height="15" fill="rgb(248,177,53)" fg:x="837" fg:w="1"/><text x="50.9159%" y="975.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (1 samples, 0.06%)</title><rect x="50.6659%" y="949" width="0.0605%" height="15" fill="rgb(206,114,36)" fg:x="837" fg:w="1"/><text x="50.9159%" y="959.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.6659%" y="933" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="837" fg:w="1"/><text x="50.9159%" y="943.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.6659%" y="917" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="837" fg:w="1"/><text x="50.9159%" y="927.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="50.6659%" y="901" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="837" fg:w="1"/><text x="50.9159%" y="911.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="50.6659%" y="885" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="837" fg:w="1"/><text x="50.9159%" y="895.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="50.6659%" y="869" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="837" fg:w="1"/><text x="50.9159%" y="879.50"></text></g><g><title>revm_interpreter::instructions::system::calldatacopy (1 samples, 0.06%)</title><rect x="50.6659%" y="853" width="0.0605%" height="15" fill="rgb(223,205,10)" fg:x="837" fg:w="1"/><text x="50.9159%" y="863.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="50.6659%" y="837" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="837" fg:w="1"/><text x="50.9159%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.12%)</title><rect x="50.7264%" y="1237" width="0.1211%" height="15" fill="rgb(227,203,15)" fg:x="838" fg:w="2"/><text x="50.9764%" y="1247.50"></text></g><g><title>clock_gettime@plt (2 samples, 0.12%)</title><rect x="50.7264%" y="1221" width="0.1211%" height="15" fill="rgb(215,133,38)" fg:x="838" fg:w="2"/><text x="50.9764%" y="1231.50"></text></g><g><title>syscall@plt (1 samples, 0.06%)</title><rect x="50.8475%" y="1237" width="0.0605%" height="15" fill="rgb(243,117,6)" fg:x="840" fg:w="1"/><text x="51.0975%" y="1247.50"></text></g><g><title>get_unmapped_area (1 samples, 0.06%)</title><rect x="50.9080%" y="885" width="0.0605%" height="15" fill="rgb(243,176,38)" fg:x="841" fg:w="1"/><text x="51.1580%" y="895.50"></text></g><g><title>arch_get_unmapped_area_topdown (1 samples, 0.06%)</title><rect x="50.9080%" y="869" width="0.0605%" height="15" fill="rgb(213,22,5)" fg:x="841" fg:w="1"/><text x="51.1580%" y="879.50"></text></g><g><title>generic_get_unmapped_area_topdown (1 samples, 0.06%)</title><rect x="50.9080%" y="853" width="0.0605%" height="15" fill="rgb(244,97,48)" fg:x="841" fg:w="1"/><text x="51.1580%" y="863.50"></text></g><g><title>vm_unmapped_area (1 samples, 0.06%)</title><rect x="50.9080%" y="837" width="0.0605%" height="15" fill="rgb(208,22,54)" fg:x="841" fg:w="1"/><text x="51.1580%" y="847.50"></text></g><g><title>mas_empty_area_rev (1 samples, 0.06%)</title><rect x="50.9080%" y="821" width="0.0605%" height="15" fill="rgb(220,21,54)" fg:x="841" fg:w="1"/><text x="51.1580%" y="831.50"></text></g><g><title>vma_expand (1 samples, 0.06%)</title><rect x="50.9685%" y="869" width="0.0605%" height="15" fill="rgb(220,211,53)" fg:x="842" fg:w="1"/><text x="51.2185%" y="879.50"></text></g><g><title>vma_mas_store (1 samples, 0.06%)</title><rect x="50.9685%" y="853" width="0.0605%" height="15" fill="rgb(244,150,25)" fg:x="842" fg:w="1"/><text x="51.2185%" y="863.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.06%)</title><rect x="50.9685%" y="837" width="0.0605%" height="15" fill="rgb(217,123,23)" fg:x="842" fg:w="1"/><text x="51.2185%" y="847.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.06%)</title><rect x="50.9685%" y="821" width="0.0605%" height="15" fill="rgb(228,79,50)" fg:x="842" fg:w="1"/><text x="51.2185%" y="831.50"></text></g><g><title>mas_wr_modify (1 samples, 0.06%)</title><rect x="50.9685%" y="805" width="0.0605%" height="15" fill="rgb(222,86,15)" fg:x="842" fg:w="1"/><text x="51.2185%" y="815.50"></text></g><g><title>mas_wr_node_store (1 samples, 0.06%)</title><rect x="50.9685%" y="789" width="0.0605%" height="15" fill="rgb(248,122,18)" fg:x="842" fg:w="1"/><text x="51.2185%" y="799.50"></text></g><g><title>do_mmap (5 samples, 0.30%)</title><rect x="50.9080%" y="901" width="0.3027%" height="15" fill="rgb(228,25,27)" fg:x="841" fg:w="5"/><text x="51.1580%" y="911.50"></text></g><g><title>mmap_region (4 samples, 0.24%)</title><rect x="50.9685%" y="885" width="0.2421%" height="15" fill="rgb(233,57,38)" fg:x="842" fg:w="4"/><text x="51.2185%" y="895.50"></text></g><g><title>vma_mas_store (3 samples, 0.18%)</title><rect x="51.0291%" y="869" width="0.1816%" height="15" fill="rgb(244,150,25)" fg:x="843" fg:w="3"/><text x="51.2791%" y="879.50"></text></g><g><title>mas_store_prealloc (3 samples, 0.18%)</title><rect x="51.0291%" y="853" width="0.1816%" height="15" fill="rgb(217,123,23)" fg:x="843" fg:w="3"/><text x="51.2791%" y="863.50"></text></g><g><title>mas_wr_store_entry.isra.0 (3 samples, 0.18%)</title><rect x="51.0291%" y="837" width="0.1816%" height="15" fill="rgb(228,79,50)" fg:x="843" fg:w="3"/><text x="51.2791%" y="847.50"></text></g><g><title>mas_wr_modify (2 samples, 0.12%)</title><rect x="51.0896%" y="821" width="0.1211%" height="15" fill="rgb(222,86,15)" fg:x="844" fg:w="2"/><text x="51.3396%" y="831.50"></text></g><g><title>mas_wr_node_store (2 samples, 0.12%)</title><rect x="51.0896%" y="805" width="0.1211%" height="15" fill="rgb(248,122,18)" fg:x="844" fg:w="2"/><text x="51.3396%" y="815.50"></text></g><g><title>ma_free_rcu (2 samples, 0.12%)</title><rect x="51.0896%" y="789" width="0.1211%" height="15" fill="rgb(218,9,19)" fg:x="844" fg:w="2"/><text x="51.3396%" y="799.50"></text></g><g><title>__GI___mmap64 (11 samples, 0.67%)</title><rect x="50.9080%" y="1045" width="0.6659%" height="15" fill="rgb(216,161,14)" fg:x="841" fg:w="11"/><text x="51.1580%" y="1055.50"></text></g><g><title>el0t_64_sync_handler (11 samples, 0.67%)</title><rect x="50.9080%" y="1029" width="0.6659%" height="15" fill="rgb(232,35,33)" fg:x="841" fg:w="11"/><text x="51.1580%" y="1039.50"></text></g><g><title>el0_svc (11 samples, 0.67%)</title><rect x="50.9080%" y="1013" width="0.6659%" height="15" fill="rgb(225,46,33)" fg:x="841" fg:w="11"/><text x="51.1580%" y="1023.50"></text></g><g><title>do_el0_svc (11 samples, 0.67%)</title><rect x="50.9080%" y="997" width="0.6659%" height="15" fill="rgb(221,53,8)" fg:x="841" fg:w="11"/><text x="51.1580%" y="1007.50"></text></g><g><title>el0_svc_common.constprop.0 (11 samples, 0.67%)</title><rect x="50.9080%" y="981" width="0.6659%" height="15" fill="rgb(219,7,42)" fg:x="841" fg:w="11"/><text x="51.1580%" y="991.50"></text></g><g><title>invoke_syscall (11 samples, 0.67%)</title><rect x="50.9080%" y="965" width="0.6659%" height="15" fill="rgb(234,209,2)" fg:x="841" fg:w="11"/><text x="51.1580%" y="975.50"></text></g><g><title>__arm64_sys_mmap (11 samples, 0.67%)</title><rect x="50.9080%" y="949" width="0.6659%" height="15" fill="rgb(232,29,1)" fg:x="841" fg:w="11"/><text x="51.1580%" y="959.50"></text></g><g><title>ksys_mmap_pgoff (11 samples, 0.67%)</title><rect x="50.9080%" y="933" width="0.6659%" height="15" fill="rgb(248,1,16)" fg:x="841" fg:w="11"/><text x="51.1580%" y="943.50"></text></g><g><title>vm_mmap_pgoff (11 samples, 0.67%)</title><rect x="50.9080%" y="917" width="0.6659%" height="15" fill="rgb(226,196,1)" fg:x="841" fg:w="11"/><text x="51.1580%" y="927.50"></text></g><g><title>down_write_killable (6 samples, 0.36%)</title><rect x="51.2107%" y="901" width="0.3632%" height="15" fill="rgb(229,142,1)" fg:x="846" fg:w="6"/><text x="51.4607%" y="911.50"></text></g><g><title>rwsem_down_write_slowpath (6 samples, 0.36%)</title><rect x="51.2107%" y="885" width="0.3632%" height="15" fill="rgb(250,77,51)" fg:x="846" fg:w="6"/><text x="51.4607%" y="895.50"></text></g><g><title>schedule (6 samples, 0.36%)</title><rect x="51.2107%" y="869" width="0.3632%" height="15" fill="rgb(213,215,35)" fg:x="846" fg:w="6"/><text x="51.4607%" y="879.50"></text></g><g><title>__schedule (6 samples, 0.36%)</title><rect x="51.2107%" y="853" width="0.3632%" height="15" fill="rgb(207,40,26)" fg:x="846" fg:w="6"/><text x="51.4607%" y="863.50"></text></g><g><title>arch_local_irq_enable (6 samples, 0.36%)</title><rect x="51.2107%" y="837" width="0.3632%" height="15" fill="rgb(232,216,33)" fg:x="846" fg:w="6"/><text x="51.4607%" y="847.50"></text></g><g><title>__GI___munmap (1 samples, 0.06%)</title><rect x="51.5738%" y="1045" width="0.0605%" height="15" fill="rgb(214,177,17)" fg:x="852" fg:w="1"/><text x="51.8238%" y="1055.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="51.5738%" y="1029" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="852" fg:w="1"/><text x="51.8238%" y="1039.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="51.5738%" y="1013" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="852" fg:w="1"/><text x="51.8238%" y="1023.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="51.5738%" y="997" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="852" fg:w="1"/><text x="51.8238%" y="1007.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="51.5738%" y="981" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="852" fg:w="1"/><text x="51.8238%" y="991.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="51.5738%" y="965" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="852" fg:w="1"/><text x="51.8238%" y="975.50"></text></g><g><title>__arm64_sys_munmap (1 samples, 0.06%)</title><rect x="51.5738%" y="949" width="0.0605%" height="15" fill="rgb(232,139,7)" fg:x="852" fg:w="1"/><text x="51.8238%" y="959.50"></text></g><g><title>__vm_munmap (1 samples, 0.06%)</title><rect x="51.5738%" y="933" width="0.0605%" height="15" fill="rgb(247,197,25)" fg:x="852" fg:w="1"/><text x="51.8238%" y="943.50"></text></g><g><title>down_write_killable (1 samples, 0.06%)</title><rect x="51.5738%" y="917" width="0.0605%" height="15" fill="rgb(229,142,1)" fg:x="852" fg:w="1"/><text x="51.8238%" y="927.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.06%)</title><rect x="51.5738%" y="901" width="0.0605%" height="15" fill="rgb(250,77,51)" fg:x="852" fg:w="1"/><text x="51.8238%" y="911.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.06%)</title><rect x="51.5738%" y="885" width="0.0605%" height="15" fill="rgb(231,125,28)" fg:x="852" fg:w="1"/><text x="51.8238%" y="895.50"></text></g><g><title>down_read (7 samples, 0.42%)</title><rect x="51.6344%" y="965" width="0.4237%" height="15" fill="rgb(208,214,33)" fg:x="853" fg:w="7"/><text x="51.8844%" y="975.50"></text></g><g><title>rwsem_down_read_slowpath (7 samples, 0.42%)</title><rect x="51.6344%" y="949" width="0.4237%" height="15" fill="rgb(234,34,4)" fg:x="853" fg:w="7"/><text x="51.8844%" y="959.50"></text></g><g><title>schedule_preempt_disabled (7 samples, 0.42%)</title><rect x="51.6344%" y="933" width="0.4237%" height="15" fill="rgb(241,42,14)" fg:x="853" fg:w="7"/><text x="51.8844%" y="943.50"></text></g><g><title>schedule (7 samples, 0.42%)</title><rect x="51.6344%" y="917" width="0.4237%" height="15" fill="rgb(213,215,35)" fg:x="853" fg:w="7"/><text x="51.8844%" y="927.50"></text></g><g><title>__schedule (7 samples, 0.42%)</title><rect x="51.6344%" y="901" width="0.4237%" height="15" fill="rgb(207,40,26)" fg:x="853" fg:w="7"/><text x="51.8844%" y="911.50"></text></g><g><title>arch_local_irq_enable (7 samples, 0.42%)</title><rect x="51.6344%" y="885" width="0.4237%" height="15" fill="rgb(232,216,33)" fg:x="853" fg:w="7"/><text x="51.8844%" y="895.50"></text></g><g><title>std::sys::unix::thread::guard::current (20 samples, 1.21%)</title><rect x="50.9080%" y="1141" width="1.2107%" height="15" fill="rgb(225,215,43)" fg:x="841" fg:w="20"/><text x="51.1580%" y="1151.50"></text></g><g><title>__pthread_getattr_np (20 samples, 1.21%)</title><rect x="50.9080%" y="1125" width="1.2107%" height="15" fill="rgb(220,69,37)" fg:x="841" fg:w="20"/><text x="51.1580%" y="1135.50"></text></g><g><title>__GI___libc_malloc (20 samples, 1.21%)</title><rect x="50.9080%" y="1109" width="1.2107%" height="15" fill="rgb(206,112,53)" fg:x="841" fg:w="20"/><text x="51.1580%" y="1119.50"></text></g><g><title>tcache_init.part.0 (20 samples, 1.21%)</title><rect x="50.9080%" y="1093" width="1.2107%" height="15" fill="rgb(205,153,6)" fg:x="841" fg:w="20"/><text x="51.1580%" y="1103.50"></text></g><g><title>arena_get2.part.0 (20 samples, 1.21%)</title><rect x="50.9080%" y="1077" width="1.2107%" height="15" fill="rgb(209,63,40)" fg:x="841" fg:w="20"/><text x="51.1580%" y="1087.50"></text></g><g><title>new_heap (20 samples, 1.21%)</title><rect x="50.9080%" y="1061" width="1.2107%" height="15" fill="rgb(205,205,9)" fg:x="841" fg:w="20"/><text x="51.1580%" y="1071.50"></text></g><g><title>el0t_64_sync_handler (8 samples, 0.48%)</title><rect x="51.6344%" y="1045" width="0.4843%" height="15" fill="rgb(232,35,33)" fg:x="853" fg:w="8"/><text x="51.8844%" y="1055.50"></text></g><g><title>el0_da (8 samples, 0.48%)</title><rect x="51.6344%" y="1029" width="0.4843%" height="15" fill="rgb(222,99,46)" fg:x="853" fg:w="8"/><text x="51.8844%" y="1039.50"></text></g><g><title>do_mem_abort (8 samples, 0.48%)</title><rect x="51.6344%" y="1013" width="0.4843%" height="15" fill="rgb(239,157,43)" fg:x="853" fg:w="8"/><text x="51.8844%" y="1023.50"></text></g><g><title>do_translation_fault (8 samples, 0.48%)</title><rect x="51.6344%" y="997" width="0.4843%" height="15" fill="rgb(237,78,44)" fg:x="853" fg:w="8"/><text x="51.8844%" y="1007.50"></text></g><g><title>do_page_fault (8 samples, 0.48%)</title><rect x="51.6344%" y="981" width="0.4843%" height="15" fill="rgb(206,63,28)" fg:x="853" fg:w="8"/><text x="51.8844%" y="991.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="52.0581%" y="965" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="860" fg:w="1"/><text x="52.3081%" y="975.50"></text></g><g><title>__GI_socket (1 samples, 0.06%)</title><rect x="52.1186%" y="949" width="0.0605%" height="15" fill="rgb(220,158,33)" fg:x="861" fg:w="1"/><text x="52.3686%" y="959.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="52.1186%" y="933" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="861" fg:w="1"/><text x="52.3686%" y="943.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="52.1186%" y="917" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="861" fg:w="1"/><text x="52.3686%" y="927.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="52.1186%" y="901" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="861" fg:w="1"/><text x="52.3686%" y="911.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="52.1186%" y="885" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="861" fg:w="1"/><text x="52.3686%" y="895.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="52.1186%" y="869" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="861" fg:w="1"/><text x="52.3686%" y="879.50"></text></g><g><title>__arm64_sys_socket (1 samples, 0.06%)</title><rect x="52.1186%" y="853" width="0.0605%" height="15" fill="rgb(223,210,53)" fg:x="861" fg:w="1"/><text x="52.3686%" y="863.50"></text></g><g><title>__sys_socket (1 samples, 0.06%)</title><rect x="52.1186%" y="837" width="0.0605%" height="15" fill="rgb(250,37,47)" fg:x="861" fg:w="1"/><text x="52.3686%" y="847.50"></text></g><g><title>__sock_create (1 samples, 0.06%)</title><rect x="52.1186%" y="821" width="0.0605%" height="15" fill="rgb(222,146,4)" fg:x="861" fg:w="1"/><text x="52.3686%" y="831.50"></text></g><g><title>security_socket_create (1 samples, 0.06%)</title><rect x="52.1186%" y="805" width="0.0605%" height="15" fill="rgb(235,34,42)" fg:x="861" fg:w="1"/><text x="52.3686%" y="815.50"></text></g><g><title>selinux_socket_create (1 samples, 0.06%)</title><rect x="52.1186%" y="789" width="0.0605%" height="15" fill="rgb(226,25,21)" fg:x="861" fg:w="1"/><text x="52.3686%" y="799.50"></text></g><g><title>security_transition_sid (1 samples, 0.06%)</title><rect x="52.1186%" y="773" width="0.0605%" height="15" fill="rgb(231,190,4)" fg:x="861" fg:w="1"/><text x="52.3686%" y="783.50"></text></g><g><title>security_compute_sid.part.0 (1 samples, 0.06%)</title><rect x="52.1186%" y="757" width="0.0605%" height="15" fill="rgb(239,74,5)" fg:x="861" fg:w="1"/><text x="52.3686%" y="767.50"></text></g><g><title>policydb_context_isvalid (1 samples, 0.06%)</title><rect x="52.1186%" y="741" width="0.0605%" height="15" fill="rgb(241,219,35)" fg:x="861" fg:w="1"/><text x="52.3686%" y="751.50"></text></g><g><title>ebitmap_contains (1 samples, 0.06%)</title><rect x="52.1186%" y="725" width="0.0605%" height="15" fill="rgb(215,191,45)" fg:x="861" fg:w="1"/><text x="52.3686%" y="735.50"></text></g><g><title>__check_pf (1 samples, 0.06%)</title><rect x="52.1792%" y="949" width="0.0605%" height="15" fill="rgb(246,132,13)" fg:x="862" fg:w="1"/><text x="52.4292%" y="959.50"></text></g><g><title>__GI_socket (1 samples, 0.06%)</title><rect x="52.1792%" y="933" width="0.0605%" height="15" fill="rgb(220,158,33)" fg:x="862" fg:w="1"/><text x="52.4292%" y="943.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="52.1792%" y="917" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="862" fg:w="1"/><text x="52.4292%" y="927.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="52.1792%" y="901" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="862" fg:w="1"/><text x="52.4292%" y="911.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="52.1792%" y="885" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="862" fg:w="1"/><text x="52.4292%" y="895.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="52.1792%" y="869" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="862" fg:w="1"/><text x="52.4292%" y="879.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="52.1792%" y="853" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="862" fg:w="1"/><text x="52.4292%" y="863.50"></text></g><g><title>__arm64_sys_socket (1 samples, 0.06%)</title><rect x="52.1792%" y="837" width="0.0605%" height="15" fill="rgb(223,210,53)" fg:x="862" fg:w="1"/><text x="52.4292%" y="847.50"></text></g><g><title>__sys_socket (1 samples, 0.06%)</title><rect x="52.1792%" y="821" width="0.0605%" height="15" fill="rgb(250,37,47)" fg:x="862" fg:w="1"/><text x="52.4292%" y="831.50"></text></g><g><title>__sock_create (1 samples, 0.06%)</title><rect x="52.1792%" y="805" width="0.0605%" height="15" fill="rgb(222,146,4)" fg:x="862" fg:w="1"/><text x="52.4292%" y="815.50"></text></g><g><title>security_socket_create (1 samples, 0.06%)</title><rect x="52.1792%" y="789" width="0.0605%" height="15" fill="rgb(235,34,42)" fg:x="862" fg:w="1"/><text x="52.4292%" y="799.50"></text></g><g><title>selinux_socket_create (1 samples, 0.06%)</title><rect x="52.1792%" y="773" width="0.0605%" height="15" fill="rgb(226,25,21)" fg:x="862" fg:w="1"/><text x="52.4292%" y="783.50"></text></g><g><title>avc_has_perm (1 samples, 0.06%)</title><rect x="52.1792%" y="757" width="0.0605%" height="15" fill="rgb(206,67,18)" fg:x="862" fg:w="1"/><text x="52.4292%" y="767.50"></text></g><g><title>avc_compute_av.isra.0 (1 samples, 0.06%)</title><rect x="52.1792%" y="741" width="0.0605%" height="15" fill="rgb(210,63,11)" fg:x="862" fg:w="1"/><text x="52.4292%" y="751.50"></text></g><g><title>security_compute_av (1 samples, 0.06%)</title><rect x="52.1792%" y="725" width="0.0605%" height="15" fill="rgb(217,19,11)" fg:x="862" fg:w="1"/><text x="52.4292%" y="735.50"></text></g><g><title>_find_first_bit (1 samples, 0.06%)</title><rect x="52.1792%" y="709" width="0.0605%" height="15" fill="rgb(232,147,10)" fg:x="862" fg:w="1"/><text x="52.4292%" y="719.50"></text></g><g><title>__libc_connect (1 samples, 0.06%)</title><rect x="52.2397%" y="949" width="0.0605%" height="15" fill="rgb(241,22,22)" fg:x="863" fg:w="1"/><text x="52.4897%" y="959.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (4 samples, 0.24%)</title><rect x="52.1186%" y="1045" width="0.2421%" height="15" fill="rgb(220,103,48)" fg:x="861" fg:w="4"/><text x="52.3686%" y="1055.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (4 samples, 0.24%)</title><rect x="52.1186%" y="1029" width="0.2421%" height="15" fill="rgb(229,160,53)" fg:x="861" fg:w="4"/><text x="52.3686%" y="1039.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (4 samples, 0.24%)</title><rect x="52.1186%" y="1013" width="0.2421%" height="15" fill="rgb(206,58,21)" fg:x="861" fg:w="4"/><text x="52.3686%" y="1023.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.24%)</title><rect x="52.1186%" y="997" width="0.2421%" height="15" fill="rgb(239,63,35)" fg:x="861" fg:w="4"/><text x="52.3686%" y="1007.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::{{closure}} (4 samples, 0.24%)</title><rect x="52.1186%" y="981" width="0.2421%" height="15" fill="rgb(250,75,4)" fg:x="861" fg:w="4"/><text x="52.3686%" y="991.50"></text></g><g><title>__GI_getaddrinfo (4 samples, 0.24%)</title><rect x="52.1186%" y="965" width="0.2421%" height="15" fill="rgb(213,27,35)" fg:x="861" fg:w="4"/><text x="52.3686%" y="975.50"></text></g><g><title>gaih_inet.constprop.0 (1 samples, 0.06%)</title><rect x="52.3002%" y="949" width="0.0605%" height="15" fill="rgb(215,200,26)" fg:x="864" fg:w="1"/><text x="52.5502%" y="959.50"></text></g><g><title>__GI__nss_files_gethostbyname4_r (1 samples, 0.06%)</title><rect x="52.3002%" y="933" width="0.0605%" height="15" fill="rgb(223,222,49)" fg:x="864" fg:w="1"/><text x="52.5502%" y="943.50"></text></g><g><title>internal_getent (1 samples, 0.06%)</title><rect x="52.3002%" y="917" width="0.0605%" height="15" fill="rgb(230,167,17)" fg:x="864" fg:w="1"/><text x="52.5502%" y="927.50"></text></g><g><title>__GI_strpbrk (1 samples, 0.06%)</title><rect x="52.3002%" y="901" width="0.0605%" height="15" fill="rgb(220,106,47)" fg:x="864" fg:w="1"/><text x="52.5502%" y="911.50"></text></g><g><title>__GI_strcspn (1 samples, 0.06%)</title><rect x="52.3002%" y="885" width="0.0605%" height="15" fill="rgb(229,189,53)" fg:x="864" fg:w="1"/><text x="52.5502%" y="895.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::walk_range (1 samples, 0.06%)</title><rect x="52.3608%" y="965" width="0.0605%" height="15" fill="rgb(209,75,1)" fg:x="865" fg:w="1"/><text x="52.6108%" y="975.50"></text></g><g><title>reth_db::tables::utils::decoder (1 samples, 0.06%)</title><rect x="52.3608%" y="949" width="0.0605%" height="15" fill="rgb(237,90,39)" fg:x="865" fg:w="1"/><text x="52.6108%" y="959.50"></text></g><g><title>&lt;reth_primitives::transaction::TransactionSignedNoHash as reth_codecs::Compact&gt;::from_compact (1 samples, 0.06%)</title><rect x="52.3608%" y="933" width="0.0605%" height="15" fill="rgb(207,209,2)" fg:x="865" fg:w="1"/><text x="52.6108%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.06%)</title><rect x="52.3608%" y="917" width="0.0605%" height="15" fill="rgb(228,156,48)" fg:x="865" fg:w="1"/><text x="52.6108%" y="927.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.06%)</title><rect x="52.3608%" y="901" width="0.0605%" height="15" fill="rgb(234,229,37)" fg:x="865" fg:w="1"/><text x="52.6108%" y="911.50"></text></g><g><title>zstd::bulk::decompressor::Decompressor::with_dictionary (1 samples, 0.06%)</title><rect x="52.3608%" y="885" width="0.0605%" height="15" fill="rgb(207,169,38)" fg:x="865" fg:w="1"/><text x="52.6108%" y="895.50"></text></g><g><title>zstd_safe::DCtx::load_dictionary (1 samples, 0.06%)</title><rect x="52.3608%" y="869" width="0.0605%" height="15" fill="rgb(250,166,35)" fg:x="865" fg:w="1"/><text x="52.6108%" y="879.50"></text></g><g><title>ZSTD_DCtx_loadDictionary (1 samples, 0.06%)</title><rect x="52.3608%" y="853" width="0.0605%" height="15" fill="rgb(254,99,3)" fg:x="865" fg:w="1"/><text x="52.6108%" y="863.50"></text></g><g><title>ZSTD_createDDict_advanced (1 samples, 0.06%)</title><rect x="52.3608%" y="837" width="0.0605%" height="15" fill="rgb(212,98,39)" fg:x="865" fg:w="1"/><text x="52.6108%" y="847.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="52.3608%" y="821" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="865" fg:w="1"/><text x="52.6108%" y="831.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="52.3608%" y="805" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="865" fg:w="1"/><text x="52.6108%" y="815.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="52.3608%" y="789" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="865" fg:w="1"/><text x="52.6108%" y="799.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="52.3608%" y="773" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="865" fg:w="1"/><text x="52.6108%" y="783.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="52.3608%" y="757" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="865" fg:w="1"/><text x="52.6108%" y="767.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="52.3608%" y="741" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="865" fg:w="1"/><text x="52.6108%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="52.3608%" y="725" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="865" fg:w="1"/><text x="52.6108%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="52.3608%" y="709" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="865" fg:w="1"/><text x="52.6108%" y="719.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="52.3608%" y="693" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="865" fg:w="1"/><text x="52.6108%" y="703.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="52.3608%" y="677" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="865" fg:w="1"/><text x="52.6108%" y="687.50"></text></g><g><title>alloc_zeroed_user_highpage_movable (1 samples, 0.06%)</title><rect x="52.3608%" y="661" width="0.0605%" height="15" fill="rgb(239,183,41)" fg:x="865" fg:w="1"/><text x="52.6108%" y="671.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="52.3608%" y="645" width="0.0605%" height="15" fill="rgb(252,142,48)" fg:x="865" fg:w="1"/><text x="52.6108%" y="655.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="52.3608%" y="629" width="0.0605%" height="15" fill="rgb(250,70,46)" fg:x="865" fg:w="1"/><text x="52.6108%" y="639.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="52.3608%" y="613" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="865" fg:w="1"/><text x="52.6108%" y="623.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="52.3608%" y="597" width="0.0605%" height="15" fill="rgb(246,35,53)" fg:x="865" fg:w="1"/><text x="52.6108%" y="607.50"></text></g><g><title>rmqueue (1 samples, 0.06%)</title><rect x="52.3608%" y="581" width="0.0605%" height="15" fill="rgb(227,170,9)" fg:x="865" fg:w="1"/><text x="52.6108%" y="591.50"></text></g><g><title>rmqueue_pcplist (1 samples, 0.06%)</title><rect x="52.3608%" y="565" width="0.0605%" height="15" fill="rgb(222,51,4)" fg:x="865" fg:w="1"/><text x="52.6108%" y="575.50"></text></g><g><title>&lt;reth_db::abstraction::cursor::RangeWalker&lt;T,CURSOR&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="52.4213%" y="917" width="0.0605%" height="15" fill="rgb(245,144,38)" fg:x="866" fg:w="1"/><text x="52.6713%" y="927.50"></text></g><g><title>reth_db::tables::utils::decoder (1 samples, 0.06%)</title><rect x="52.4213%" y="901" width="0.0605%" height="15" fill="rgb(237,90,39)" fg:x="866" fg:w="1"/><text x="52.6713%" y="911.50"></text></g><g><title>&lt;reth_primitives::transaction::TransactionSignedNoHash as reth_codecs::Compact&gt;::from_compact (1 samples, 0.06%)</title><rect x="52.4213%" y="885" width="0.0605%" height="15" fill="rgb(207,209,2)" fg:x="866" fg:w="1"/><text x="52.6713%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.06%)</title><rect x="52.4213%" y="869" width="0.0605%" height="15" fill="rgb(228,156,48)" fg:x="866" fg:w="1"/><text x="52.6713%" y="879.50"></text></g><g><title>ZSTD_decompressMultiFrame (1 samples, 0.06%)</title><rect x="52.4213%" y="853" width="0.0605%" height="15" fill="rgb(231,202,3)" fg:x="866" fg:w="1"/><text x="52.6713%" y="863.50"></text></g><g><title>ZSTD_decompressSequences_default.constprop.0 (1 samples, 0.06%)</title><rect x="52.4213%" y="837" width="0.0605%" height="15" fill="rgb(237,212,51)" fg:x="866" fg:w="1"/><text x="52.6713%" y="847.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (1 samples, 0.06%)</title><rect x="52.4818%" y="885" width="0.0605%" height="15" fill="rgb(216,56,26)" fg:x="867" fg:w="1"/><text x="52.7318%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (1 samples, 0.06%)</title><rect x="52.4818%" y="869" width="0.0605%" height="15" fill="rgb(232,201,34)" fg:x="867" fg:w="1"/><text x="52.7318%" y="879.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (1 samples, 0.06%)</title><rect x="52.4818%" y="853" width="0.0605%" height="15" fill="rgb(230,123,10)" fg:x="867" fg:w="1"/><text x="52.7318%" y="863.50"></text></g><g><title>reth_primitives::transaction::Transaction::encode_with_signature (1 samples, 0.06%)</title><rect x="52.5424%" y="885" width="0.0605%" height="15" fill="rgb(229,14,48)" fg:x="868" fg:w="1"/><text x="52.7924%" y="895.50"></text></g><g><title>reth_rlp::encode::ethereum_types_support::&lt;impl reth_rlp::encode::Encodable for ruint::Uint&lt;256_usize,4_usize&gt;&gt;::encode (1 samples, 0.06%)</title><rect x="52.5424%" y="869" width="0.0605%" height="15" fill="rgb(223,51,44)" fg:x="868" fg:w="1"/><text x="52.7924%" y="879.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (1 samples, 0.06%)</title><rect x="52.5424%" y="853" width="0.0605%" height="15" fill="rgb(217,148,0)" fg:x="868" fg:w="1"/><text x="52.7924%" y="863.50"></text></g><g><title>&lt;reth_rpc::eth::cache::EthStateCacheService&lt;Provider,Tasks&gt; as core::future::future::Future&gt;::poll::{{closure}} (5 samples, 0.30%)</title><rect x="52.3608%" y="1013" width="0.3027%" height="15" fill="rgb(254,205,46)" fg:x="865" fg:w="5"/><text x="52.6108%" y="1023.50"></text></g><g><title>reth_provider::traits::block::BlockReader::block_by_hash (5 samples, 0.30%)</title><rect x="52.3608%" y="997" width="0.3027%" height="15" fill="rgb(222,86,21)" fg:x="865" fg:w="5"/><text x="52.6108%" y="1007.50"></text></g><g><title>&lt;reth_provider::providers::database::provider::DatabaseProvider&lt;TX&gt; as reth_provider::traits::block::BlockReader&gt;::block (5 samples, 0.30%)</title><rect x="52.3608%" y="981" width="0.3027%" height="15" fill="rgb(226,186,23)" fg:x="865" fg:w="5"/><text x="52.6108%" y="991.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.24%)</title><rect x="52.4213%" y="965" width="0.2421%" height="15" fill="rgb(236,86,7)" fg:x="866" fg:w="4"/><text x="52.6713%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.24%)</title><rect x="52.4213%" y="949" width="0.2421%" height="15" fill="rgb(227,158,43)" fg:x="866" fg:w="4"/><text x="52.6713%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.24%)</title><rect x="52.4213%" y="933" width="0.2421%" height="15" fill="rgb(246,51,5)" fg:x="866" fg:w="4"/><text x="52.6713%" y="943.50"></text></g><g><title>&lt;reth_primitives::transaction::TransactionSigned as core::convert::From&lt;reth_primitives::transaction::TransactionSignedNoHash&gt;&gt;::from (3 samples, 0.18%)</title><rect x="52.4818%" y="917" width="0.1816%" height="15" fill="rgb(213,83,11)" fg:x="867" fg:w="3"/><text x="52.7318%" y="927.50"></text></g><g><title>reth_primitives::transaction::TransactionSigned::recalculate_hash (3 samples, 0.18%)</title><rect x="52.4818%" y="901" width="0.1816%" height="15" fill="rgb(220,217,5)" fg:x="867" fg:w="3"/><text x="52.7318%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (1 samples, 0.06%)</title><rect x="52.6029%" y="885" width="0.0605%" height="15" fill="rgb(219,129,42)" fg:x="869" fg:w="1"/><text x="52.8529%" y="895.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (1 samples, 0.06%)</title><rect x="52.6029%" y="869" width="0.0605%" height="15" fill="rgb(230,123,10)" fg:x="869" fg:w="1"/><text x="52.8529%" y="879.50"></text></g><g><title>&lt;revm::db::in_memory_db::CacheDB&lt;ExtDB&gt; as revm_primitives::db::DatabaseCommit&gt;::commit (1 samples, 0.06%)</title><rect x="52.6634%" y="949" width="0.0605%" height="15" fill="rgb(232,71,26)" fg:x="870" fg:w="1"/><text x="52.9134%" y="959.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::hash (1 samples, 0.06%)</title><rect x="52.6634%" y="933" width="0.0605%" height="15" fill="rgb(221,204,33)" fg:x="870" fg:w="1"/><text x="52.9134%" y="943.50"></text></g><g><title>reth_primitives::transaction::Transaction::encode_fields (1 samples, 0.06%)</title><rect x="52.7240%" y="901" width="0.0605%" height="15" fill="rgb(221,214,52)" fg:x="871" fg:w="1"/><text x="52.9740%" y="911.50"></text></g><g><title>&lt;bytes::bytes::Bytes as reth_rlp::encode::Encodable&gt;::encode (1 samples, 0.06%)</title><rect x="52.7240%" y="885" width="0.0605%" height="15" fill="rgb(246,209,9)" fg:x="871" fg:w="1"/><text x="52.9740%" y="895.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.06%)</title><rect x="52.7240%" y="869" width="0.0605%" height="15" fill="rgb(205,144,32)" fg:x="871" fg:w="1"/><text x="52.9740%" y="879.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="52.7240%" y="853" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="871" fg:w="1"/><text x="52.9740%" y="863.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="52.7240%" y="837" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="871" fg:w="1"/><text x="52.9740%" y="847.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="52.7240%" y="821" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="871" fg:w="1"/><text x="52.9740%" y="831.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="52.7240%" y="805" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="871" fg:w="1"/><text x="52.9740%" y="815.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="52.7240%" y="789" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="871" fg:w="1"/><text x="52.9740%" y="799.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="52.7240%" y="773" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="871" fg:w="1"/><text x="52.9740%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="52.7240%" y="757" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="871" fg:w="1"/><text x="52.9740%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="52.7240%" y="741" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="871" fg:w="1"/><text x="52.9740%" y="751.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="52.7240%" y="725" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="871" fg:w="1"/><text x="52.9740%" y="735.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="52.7240%" y="709" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="871" fg:w="1"/><text x="52.9740%" y="719.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.06%)</title><rect x="52.7240%" y="693" width="0.0605%" height="15" fill="rgb(209,111,19)" fg:x="871" fg:w="1"/><text x="52.9740%" y="703.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.06%)</title><rect x="52.7240%" y="677" width="0.0605%" height="15" fill="rgb(225,221,26)" fg:x="871" fg:w="1"/><text x="52.9740%" y="687.50"></text></g><g><title>&lt;reth_primitives::transaction::Transaction as reth_rlp::encode::Encodable&gt;::encode (2 samples, 0.12%)</title><rect x="52.7240%" y="917" width="0.1211%" height="15" fill="rgb(212,174,14)" fg:x="871" fg:w="2"/><text x="52.9740%" y="927.50"></text></g><g><title>reth_rlp::encode::encode_list (1 samples, 0.06%)</title><rect x="52.7845%" y="901" width="0.0605%" height="15" fill="rgb(228,187,47)" fg:x="872" fg:w="1"/><text x="53.0345%" y="911.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i8 (1 samples, 0.06%)</title><rect x="52.7845%" y="885" width="0.0605%" height="15" fill="rgb(229,148,3)" fg:x="872" fg:w="1"/><text x="53.0345%" y="895.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.06%)</title><rect x="52.7845%" y="869" width="0.0605%" height="15" fill="rgb(205,144,32)" fg:x="872" fg:w="1"/><text x="53.0345%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.06%)</title><rect x="52.7845%" y="853" width="0.0605%" height="15" fill="rgb(218,209,54)" fg:x="872" fg:w="1"/><text x="53.0345%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="52.7845%" y="837" width="0.0605%" height="15" fill="rgb(249,2,22)" fg:x="872" fg:w="1"/><text x="53.0345%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="52.7845%" y="821" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="872" fg:w="1"/><text x="53.0345%" y="831.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="52.7845%" y="805" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="872" fg:w="1"/><text x="53.0345%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="52.7845%" y="789" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="872" fg:w="1"/><text x="53.0345%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="52.7845%" y="773" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="872" fg:w="1"/><text x="53.0345%" y="783.50"></text></g><g><title>reth_primitives::transaction::Transaction::signature_hash (3 samples, 0.18%)</title><rect x="52.7240%" y="933" width="0.1816%" height="15" fill="rgb(210,215,30)" fg:x="871" fg:w="3"/><text x="52.9740%" y="943.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (1 samples, 0.06%)</title><rect x="52.8450%" y="917" width="0.0605%" height="15" fill="rgb(219,129,42)" fg:x="873" fg:w="1"/><text x="53.0950%" y="927.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (1 samples, 0.06%)</title><rect x="52.8450%" y="901" width="0.0605%" height="15" fill="rgb(230,123,10)" fg:x="873" fg:w="1"/><text x="53.0950%" y="911.50"></text></g><g><title>&lt;secp256k1::context::global::GlobalContext as core::ops::deref::Deref&gt;::deref (1 samples, 0.06%)</title><rect x="52.9056%" y="917" width="0.0605%" height="15" fill="rgb(245,21,7)" fg:x="874" fg:w="1"/><text x="53.1556%" y="927.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.06%)</title><rect x="52.9056%" y="901" width="0.0605%" height="15" fill="rgb(246,168,49)" fg:x="874" fg:w="1"/><text x="53.1556%" y="911.50"></text></g><g><title>rustsecp256k1_v0_8_1_context_randomize (1 samples, 0.06%)</title><rect x="52.9056%" y="885" width="0.0605%" height="15" fill="rgb(228,93,17)" fg:x="874" fg:w="1"/><text x="53.1556%" y="895.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_gen_blind (1 samples, 0.06%)</title><rect x="52.9056%" y="869" width="0.0605%" height="15" fill="rgb(252,146,48)" fg:x="874" fg:w="1"/><text x="53.1556%" y="879.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_gen (1 samples, 0.06%)</title><rect x="52.9056%" y="853" width="0.0605%" height="15" fill="rgb(227,226,9)" fg:x="874" fg:w="1"/><text x="53.1556%" y="863.50"></text></g><g><title>revm_primitives::bits::B160::from_slice (1 samples, 0.06%)</title><rect x="52.9661%" y="917" width="0.0605%" height="15" fill="rgb(243,58,12)" fg:x="875" fg:w="1"/><text x="53.2161%" y="927.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_odd_multiples_table.constprop.0 (2 samples, 0.12%)</title><rect x="53.8741%" y="869" width="0.1211%" height="15" fill="rgb(224,132,8)" fg:x="890" fg:w="2"/><text x="54.1241%" y="879.50"></text></g><g><title>rustsecp256k1_v0_8_1_gej_add_ge_var (2 samples, 0.12%)</title><rect x="53.8741%" y="853" width="0.1211%" height="15" fill="rgb(239,191,24)" fg:x="890" fg:w="2"/><text x="54.1241%" y="863.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (2 samples, 0.12%)</title><rect x="53.8741%" y="837" width="0.1211%" height="15" fill="rgb(232,212,25)" fg:x="890" fg:w="2"/><text x="54.1241%" y="847.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (2 samples, 0.12%)</title><rect x="53.9952%" y="869" width="0.1211%" height="15" fill="rgb(232,212,25)" fg:x="892" fg:w="2"/><text x="54.2452%" y="879.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (11 samples, 0.67%)</title><rect x="54.3584%" y="853" width="0.6659%" height="15" fill="rgb(232,212,25)" fg:x="898" fg:w="11"/><text x="54.6084%" y="863.50"></text></g><g><title>rustsecp256k1_v0_8_1_gej_add_ge_var (18 samples, 1.09%)</title><rect x="54.1162%" y="869" width="1.0896%" height="15" fill="rgb(239,191,24)" fg:x="894" fg:w="18"/><text x="54.3662%" y="879.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_sqr_inner (3 samples, 0.18%)</title><rect x="55.0242%" y="853" width="0.1816%" height="15" fill="rgb(209,113,2)" fg:x="909" fg:w="3"/><text x="55.2742%" y="863.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_strauss_wnaf.constprop.0 (41 samples, 2.48%)</title><rect x="53.0266%" y="885" width="2.4818%" height="15" fill="rgb(233,192,27)" fg:x="876" fg:w="41"/><text x="53.2766%" y="895.50">ru..</text></g><g><title>rustsecp256k1_v0_8_1_gej_add_zinv_var (5 samples, 0.30%)</title><rect x="55.2058%" y="869" width="0.3027%" height="15" fill="rgb(217,27,18)" fg:x="912" fg:w="5"/><text x="55.4558%" y="879.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (4 samples, 0.24%)</title><rect x="55.2663%" y="853" width="0.2421%" height="15" fill="rgb(232,212,25)" fg:x="913" fg:w="4"/><text x="55.5163%" y="863.50"></text></g><g><title>rustsecp256k1_v0_8_1_ge_set_xo_var (3 samples, 0.18%)</title><rect x="55.5085%" y="885" width="0.1816%" height="15" fill="rgb(253,129,30)" fg:x="917" fg:w="3"/><text x="55.7585%" y="895.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_sqr_inner (1 samples, 0.06%)</title><rect x="55.6295%" y="869" width="0.0605%" height="15" fill="rgb(209,113,2)" fg:x="919" fg:w="1"/><text x="55.8795%" y="879.50"></text></g><g><title>reth_primitives::transaction::TransactionSigned::into_ecrecovered (50 samples, 3.03%)</title><rect x="52.7240%" y="949" width="3.0266%" height="15" fill="rgb(234,220,37)" fg:x="871" fg:w="50"/><text x="52.9740%" y="959.50">ret..</text></g><g><title>reth_primitives::transaction::util::secp256k1::recover_signer (47 samples, 2.85%)</title><rect x="52.9056%" y="933" width="2.8450%" height="15" fill="rgb(240,42,17)" fg:x="874" fg:w="47"/><text x="53.1556%" y="943.50">re..</text></g><g><title>rustsecp256k1_v0_8_1_ecdsa_recover (45 samples, 2.72%)</title><rect x="53.0266%" y="917" width="2.7240%" height="15" fill="rgb(213,80,39)" fg:x="876" fg:w="45"/><text x="53.2766%" y="927.50">ru..</text></g><g><title>rustsecp256k1_v0_8_1_ecdsa_sig_recover (45 samples, 2.72%)</title><rect x="53.0266%" y="901" width="2.7240%" height="15" fill="rgb(223,43,13)" fg:x="876" fg:w="45"/><text x="53.2766%" y="911.50">ru..</text></g><g><title>rustsecp256k1_v0_8_1_scalar_inverse_var (1 samples, 0.06%)</title><rect x="55.6901%" y="885" width="0.0605%" height="15" fill="rgb(216,147,14)" fg:x="920" fg:w="1"/><text x="55.9401%" y="895.50"></text></g><g><title>rustsecp256k1_v0_8_1_modinv64_divsteps_62_var (1 samples, 0.06%)</title><rect x="55.6901%" y="869" width="0.0605%" height="15" fill="rgb(207,157,39)" fg:x="920" fg:w="1"/><text x="55.9401%" y="879.50"></text></g><g><title>reth_revm_inspectors::tracing::builder::parity::ParityTraceBuilder::into_localized_transaction_traces (1 samples, 0.06%)</title><rect x="55.7506%" y="949" width="0.0605%" height="15" fill="rgb(244,109,25)" fg:x="921" fg:w="1"/><text x="56.0006%" y="959.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="55.7506%" y="933" width="0.0605%" height="15" fill="rgb(244,150,15)" fg:x="921" fg:w="1"/><text x="56.0006%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="55.7506%" y="917" width="0.0605%" height="15" fill="rgb(214,109,53)" fg:x="921" fg:w="1"/><text x="56.0006%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;reth_revm_inspectors::tracing::types::CallTraceNode&gt; (1 samples, 0.06%)</title><rect x="55.7506%" y="901" width="0.0605%" height="15" fill="rgb(219,3,22)" fg:x="921" fg:w="1"/><text x="56.0006%" y="911.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="55.7506%" y="885" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="921" fg:w="1"/><text x="56.0006%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="55.7506%" y="869" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="921" fg:w="1"/><text x="56.0006%" y="879.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="55.8111%" y="853" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="922" fg:w="1"/><text x="56.0611%" y="863.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="55.8111%" y="837" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="922" fg:w="1"/><text x="56.0611%" y="847.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_bytes (1 samples, 0.06%)</title><rect x="55.8717%" y="773" width="0.0605%" height="15" fill="rgb(253,219,45)" fg:x="923" fg:w="1"/><text x="56.1217%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="55.8717%" y="757" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="923" fg:w="1"/><text x="56.1217%" y="767.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="55.8717%" y="741" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="923" fg:w="1"/><text x="56.1217%" y="751.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="55.8717%" y="725" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="923" fg:w="1"/><text x="56.1217%" y="735.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="55.8717%" y="709" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="923" fg:w="1"/><text x="56.1217%" y="719.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="55.8717%" y="693" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="923" fg:w="1"/><text x="56.1217%" y="703.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="55.8717%" y="677" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="923" fg:w="1"/><text x="56.1217%" y="687.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="55.8717%" y="661" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="923" fg:w="1"/><text x="56.1217%" y="671.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="55.8717%" y="645" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="923" fg:w="1"/><text x="56.1217%" y="655.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="55.8717%" y="629" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="923" fg:w="1"/><text x="56.1217%" y="639.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="55.8717%" y="613" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="923" fg:w="1"/><text x="56.1217%" y="623.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="55.8717%" y="597" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="923" fg:w="1"/><text x="56.1217%" y="607.50"></text></g><g><title>alloc_zeroed_user_highpage_movable (1 samples, 0.06%)</title><rect x="55.8717%" y="581" width="0.0605%" height="15" fill="rgb(239,183,41)" fg:x="923" fg:w="1"/><text x="56.1217%" y="591.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="55.8717%" y="565" width="0.0605%" height="15" fill="rgb(252,142,48)" fg:x="923" fg:w="1"/><text x="56.1217%" y="575.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="55.8717%" y="549" width="0.0605%" height="15" fill="rgb(250,70,46)" fg:x="923" fg:w="1"/><text x="56.1217%" y="559.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="55.8717%" y="533" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="923" fg:w="1"/><text x="56.1217%" y="543.50"></text></g><g><title>__pi_clear_page (1 samples, 0.06%)</title><rect x="55.8717%" y="517" width="0.0605%" height="15" fill="rgb(227,148,36)" fg:x="923" fg:w="1"/><text x="56.1217%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.18%)</title><rect x="55.9322%" y="757" width="0.1816%" height="15" fill="rgb(232,211,42)" fg:x="924" fg:w="3"/><text x="56.1822%" y="767.50"></text></g><g><title>reth_db::tables::utils::decode_one (5 samples, 0.30%)</title><rect x="55.8717%" y="805" width="0.3027%" height="15" fill="rgb(235,218,31)" fg:x="923" fg:w="5"/><text x="56.1217%" y="815.50"></text></g><g><title>&lt;reth_primitives::account::Bytecode as reth_codecs::Compact&gt;::from_compact (5 samples, 0.30%)</title><rect x="55.8717%" y="789" width="0.3027%" height="15" fill="rgb(207,201,1)" fg:x="923" fg:w="5"/><text x="56.1217%" y="799.50"></text></g><g><title>revm_primitives::bytecode::JumpMap::from_slice (4 samples, 0.24%)</title><rect x="55.9322%" y="773" width="0.2421%" height="15" fill="rgb(239,176,16)" fg:x="924" fg:w="4"/><text x="56.1822%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="56.1138%" y="757" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="927" fg:w="1"/><text x="56.3638%" y="767.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::code (7 samples, 0.42%)</title><rect x="55.8111%" y="885" width="0.4237%" height="15" fill="rgb(231,80,48)" fg:x="922" fg:w="7"/><text x="56.0611%" y="895.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (7 samples, 0.42%)</title><rect x="55.8111%" y="869" width="0.4237%" height="15" fill="rgb(236,137,21)" fg:x="922" fg:w="7"/><text x="56.0611%" y="879.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::code_by_hash (6 samples, 0.36%)</title><rect x="55.8717%" y="853" width="0.3632%" height="15" fill="rgb(246,45,5)" fg:x="923" fg:w="6"/><text x="56.1217%" y="863.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::bytecode_by_hash (6 samples, 0.36%)</title><rect x="55.8717%" y="837" width="0.3632%" height="15" fill="rgb(219,182,3)" fg:x="923" fg:w="6"/><text x="56.1217%" y="847.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::tx::Tx&lt;K,E&gt; as reth_db::abstraction::transaction::DbTx&gt;::get (6 samples, 0.36%)</title><rect x="55.8717%" y="821" width="0.3632%" height="15" fill="rgb(253,2,53)" fg:x="923" fg:w="6"/><text x="56.1217%" y="831.50"></text></g><g><title>reth_libmdbx::transaction::Transaction&lt;K,E&gt;::get (1 samples, 0.06%)</title><rect x="56.1743%" y="805" width="0.0605%" height="15" fill="rgb(250,84,16)" fg:x="928" fg:w="1"/><text x="56.4243%" y="815.50"></text></g><g><title>mdbx_get (1 samples, 0.06%)</title><rect x="56.1743%" y="789" width="0.0605%" height="15" fill="rgb(207,205,41)" fg:x="928" fg:w="1"/><text x="56.4243%" y="799.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="56.1743%" y="773" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="928" fg:w="1"/><text x="56.4243%" y="783.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="56.1743%" y="757" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="928" fg:w="1"/><text x="56.4243%" y="767.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="56.1743%" y="741" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="928" fg:w="1"/><text x="56.4243%" y="751.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="56.1743%" y="725" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="928" fg:w="1"/><text x="56.4243%" y="735.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="56.1743%" y="709" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="928" fg:w="1"/><text x="56.4243%" y="719.50"></text></g><g><title>revm::journaled_state::JournaledState::checkpoint (1 samples, 0.06%)</title><rect x="56.2349%" y="885" width="0.0605%" height="15" fill="rgb(239,193,53)" fg:x="929" fg:w="1"/><text x="56.4849%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="56.2349%" y="869" width="0.0605%" height="15" fill="rgb(254,103,39)" fg:x="929" fg:w="1"/><text x="56.4849%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="56.2349%" y="853" width="0.0605%" height="15" fill="rgb(237,133,22)" fg:x="929" fg:w="1"/><text x="56.4849%" y="863.50"></text></g><g><title>__realloc (1 samples, 0.06%)</title><rect x="56.2349%" y="837" width="0.0605%" height="15" fill="rgb(238,20,0)" fg:x="929" fg:w="1"/><text x="56.4849%" y="847.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="56.2349%" y="821" width="0.0605%" height="15" fill="rgb(231,75,41)" fg:x="929" fg:w="1"/><text x="56.4849%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="56.2349%" y="805" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="929" fg:w="1"/><text x="56.4849%" y="815.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::step (2 samples, 0.12%)</title><rect x="56.9613%" y="869" width="0.1211%" height="15" fill="rgb(238,141,0)" fg:x="941" fg:w="2"/><text x="57.2113%" y="879.50"></text></g><g><title>revm_interpreter::instructions::arithmetic::div (1 samples, 0.06%)</title><rect x="57.0823%" y="869" width="0.0605%" height="15" fill="rgb(231,219,50)" fg:x="943" fg:w="1"/><text x="57.3323%" y="879.50"></text></g><g><title>ruint::div::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::div_rem (1 samples, 0.06%)</title><rect x="57.0823%" y="853" width="0.0605%" height="15" fill="rgb(213,31,19)" fg:x="943" fg:w="1"/><text x="57.3323%" y="863.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (3 samples, 0.18%)</title><rect x="57.1429%" y="869" width="0.1816%" height="15" fill="rgb(222,82,5)" fg:x="944" fg:w="3"/><text x="57.3929%" y="879.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (3 samples, 0.18%)</title><rect x="57.1429%" y="853" width="0.1816%" height="15" fill="rgb(232,116,6)" fg:x="944" fg:w="3"/><text x="57.3929%" y="863.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (3 samples, 0.18%)</title><rect x="57.1429%" y="837" width="0.1816%" height="15" fill="rgb(236,181,49)" fg:x="944" fg:w="3"/><text x="57.3929%" y="847.50"></text></g><g><title>revm_interpreter::instructions::bitwise::bitand (1 samples, 0.06%)</title><rect x="57.2639%" y="821" width="0.0605%" height="15" fill="rgb(235,94,46)" fg:x="946" fg:w="1"/><text x="57.5139%" y="831.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (18 samples, 1.09%)</title><rect x="56.2954%" y="885" width="1.0896%" height="15" fill="rgb(236,181,49)" fg:x="930" fg:w="18"/><text x="56.5454%" y="895.50"></text></g><g><title>revm_interpreter::instructions::system::sha3 (1 samples, 0.06%)</title><rect x="57.3245%" y="869" width="0.0605%" height="15" fill="rgb(230,22,54)" fg:x="947" fg:w="1"/><text x="57.5745%" y="879.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (1 samples, 0.06%)</title><rect x="57.3245%" y="853" width="0.0605%" height="15" fill="rgb(224,106,26)" fg:x="947" fg:w="1"/><text x="57.5745%" y="863.50"></text></g><g><title>keccak::keccak_p (1 samples, 0.06%)</title><rect x="57.3245%" y="837" width="0.0605%" height="15" fill="rgb(234,0,40)" fg:x="947" fg:w="1"/><text x="57.5745%" y="847.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (27 samples, 1.63%)</title><rect x="55.8111%" y="901" width="1.6344%" height="15" fill="rgb(232,116,6)" fg:x="922" fg:w="27"/><text x="56.0611%" y="911.50"></text></g><g><title>revm_precompile::Precompiles::get (1 samples, 0.06%)</title><rect x="57.3850%" y="885" width="0.0605%" height="15" fill="rgb(235,222,17)" fg:x="948" fg:w="1"/><text x="57.6350%" y="895.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::finalize (1 samples, 0.06%)</title><rect x="57.4455%" y="901" width="0.0605%" height="15" fill="rgb(243,118,9)" fg:x="949" fg:w="1"/><text x="57.6955%" y="911.50"></text></g><g><title>revm::journaled_state::JournaledState::finalize (1 samples, 0.06%)</title><rect x="57.4455%" y="885" width="0.0605%" height="15" fill="rgb(227,57,5)" fg:x="949" fg:w="1"/><text x="57.6955%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="57.4455%" y="869" width="0.0605%" height="15" fill="rgb(249,14,2)" fg:x="949" fg:w="1"/><text x="57.6955%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="57.4455%" y="853" width="0.0605%" height="15" fill="rgb(249,14,2)" fg:x="949" fg:w="1"/><text x="57.6955%" y="863.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 5.45%)</title><rect x="52.1186%" y="1061" width="5.4479%" height="15" fill="rgb(228,76,43)" fg:x="861" fg:w="90"/><text x="52.3686%" y="1071.50">&lt;tokio:..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (86 samples, 5.21%)</title><rect x="52.3608%" y="1045" width="5.2058%" height="15" fill="rgb(250,218,41)" fg:x="865" fg:w="86"/><text x="52.6108%" y="1055.50">tokio:..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (86 samples, 5.21%)</title><rect x="52.3608%" y="1029" width="5.2058%" height="15" fill="rgb(238,208,28)" fg:x="865" fg:w="86"/><text x="52.6108%" y="1039.50">tokio:..</text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (81 samples, 4.90%)</title><rect x="52.6634%" y="1013" width="4.9031%" height="15" fill="rgb(208,157,13)" fg:x="870" fg:w="81"/><text x="52.9134%" y="1023.50">&lt;traci..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (81 samples, 4.90%)</title><rect x="52.6634%" y="997" width="4.9031%" height="15" fill="rgb(212,174,39)" fg:x="870" fg:w="81"/><text x="52.9134%" y="1007.50">&lt;futur..</text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (81 samples, 4.90%)</title><rect x="52.6634%" y="981" width="4.9031%" height="15" fill="rgb(243,177,20)" fg:x="870" fg:w="81"/><text x="52.9134%" y="991.50">reth_r..</text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (81 samples, 4.90%)</title><rect x="52.6634%" y="965" width="4.9031%" height="15" fill="rgb(244,101,36)" fg:x="870" fg:w="81"/><text x="52.9134%" y="975.50">&lt;reth_..</text></g><g><title>reth_rpc::eth::revm_utils::inspect (29 samples, 1.76%)</title><rect x="55.8111%" y="949" width="1.7554%" height="15" fill="rgb(223,3,11)" fg:x="922" fg:w="29"/><text x="56.0611%" y="959.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (29 samples, 1.76%)</title><rect x="55.8111%" y="933" width="1.7554%" height="15" fill="rgb(248,177,53)" fg:x="922" fg:w="29"/><text x="56.0611%" y="943.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (29 samples, 1.76%)</title><rect x="55.8111%" y="917" width="1.7554%" height="15" fill="rgb(206,114,36)" fg:x="922" fg:w="29"/><text x="56.0611%" y="927.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="57.5061%" y="901" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="950" fg:w="1"/><text x="57.7561%" y="911.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="57.5061%" y="885" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="950" fg:w="1"/><text x="57.7561%" y="895.50"></text></g><g><title>hashbrown::map::VacantEntry&lt;K,V,S,A&gt;::insert (1 samples, 0.06%)</title><rect x="57.5061%" y="869" width="0.0605%" height="15" fill="rgb(209,149,6)" fg:x="950" fg:w="1"/><text x="57.7561%" y="879.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="57.5061%" y="853" width="0.0605%" height="15" fill="rgb(237,102,14)" fg:x="950" fg:w="1"/><text x="57.7561%" y="863.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="57.5061%" y="837" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="950" fg:w="1"/><text x="57.7561%" y="847.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="57.5061%" y="821" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="950" fg:w="1"/><text x="57.7561%" y="831.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="57.5061%" y="805" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="950" fg:w="1"/><text x="57.7561%" y="815.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="57.5061%" y="789" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="950" fg:w="1"/><text x="57.7561%" y="799.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="57.5061%" y="773" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="950" fg:w="1"/><text x="57.7561%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="57.5061%" y="757" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="950" fg:w="1"/><text x="57.7561%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="57.5061%" y="741" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="950" fg:w="1"/><text x="57.7561%" y="751.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="57.5061%" y="725" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="950" fg:w="1"/><text x="57.7561%" y="735.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="57.5061%" y="709" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="950" fg:w="1"/><text x="57.7561%" y="719.50"></text></g><g><title>alloc_zeroed_user_highpage_movable (1 samples, 0.06%)</title><rect x="57.5061%" y="693" width="0.0605%" height="15" fill="rgb(239,183,41)" fg:x="950" fg:w="1"/><text x="57.7561%" y="703.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="57.5061%" y="677" width="0.0605%" height="15" fill="rgb(252,142,48)" fg:x="950" fg:w="1"/><text x="57.7561%" y="687.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="57.5061%" y="661" width="0.0605%" height="15" fill="rgb(250,70,46)" fg:x="950" fg:w="1"/><text x="57.7561%" y="671.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="57.5061%" y="645" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="950" fg:w="1"/><text x="57.7561%" y="655.50"></text></g><g><title>__pi_clear_page (1 samples, 0.06%)</title><rect x="57.5061%" y="629" width="0.0605%" height="15" fill="rgb(227,148,36)" fg:x="950" fg:w="1"/><text x="57.7561%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.06%)</title><rect x="57.5666%" y="1029" width="0.0605%" height="15" fill="rgb(228,156,48)" fg:x="951" fg:w="1"/><text x="57.8166%" y="1039.50"></text></g><g><title>tokio::loom::std::rand::seed (1 samples, 0.06%)</title><rect x="57.5666%" y="1013" width="0.0605%" height="15" fill="rgb(238,87,33)" fg:x="951" fg:w="1"/><text x="57.8166%" y="1023.50"></text></g><g><title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.06%)</title><rect x="57.5666%" y="997" width="0.0605%" height="15" fill="rgb(207,217,36)" fg:x="951" fg:w="1"/><text x="57.8166%" y="1007.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (1 samples, 0.06%)</title><rect x="57.5666%" y="981" width="0.0605%" height="15" fill="rgb(237,222,41)" fg:x="951" fg:w="1"/><text x="57.8166%" y="991.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (1 samples, 0.06%)</title><rect x="57.5666%" y="965" width="0.0605%" height="15" fill="rgb(213,102,48)" fg:x="951" fg:w="1"/><text x="57.8166%" y="975.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (1 samples, 0.06%)</title><rect x="57.5666%" y="949" width="0.0605%" height="15" fill="rgb(225,114,45)" fg:x="951" fg:w="1"/><text x="57.8166%" y="959.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (1 samples, 0.06%)</title><rect x="57.5666%" y="933" width="0.0605%" height="15" fill="rgb(228,225,47)" fg:x="951" fg:w="1"/><text x="57.8166%" y="943.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (1 samples, 0.06%)</title><rect x="57.5666%" y="917" width="0.0605%" height="15" fill="rgb(211,144,30)" fg:x="951" fg:w="1"/><text x="57.8166%" y="927.50"></text></g><g><title>__GI___getrandom (1 samples, 0.06%)</title><rect x="57.5666%" y="901" width="0.0605%" height="15" fill="rgb(249,65,21)" fg:x="951" fg:w="1"/><text x="57.8166%" y="911.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="57.5666%" y="885" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="951" fg:w="1"/><text x="57.8166%" y="895.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="57.5666%" y="869" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="951" fg:w="1"/><text x="57.8166%" y="879.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="57.5666%" y="853" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="951" fg:w="1"/><text x="57.8166%" y="863.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="57.5666%" y="837" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="951" fg:w="1"/><text x="57.8166%" y="847.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="57.5666%" y="821" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="951" fg:w="1"/><text x="57.8166%" y="831.50"></text></g><g><title>__arm64_sys_getrandom (1 samples, 0.06%)</title><rect x="57.5666%" y="805" width="0.0605%" height="15" fill="rgb(205,138,4)" fg:x="951" fg:w="1"/><text x="57.8166%" y="815.50"></text></g><g><title>get_random_bytes_user (1 samples, 0.06%)</title><rect x="57.5666%" y="789" width="0.0605%" height="15" fill="rgb(226,114,26)" fg:x="951" fg:w="1"/><text x="57.8166%" y="799.50"></text></g><g><title>__arch_copy_to_user (1 samples, 0.06%)</title><rect x="57.5666%" y="773" width="0.0605%" height="15" fill="rgb(210,178,31)" fg:x="951" fg:w="1"/><text x="57.8166%" y="783.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.12%)</title><rect x="58.4746%" y="997" width="0.1211%" height="15" fill="rgb(253,177,17)" fg:x="966" fg:w="2"/><text x="58.7246%" y="1007.50"></text></g><g><title>__aarch64_cas1_acq (2 samples, 0.12%)</title><rect x="58.5956%" y="997" width="0.1211%" height="15" fill="rgb(248,101,23)" fg:x="968" fg:w="2"/><text x="58.8456%" y="1007.50"></text></g><g><title>__aarch64_cas1_rel (3 samples, 0.18%)</title><rect x="58.7167%" y="997" width="0.1816%" height="15" fill="rgb(232,202,28)" fg:x="970" fg:w="3"/><text x="58.9667%" y="1007.50"></text></g><g><title>pow (1 samples, 0.06%)</title><rect x="58.8983%" y="997" width="0.0605%" height="15" fill="rgb(251,107,30)" fg:x="973" fg:w="1"/><text x="59.1483%" y="1007.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.06%)</title><rect x="58.9588%" y="997" width="0.0605%" height="15" fill="rgb(207,163,36)" fg:x="974" fg:w="1"/><text x="59.2088%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.06%)</title><rect x="58.9588%" y="981" width="0.0605%" height="15" fill="rgb(244,142,15)" fg:x="974" fg:w="1"/><text x="59.2088%" y="991.50"></text></g><g><title>__aarch64_cas1_acq (1 samples, 0.06%)</title><rect x="59.0194%" y="981" width="0.0605%" height="15" fill="rgb(248,101,23)" fg:x="975" fg:w="1"/><text x="59.2694%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (3 samples, 0.18%)</title><rect x="59.0194%" y="997" width="0.1816%" height="15" fill="rgb(237,121,30)" fg:x="975" fg:w="3"/><text x="59.2694%" y="1007.50"></text></g><g><title>__aarch64_cas1_rel (2 samples, 0.12%)</title><rect x="59.0799%" y="981" width="0.1211%" height="15" fill="rgb(232,202,28)" fg:x="976" fg:w="2"/><text x="59.3299%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (2 samples, 0.12%)</title><rect x="59.2010%" y="997" width="0.1211%" height="15" fill="rgb(227,39,2)" fg:x="978" fg:w="2"/><text x="59.4510%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (3 samples, 0.18%)</title><rect x="59.3220%" y="997" width="0.1816%" height="15" fill="rgb(210,159,39)" fg:x="980" fg:w="3"/><text x="59.5720%" y="1007.50"></text></g><g><title>__aarch64_swp8_acq_rel (1 samples, 0.06%)</title><rect x="59.8063%" y="965" width="0.0605%" height="15" fill="rgb(247,223,18)" fg:x="988" fg:w="1"/><text x="60.0563%" y="975.50"></text></g><g><title>blkcg_maybe_throttle_current (1 samples, 0.06%)</title><rect x="60.0484%" y="901" width="0.0605%" height="15" fill="rgb(227,111,33)" fg:x="992" fg:w="1"/><text x="60.2984%" y="911.50"></text></g><g><title>el1h_64_irq (1 samples, 0.06%)</title><rect x="60.2300%" y="869" width="0.0605%" height="15" fill="rgb(223,86,28)" fg:x="995" fg:w="1"/><text x="60.4800%" y="879.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.06%)</title><rect x="60.2300%" y="853" width="0.0605%" height="15" fill="rgb(231,46,5)" fg:x="995" fg:w="1"/><text x="60.4800%" y="863.50"></text></g><g><title>el1_interrupt (1 samples, 0.06%)</title><rect x="60.2300%" y="837" width="0.0605%" height="15" fill="rgb(254,19,43)" fg:x="995" fg:w="1"/><text x="60.4800%" y="847.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="60.2300%" y="821" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="995" fg:w="1"/><text x="60.4800%" y="831.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="60.2300%" y="805" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="995" fg:w="1"/><text x="60.4800%" y="815.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="60.2300%" y="789" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="995" fg:w="1"/><text x="60.4800%" y="799.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="60.2300%" y="773" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="995" fg:w="1"/><text x="60.4800%" y="783.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="60.2300%" y="757" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="995" fg:w="1"/><text x="60.4800%" y="767.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="60.2300%" y="741" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="995" fg:w="1"/><text x="60.4800%" y="751.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="60.2300%" y="725" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="995" fg:w="1"/><text x="60.4800%" y="735.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="60.2300%" y="709" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="995" fg:w="1"/><text x="60.4800%" y="719.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="60.2300%" y="693" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="995" fg:w="1"/><text x="60.4800%" y="703.50"></text></g><g><title>ena_com_rx_pkt (1 samples, 0.06%)</title><rect x="60.2300%" y="677" width="0.0605%" height="15" fill="rgb(248,3,38)" fg:x="995" fg:w="1"/><text x="60.4800%" y="687.50"></text></g><g><title>ena_clean_rx_irq (1 samples, 0.06%)</title><rect x="64.7094%" y="549" width="0.0605%" height="15" fill="rgb(226,177,46)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="559.50"></text></g><g><title>ena_refill_rx_bufs (1 samples, 0.06%)</title><rect x="64.7094%" y="533" width="0.0605%" height="15" fill="rgb(212,226,14)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="543.50"></text></g><g><title>ena_lpc_get_page (1 samples, 0.06%)</title><rect x="64.7094%" y="517" width="0.0605%" height="15" fill="rgb(252,179,18)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="527.50"></text></g><g><title>ena_alloc_map_page (1 samples, 0.06%)</title><rect x="64.7094%" y="501" width="0.0605%" height="15" fill="rgb(253,28,0)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="511.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="64.7094%" y="485" width="0.0605%" height="15" fill="rgb(244,104,38)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="495.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="64.7094%" y="469" width="0.0605%" height="15" fill="rgb(246,35,53)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="479.50"></text></g><g><title>rmqueue (1 samples, 0.06%)</title><rect x="64.7094%" y="453" width="0.0605%" height="15" fill="rgb(227,170,9)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="463.50"></text></g><g><title>rmqueue_pcplist (1 samples, 0.06%)</title><rect x="64.7094%" y="437" width="0.0605%" height="15" fill="rgb(222,51,4)" fg:x="1069" fg:w="1"/><text x="64.9594%" y="447.50"></text></g><g><title>__list_add_valid (1 samples, 0.06%)</title><rect x="64.7700%" y="501" width="0.0605%" height="15" fill="rgb(206,79,8)" fg:x="1070" fg:w="1"/><text x="65.0200%" y="511.50"></text></g><g><title>arch_local_irq_enable (77 samples, 4.66%)</title><rect x="60.4116%" y="757" width="4.6610%" height="15" fill="rgb(232,216,33)" fg:x="998" fg:w="77"/><text x="60.6616%" y="767.50">arch_..</text></g><g><title>el1h_64_irq (11 samples, 0.67%)</title><rect x="64.4068%" y="741" width="0.6659%" height="15" fill="rgb(223,86,28)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="751.50"></text></g><g><title>el1h_64_irq_handler (11 samples, 0.67%)</title><rect x="64.4068%" y="725" width="0.6659%" height="15" fill="rgb(231,46,5)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="735.50"></text></g><g><title>el1_interrupt (11 samples, 0.67%)</title><rect x="64.4068%" y="709" width="0.6659%" height="15" fill="rgb(254,19,43)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="719.50"></text></g><g><title>irq_exit_rcu (11 samples, 0.67%)</title><rect x="64.4068%" y="693" width="0.6659%" height="15" fill="rgb(240,18,12)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="703.50"></text></g><g><title>__irq_exit_rcu (11 samples, 0.67%)</title><rect x="64.4068%" y="677" width="0.6659%" height="15" fill="rgb(221,172,49)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="687.50"></text></g><g><title>do_softirq_own_stack (11 samples, 0.67%)</title><rect x="64.4068%" y="661" width="0.6659%" height="15" fill="rgb(223,89,53)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="671.50"></text></g><g><title>call_on_irq_stack (11 samples, 0.67%)</title><rect x="64.4068%" y="645" width="0.6659%" height="15" fill="rgb(247,223,36)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="655.50"></text></g><g><title>____do_softirq (11 samples, 0.67%)</title><rect x="64.4068%" y="629" width="0.6659%" height="15" fill="rgb(212,141,15)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="639.50"></text></g><g><title>__softirqentry_text_start (11 samples, 0.67%)</title><rect x="64.4068%" y="613" width="0.6659%" height="15" fill="rgb(249,91,22)" fg:x="1064" fg:w="11"/><text x="64.6568%" y="623.50"></text></g><g><title>net_rx_action (6 samples, 0.36%)</title><rect x="64.7094%" y="597" width="0.3632%" height="15" fill="rgb(231,11,52)" fg:x="1069" fg:w="6"/><text x="64.9594%" y="607.50"></text></g><g><title>__napi_poll (6 samples, 0.36%)</title><rect x="64.7094%" y="581" width="0.3632%" height="15" fill="rgb(206,61,33)" fg:x="1069" fg:w="6"/><text x="64.9594%" y="591.50"></text></g><g><title>ena_io_poll (6 samples, 0.36%)</title><rect x="64.7094%" y="565" width="0.3632%" height="15" fill="rgb(220,65,30)" fg:x="1069" fg:w="6"/><text x="64.9594%" y="575.50"></text></g><g><title>napi_complete_done (5 samples, 0.30%)</title><rect x="64.7700%" y="549" width="0.3027%" height="15" fill="rgb(226,216,13)" fg:x="1070" fg:w="5"/><text x="65.0200%" y="559.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.30%)</title><rect x="64.7700%" y="533" width="0.3027%" height="15" fill="rgb(216,153,44)" fg:x="1070" fg:w="5"/><text x="65.0200%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.30%)</title><rect x="64.7700%" y="517" width="0.3027%" height="15" fill="rgb(227,176,26)" fg:x="1070" fg:w="5"/><text x="65.0200%" y="527.50"></text></g><g><title>ip_list_rcv (4 samples, 0.24%)</title><rect x="64.8305%" y="501" width="0.2421%" height="15" fill="rgb(215,38,16)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="511.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.24%)</title><rect x="64.8305%" y="485" width="0.2421%" height="15" fill="rgb(207,166,9)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="495.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.24%)</title><rect x="64.8305%" y="469" width="0.2421%" height="15" fill="rgb(223,178,14)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="479.50"></text></g><g><title>ip_local_deliver (4 samples, 0.24%)</title><rect x="64.8305%" y="453" width="0.2421%" height="15" fill="rgb(221,216,39)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="463.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.24%)</title><rect x="64.8305%" y="437" width="0.2421%" height="15" fill="rgb(220,94,29)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.24%)</title><rect x="64.8305%" y="421" width="0.2421%" height="15" fill="rgb(207,19,13)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="431.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.24%)</title><rect x="64.8305%" y="405" width="0.2421%" height="15" fill="rgb(224,38,0)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.24%)</title><rect x="64.8305%" y="389" width="0.2421%" height="15" fill="rgb(228,220,18)" fg:x="1071" fg:w="4"/><text x="65.0805%" y="399.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.18%)</title><rect x="64.8910%" y="373" width="0.1816%" height="15" fill="rgb(224,50,47)" fg:x="1072" fg:w="3"/><text x="65.1410%" y="383.50"></text></g><g><title>tcp_data_queue (1 samples, 0.06%)</title><rect x="65.0121%" y="357" width="0.0605%" height="15" fill="rgb(221,5,12)" fg:x="1074" fg:w="1"/><text x="65.2621%" y="367.50"></text></g><g><title>tcp_data_ready (1 samples, 0.06%)</title><rect x="65.0121%" y="341" width="0.0605%" height="15" fill="rgb(238,57,28)" fg:x="1074" fg:w="1"/><text x="65.2621%" y="351.50"></text></g><g><title>sock_def_readable (1 samples, 0.06%)</title><rect x="65.0121%" y="325" width="0.0605%" height="15" fill="rgb(209,192,28)" fg:x="1074" fg:w="1"/><text x="65.2621%" y="335.50"></text></g><g><title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="65.0121%" y="309" width="0.0605%" height="15" fill="rgb(225,130,1)" fg:x="1074" fg:w="1"/><text x="65.2621%" y="319.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="65.0121%" y="293" width="0.0605%" height="15" fill="rgb(248,80,4)" fg:x="1074" fg:w="1"/><text x="65.2621%" y="303.50"></text></g><g><title>futex_wait_queue (79 samples, 4.78%)</title><rect x="60.3511%" y="805" width="4.7821%" height="15" fill="rgb(206,76,33)" fg:x="997" fg:w="79"/><text x="60.6011%" y="815.50">futex_..</text></g><g><title>schedule (79 samples, 4.78%)</title><rect x="60.3511%" y="789" width="4.7821%" height="15" fill="rgb(213,215,35)" fg:x="997" fg:w="79"/><text x="60.6011%" y="799.50">schedu..</text></g><g><title>__schedule (79 samples, 4.78%)</title><rect x="60.3511%" y="773" width="4.7821%" height="15" fill="rgb(207,40,26)" fg:x="997" fg:w="79"/><text x="60.6011%" y="783.50">__sche..</text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.06%)</title><rect x="65.0726%" y="757" width="0.0605%" height="15" fill="rgb(249,184,27)" fg:x="1075" fg:w="1"/><text x="65.3226%" y="767.50"></text></g><g><title>futex_wait (80 samples, 4.84%)</title><rect x="60.3511%" y="821" width="4.8426%" height="15" fill="rgb(242,80,18)" fg:x="997" fg:w="80"/><text x="60.6011%" y="831.50">futex_..</text></g><g><title>futex_wait_setup (1 samples, 0.06%)</title><rect x="65.1332%" y="805" width="0.0605%" height="15" fill="rgb(219,66,52)" fg:x="1076" fg:w="1"/><text x="65.3832%" y="815.50"></text></g><g><title>get_futex_key (1 samples, 0.06%)</title><rect x="65.1332%" y="789" width="0.0605%" height="15" fill="rgb(225,189,47)" fg:x="1076" fg:w="1"/><text x="65.3832%" y="799.50"></text></g><g><title>__arm64_sys_futex (82 samples, 4.96%)</title><rect x="60.2906%" y="853" width="4.9637%" height="15" fill="rgb(221,106,0)" fg:x="996" fg:w="82"/><text x="60.5406%" y="863.50">__arm6..</text></g><g><title>do_futex (81 samples, 4.90%)</title><rect x="60.3511%" y="837" width="4.9031%" height="15" fill="rgb(249,126,29)" fg:x="997" fg:w="81"/><text x="60.6011%" y="847.50">do_fut..</text></g><g><title>futex_wait_queue (1 samples, 0.06%)</title><rect x="65.1937%" y="821" width="0.0605%" height="15" fill="rgb(206,76,33)" fg:x="1077" fg:w="1"/><text x="65.4437%" y="831.50"></text></g><g><title>do_el0_svc (86 samples, 5.21%)</title><rect x="60.1090%" y="901" width="5.2058%" height="15" fill="rgb(221,53,8)" fg:x="993" fg:w="86"/><text x="60.3590%" y="911.50">do_el0..</text></g><g><title>el0_svc_common.constprop.0 (86 samples, 5.21%)</title><rect x="60.1090%" y="885" width="5.2058%" height="15" fill="rgb(219,7,42)" fg:x="993" fg:w="86"/><text x="60.3590%" y="895.50">el0_sv..</text></g><g><title>invoke_syscall (83 samples, 5.02%)</title><rect x="60.2906%" y="869" width="5.0242%" height="15" fill="rgb(234,209,2)" fg:x="996" fg:w="83"/><text x="60.5406%" y="879.50">invoke..</text></g><g><title>el1h_64_irq (1 samples, 0.06%)</title><rect x="65.2542%" y="853" width="0.0605%" height="15" fill="rgb(223,86,28)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="863.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.06%)</title><rect x="65.2542%" y="837" width="0.0605%" height="15" fill="rgb(231,46,5)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="847.50"></text></g><g><title>el1_interrupt (1 samples, 0.06%)</title><rect x="65.2542%" y="821" width="0.0605%" height="15" fill="rgb(254,19,43)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="831.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="65.2542%" y="805" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="815.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="65.2542%" y="789" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="799.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="65.2542%" y="773" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="783.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="65.2542%" y="757" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="767.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="65.2542%" y="741" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="751.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="65.2542%" y="725" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="735.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="65.2542%" y="709" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="719.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="65.2542%" y="693" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="703.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="65.2542%" y="677" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="687.50"></text></g><g><title>napi_complete_done (1 samples, 0.06%)</title><rect x="65.2542%" y="661" width="0.0605%" height="15" fill="rgb(226,216,13)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.06%)</title><rect x="65.2542%" y="645" width="0.0605%" height="15" fill="rgb(216,153,44)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.06%)</title><rect x="65.2542%" y="629" width="0.0605%" height="15" fill="rgb(227,176,26)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="639.50"></text></g><g><title>ip_list_rcv (1 samples, 0.06%)</title><rect x="65.2542%" y="613" width="0.0605%" height="15" fill="rgb(215,38,16)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="623.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.06%)</title><rect x="65.2542%" y="597" width="0.0605%" height="15" fill="rgb(207,166,9)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (1 samples, 0.06%)</title><rect x="65.2542%" y="581" width="0.0605%" height="15" fill="rgb(223,178,14)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="591.50"></text></g><g><title>ip_local_deliver (1 samples, 0.06%)</title><rect x="65.2542%" y="565" width="0.0605%" height="15" fill="rgb(221,216,39)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="575.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="65.2542%" y="549" width="0.0605%" height="15" fill="rgb(220,94,29)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="559.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="65.2542%" y="533" width="0.0605%" height="15" fill="rgb(207,19,13)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="543.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="65.2542%" y="517" width="0.0605%" height="15" fill="rgb(224,38,0)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="65.2542%" y="501" width="0.0605%" height="15" fill="rgb(228,220,18)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="511.50"></text></g><g><title>tcp_parse_aligned_timestamp.part.0 (1 samples, 0.06%)</title><rect x="65.2542%" y="485" width="0.0605%" height="15" fill="rgb(240,148,52)" fg:x="1078" fg:w="1"/><text x="65.5042%" y="495.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (3 samples, 0.18%)</title><rect x="65.3148%" y="869" width="0.1816%" height="15" fill="rgb(218,176,25)" fg:x="1079" fg:w="3"/><text x="65.5648%" y="879.50"></text></g><g><title>__rseq_handle_notify_resume (5 samples, 0.30%)</title><rect x="65.3148%" y="885" width="0.3027%" height="15" fill="rgb(205,7,40)" fg:x="1079" fg:w="5"/><text x="65.5648%" y="895.50"></text></g><g><title>rseq_update_cpu_id (2 samples, 0.12%)</title><rect x="65.4964%" y="869" width="0.1211%" height="15" fill="rgb(211,154,25)" fg:x="1082" fg:w="2"/><text x="65.7464%" y="879.50"></text></g><g><title>blkcg_maybe_throttle_current (1 samples, 0.06%)</title><rect x="65.6174%" y="885" width="0.0605%" height="15" fill="rgb(227,111,33)" fg:x="1084" fg:w="1"/><text x="65.8674%" y="895.50"></text></g><g><title>acct_collect (1 samples, 0.06%)</title><rect x="65.6780%" y="821" width="0.0605%" height="15" fill="rgb(234,220,40)" fg:x="1085" fg:w="1"/><text x="65.9280%" y="831.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (98 samples, 5.93%)</title><rect x="59.8668%" y="965" width="5.9322%" height="15" fill="rgb(237,57,41)" fg:x="989" fg:w="98"/><text x="60.1168%" y="975.50">parking_..</text></g><g><title>syscall (97 samples, 5.87%)</title><rect x="59.9274%" y="949" width="5.8717%" height="15" fill="rgb(207,84,5)" fg:x="990" fg:w="97"/><text x="60.1774%" y="959.50">syscall</text></g><g><title>el0t_64_sync_handler (95 samples, 5.75%)</title><rect x="60.0484%" y="933" width="5.7506%" height="15" fill="rgb(232,35,33)" fg:x="992" fg:w="95"/><text x="60.2984%" y="943.50">el0t_64..</text></g><g><title>el0_svc (95 samples, 5.75%)</title><rect x="60.0484%" y="917" width="5.7506%" height="15" fill="rgb(225,46,33)" fg:x="992" fg:w="95"/><text x="60.2984%" y="927.50">el0_svc</text></g><g><title>do_notify_resume (8 samples, 0.48%)</title><rect x="65.3148%" y="901" width="0.4843%" height="15" fill="rgb(233,34,11)" fg:x="1079" fg:w="8"/><text x="65.5648%" y="911.50"></text></g><g><title>do_signal (2 samples, 0.12%)</title><rect x="65.6780%" y="885" width="0.1211%" height="15" fill="rgb(244,154,24)" fg:x="1085" fg:w="2"/><text x="65.9280%" y="895.50"></text></g><g><title>get_signal (2 samples, 0.12%)</title><rect x="65.6780%" y="869" width="0.1211%" height="15" fill="rgb(219,222,19)" fg:x="1085" fg:w="2"/><text x="65.9280%" y="879.50"></text></g><g><title>do_group_exit (2 samples, 0.12%)</title><rect x="65.6780%" y="853" width="0.1211%" height="15" fill="rgb(241,5,8)" fg:x="1085" fg:w="2"/><text x="65.9280%" y="863.50"></text></g><g><title>do_exit (2 samples, 0.12%)</title><rect x="65.6780%" y="837" width="0.1211%" height="15" fill="rgb(238,144,25)" fg:x="1085" fg:w="2"/><text x="65.9280%" y="847.50"></text></g><g><title>exit_mm (1 samples, 0.06%)</title><rect x="65.7385%" y="821" width="0.0605%" height="15" fill="rgb(234,156,52)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="831.50"></text></g><g><title>mmput (1 samples, 0.06%)</title><rect x="65.7385%" y="805" width="0.0605%" height="15" fill="rgb(228,125,30)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="815.50"></text></g><g><title>__mmput (1 samples, 0.06%)</title><rect x="65.7385%" y="789" width="0.0605%" height="15" fill="rgb(214,184,31)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="799.50"></text></g><g><title>exit_mmap (1 samples, 0.06%)</title><rect x="65.7385%" y="773" width="0.0605%" height="15" fill="rgb(221,135,18)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="783.50"></text></g><g><title>unmap_vmas (1 samples, 0.06%)</title><rect x="65.7385%" y="757" width="0.0605%" height="15" fill="rgb(216,135,47)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="767.50"></text></g><g><title>unmap_page_range (1 samples, 0.06%)</title><rect x="65.7385%" y="741" width="0.0605%" height="15" fill="rgb(216,127,1)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="751.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.06%)</title><rect x="65.7385%" y="725" width="0.0605%" height="15" fill="rgb(238,94,21)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="735.50"></text></g><g><title>zap_pte_range (1 samples, 0.06%)</title><rect x="65.7385%" y="709" width="0.0605%" height="15" fill="rgb(217,190,31)" fg:x="1086" fg:w="1"/><text x="65.9885%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.06%)</title><rect x="65.9806%" y="949" width="0.0605%" height="15" fill="rgb(227,203,15)" fg:x="1090" fg:w="1"/><text x="66.2306%" y="959.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.06%)</title><rect x="65.9806%" y="933" width="0.0605%" height="15" fill="rgb(231,211,11)" fg:x="1090" fg:w="1"/><text x="66.2306%" y="943.50"></text></g><g><title>std::time::Instant::checked_duration_since (2 samples, 0.12%)</title><rect x="66.0412%" y="949" width="0.1211%" height="15" fill="rgb(212,126,13)" fg:x="1091" fg:w="2"/><text x="66.2912%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (2 samples, 0.12%)</title><rect x="66.0412%" y="933" width="0.1211%" height="15" fill="rgb(229,32,31)" fg:x="1091" fg:w="2"/><text x="66.2912%" y="943.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (2 samples, 0.12%)</title><rect x="66.0412%" y="917" width="0.1211%" height="15" fill="rgb(253,57,38)" fg:x="1091" fg:w="2"/><text x="66.2912%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.06%)</title><rect x="66.1017%" y="901" width="0.0605%" height="15" fill="rgb(219,198,7)" fg:x="1092" fg:w="1"/><text x="66.3517%" y="911.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.06%)</title><rect x="66.1017%" y="885" width="0.0605%" height="15" fill="rgb(240,89,21)" fg:x="1092" fg:w="1"/><text x="66.3517%" y="895.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (3 samples, 0.18%)</title><rect x="66.1622%" y="949" width="0.1816%" height="15" fill="rgb(231,124,28)" fg:x="1093" fg:w="3"/><text x="66.4122%" y="959.50"></text></g><g><title>__aarch64_cas1_acq (2 samples, 0.12%)</title><rect x="66.2228%" y="933" width="0.1211%" height="15" fill="rgb(248,101,23)" fg:x="1094" fg:w="2"/><text x="66.4728%" y="943.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="66.4649%" y="933" width="0.0605%" height="15" fill="rgb(229,6,26)" fg:x="1098" fg:w="1"/><text x="66.7149%" y="943.50"></text></g><g><title>__aarch64_cas8_acq_rel (1 samples, 0.06%)</title><rect x="66.5254%" y="933" width="0.0605%" height="15" fill="rgb(211,86,19)" fg:x="1099" fg:w="1"/><text x="66.7754%" y="943.50"></text></g><g><title>mio::event::event::Event::token (1 samples, 0.06%)</title><rect x="66.5860%" y="933" width="0.0605%" height="15" fill="rgb(205,138,27)" fg:x="1100" fg:w="1"/><text x="66.8360%" y="943.50"></text></g><g><title>mio::poll::Poll::poll (1 samples, 0.06%)</title><rect x="66.6465%" y="933" width="0.0605%" height="15" fill="rgb(231,221,3)" fg:x="1101" fg:w="1"/><text x="66.8965%" y="943.50"></text></g><g><title>ena_clean_rx_irq (1 samples, 0.06%)</title><rect x="67.4334%" y="549" width="0.0605%" height="15" fill="rgb(226,177,46)" fg:x="1114" fg:w="1"/><text x="67.6834%" y="559.50"></text></g><g><title>ena_rx_skb (1 samples, 0.06%)</title><rect x="67.4334%" y="533" width="0.0605%" height="15" fill="rgb(212,94,10)" fg:x="1114" fg:w="1"/><text x="67.6834%" y="543.50"></text></g><g><title>dma_unmap_page_attrs (1 samples, 0.06%)</title><rect x="67.4334%" y="517" width="0.0605%" height="15" fill="rgb(206,179,15)" fg:x="1114" fg:w="1"/><text x="67.6834%" y="527.50"></text></g><g><title>__fdget (3 samples, 0.18%)</title><rect x="67.3729%" y="773" width="0.1816%" height="15" fill="rgb(239,45,19)" fg:x="1113" fg:w="3"/><text x="67.6229%" y="783.50"></text></g><g><title>__fget_light (3 samples, 0.18%)</title><rect x="67.3729%" y="757" width="0.1816%" height="15" fill="rgb(243,103,32)" fg:x="1113" fg:w="3"/><text x="67.6229%" y="767.50"></text></g><g><title>el1h_64_irq (2 samples, 0.12%)</title><rect x="67.4334%" y="741" width="0.1211%" height="15" fill="rgb(223,86,28)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="751.50"></text></g><g><title>el1h_64_irq_handler (2 samples, 0.12%)</title><rect x="67.4334%" y="725" width="0.1211%" height="15" fill="rgb(231,46,5)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="735.50"></text></g><g><title>el1_interrupt (2 samples, 0.12%)</title><rect x="67.4334%" y="709" width="0.1211%" height="15" fill="rgb(254,19,43)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="719.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.12%)</title><rect x="67.4334%" y="693" width="0.1211%" height="15" fill="rgb(240,18,12)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="703.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.12%)</title><rect x="67.4334%" y="677" width="0.1211%" height="15" fill="rgb(221,172,49)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="687.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.12%)</title><rect x="67.4334%" y="661" width="0.1211%" height="15" fill="rgb(223,89,53)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="671.50"></text></g><g><title>call_on_irq_stack (2 samples, 0.12%)</title><rect x="67.4334%" y="645" width="0.1211%" height="15" fill="rgb(247,223,36)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="655.50"></text></g><g><title>____do_softirq (2 samples, 0.12%)</title><rect x="67.4334%" y="629" width="0.1211%" height="15" fill="rgb(212,141,15)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="639.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.12%)</title><rect x="67.4334%" y="613" width="0.1211%" height="15" fill="rgb(249,91,22)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="623.50"></text></g><g><title>net_rx_action (2 samples, 0.12%)</title><rect x="67.4334%" y="597" width="0.1211%" height="15" fill="rgb(231,11,52)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="607.50"></text></g><g><title>__napi_poll (2 samples, 0.12%)</title><rect x="67.4334%" y="581" width="0.1211%" height="15" fill="rgb(206,61,33)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="591.50"></text></g><g><title>ena_io_poll (2 samples, 0.12%)</title><rect x="67.4334%" y="565" width="0.1211%" height="15" fill="rgb(220,65,30)" fg:x="1114" fg:w="2"/><text x="67.6834%" y="575.50"></text></g><g><title>napi_complete_done (1 samples, 0.06%)</title><rect x="67.4939%" y="549" width="0.0605%" height="15" fill="rgb(226,216,13)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="559.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.06%)</title><rect x="67.4939%" y="533" width="0.0605%" height="15" fill="rgb(216,153,44)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.06%)</title><rect x="67.4939%" y="517" width="0.0605%" height="15" fill="rgb(227,176,26)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="527.50"></text></g><g><title>ip_list_rcv (1 samples, 0.06%)</title><rect x="67.4939%" y="501" width="0.0605%" height="15" fill="rgb(215,38,16)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="511.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.06%)</title><rect x="67.4939%" y="485" width="0.0605%" height="15" fill="rgb(207,166,9)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="495.50"></text></g><g><title>ip_sublist_rcv_finish (1 samples, 0.06%)</title><rect x="67.4939%" y="469" width="0.0605%" height="15" fill="rgb(223,178,14)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="479.50"></text></g><g><title>ip_local_deliver (1 samples, 0.06%)</title><rect x="67.4939%" y="453" width="0.0605%" height="15" fill="rgb(221,216,39)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="463.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="67.4939%" y="437" width="0.0605%" height="15" fill="rgb(220,94,29)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="67.4939%" y="421" width="0.0605%" height="15" fill="rgb(207,19,13)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="431.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="67.4939%" y="405" width="0.0605%" height="15" fill="rgb(224,38,0)" fg:x="1115" fg:w="1"/><text x="67.7439%" y="415.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.06%)</title><rect x="68.0387%" y="741" width="0.0605%" height="15" fill="rgb(224,110,12)" fg:x="1124" fg:w="1"/><text x="68.2887%" y="751.50"></text></g><g><title>ep_send_events (4 samples, 0.24%)</title><rect x="67.9782%" y="757" width="0.2421%" height="15" fill="rgb(223,222,42)" fg:x="1123" fg:w="4"/><text x="68.2282%" y="767.50"></text></g><g><title>ep_item_poll.isra.0 (2 samples, 0.12%)</title><rect x="68.0993%" y="741" width="0.1211%" height="15" fill="rgb(236,64,34)" fg:x="1125" fg:w="2"/><text x="68.3493%" y="751.50"></text></g><g><title>sock_poll (1 samples, 0.06%)</title><rect x="68.1598%" y="725" width="0.0605%" height="15" fill="rgb(224,152,37)" fg:x="1126" fg:w="1"/><text x="68.4098%" y="735.50"></text></g><g><title>tcp_poll (1 samples, 0.06%)</title><rect x="68.1598%" y="709" width="0.0605%" height="15" fill="rgb(233,143,3)" fg:x="1126" fg:w="1"/><text x="68.4098%" y="719.50"></text></g><g><title>mutex_lock (1 samples, 0.06%)</title><rect x="68.2203%" y="757" width="0.0605%" height="15" fill="rgb(218,205,15)" fg:x="1127" fg:w="1"/><text x="68.4703%" y="767.50"></text></g><g><title>hrtimer_init_sleeper (3 samples, 0.18%)</title><rect x="68.2809%" y="741" width="0.1816%" height="15" fill="rgb(224,203,45)" fg:x="1128" fg:w="3"/><text x="68.5309%" y="751.50"></text></g><g><title>hrtimer_init_sleeper (6 samples, 0.36%)</title><rect x="68.4625%" y="725" width="0.3632%" height="15" fill="rgb(224,203,45)" fg:x="1131" fg:w="6"/><text x="68.7125%" y="735.50"></text></g><g><title>__hrtimer_init (5 samples, 0.30%)</title><rect x="68.5230%" y="709" width="0.3027%" height="15" fill="rgb(231,81,13)" fg:x="1132" fg:w="5"/><text x="68.7730%" y="719.50"></text></g><g><title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="68.8257%" y="725" width="0.0605%" height="15" fill="rgb(231,227,51)" fg:x="1137" fg:w="1"/><text x="69.0757%" y="735.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (4 samples, 0.24%)</title><rect x="68.8862%" y="725" width="0.2421%" height="15" fill="rgb(221,182,24)" fg:x="1138" fg:w="4"/><text x="69.1362%" y="735.50"></text></g><g><title>ena_rx_skb (1 samples, 0.06%)</title><rect x="73.6683%" y="469" width="0.0605%" height="15" fill="rgb(212,94,10)" fg:x="1217" fg:w="1"/><text x="73.9183%" y="479.50"></text></g><g><title>build_skb (1 samples, 0.06%)</title><rect x="73.6683%" y="453" width="0.0605%" height="15" fill="rgb(215,24,34)" fg:x="1217" fg:w="1"/><text x="73.9183%" y="463.50"></text></g><g><title>__build_skb (1 samples, 0.06%)</title><rect x="73.6683%" y="437" width="0.0605%" height="15" fill="rgb(246,144,32)" fg:x="1217" fg:w="1"/><text x="73.9183%" y="447.50"></text></g><g><title>__build_skb_around (1 samples, 0.06%)</title><rect x="73.6683%" y="421" width="0.0605%" height="15" fill="rgb(254,205,12)" fg:x="1217" fg:w="1"/><text x="73.9183%" y="431.50"></text></g><g><title>inet_gro_receive (2 samples, 0.12%)</title><rect x="73.7288%" y="437" width="0.1211%" height="15" fill="rgb(205,21,43)" fg:x="1218" fg:w="2"/><text x="73.9788%" y="447.50"></text></g><g><title>tcp4_gro_receive (2 samples, 0.12%)</title><rect x="73.7288%" y="421" width="0.1211%" height="15" fill="rgb(205,44,26)" fg:x="1218" fg:w="2"/><text x="73.9788%" y="431.50"></text></g><g><title>tcp_gro_receive (2 samples, 0.12%)</title><rect x="73.7288%" y="405" width="0.1211%" height="15" fill="rgb(251,56,48)" fg:x="1218" fg:w="2"/><text x="73.9788%" y="415.50"></text></g><g><title>skb_gro_receive (2 samples, 0.12%)</title><rect x="73.7288%" y="389" width="0.1211%" height="15" fill="rgb(216,79,34)" fg:x="1218" fg:w="2"/><text x="73.9788%" y="399.50"></text></g><g><title>ena_clean_rx_irq (5 samples, 0.30%)</title><rect x="73.6077%" y="485" width="0.3027%" height="15" fill="rgb(226,177,46)" fg:x="1216" fg:w="5"/><text x="73.8577%" y="495.50"></text></g><g><title>napi_gro_receive (3 samples, 0.18%)</title><rect x="73.7288%" y="469" width="0.1816%" height="15" fill="rgb(248,45,29)" fg:x="1218" fg:w="3"/><text x="73.9788%" y="479.50"></text></g><g><title>dev_gro_receive (3 samples, 0.18%)</title><rect x="73.7288%" y="453" width="0.1816%" height="15" fill="rgb(219,73,15)" fg:x="1218" fg:w="3"/><text x="73.9788%" y="463.50"></text></g><g><title>napi_gro_complete.constprop.0 (1 samples, 0.06%)</title><rect x="73.8499%" y="437" width="0.0605%" height="15" fill="rgb(219,33,1)" fg:x="1220" fg:w="1"/><text x="74.0999%" y="447.50"></text></g><g><title>inet_gro_complete (1 samples, 0.06%)</title><rect x="73.8499%" y="421" width="0.0605%" height="15" fill="rgb(234,107,25)" fg:x="1220" fg:w="1"/><text x="74.0999%" y="431.50"></text></g><g><title>csum_tcpudp_nofold (1 samples, 0.06%)</title><rect x="73.8499%" y="405" width="0.0605%" height="15" fill="rgb(222,80,14)" fg:x="1220" fg:w="1"/><text x="74.0999%" y="415.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.06%)</title><rect x="73.9104%" y="405" width="0.0605%" height="15" fill="rgb(246,15,53)" fg:x="1221" fg:w="1"/><text x="74.1604%" y="415.50"></text></g><g><title>ip_route_use_hint (1 samples, 0.06%)</title><rect x="73.9104%" y="389" width="0.0605%" height="15" fill="rgb(253,15,43)" fg:x="1221" fg:w="1"/><text x="74.1604%" y="399.50"></text></g><g><title>fib_validate_source (1 samples, 0.06%)</title><rect x="73.9104%" y="373" width="0.0605%" height="15" fill="rgb(219,198,12)" fg:x="1221" fg:w="1"/><text x="74.1604%" y="383.50"></text></g><g><title>__fib_validate_source (1 samples, 0.06%)</title><rect x="73.9104%" y="357" width="0.0605%" height="15" fill="rgb(205,137,30)" fg:x="1221" fg:w="1"/><text x="74.1604%" y="367.50"></text></g><g><title>fib_table_lookup (1 samples, 0.06%)</title><rect x="73.9104%" y="341" width="0.0605%" height="15" fill="rgb(232,66,44)" fg:x="1221" fg:w="1"/><text x="74.1604%" y="351.50"></text></g><g><title>tcp_filter (1 samples, 0.06%)</title><rect x="73.9709%" y="325" width="0.0605%" height="15" fill="rgb(222,113,40)" fg:x="1222" fg:w="1"/><text x="74.2209%" y="335.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="73.9709%" y="309" width="0.0605%" height="15" fill="rgb(247,83,44)" fg:x="1222" fg:w="1"/><text x="74.2209%" y="319.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="73.9709%" y="293" width="0.0605%" height="15" fill="rgb(241,95,48)" fg:x="1222" fg:w="1"/><text x="74.2209%" y="303.50"></text></g><g><title>netlbl_enabled (1 samples, 0.06%)</title><rect x="73.9709%" y="277" width="0.0605%" height="15" fill="rgb(223,43,13)" fg:x="1222" fg:w="1"/><text x="74.2209%" y="287.50"></text></g><g><title>__tcp_ack_snd_check (2 samples, 0.12%)</title><rect x="74.0315%" y="293" width="0.1211%" height="15" fill="rgb(209,184,50)" fg:x="1223" fg:w="2"/><text x="74.2815%" y="303.50"></text></g><g><title>tcp_send_ack (2 samples, 0.12%)</title><rect x="74.0315%" y="277" width="0.1211%" height="15" fill="rgb(244,175,51)" fg:x="1223" fg:w="2"/><text x="74.2815%" y="287.50"></text></g><g><title>__tcp_send_ack.part.0 (2 samples, 0.12%)</title><rect x="74.0315%" y="261" width="0.1211%" height="15" fill="rgb(250,64,3)" fg:x="1223" fg:w="2"/><text x="74.2815%" y="271.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.12%)</title><rect x="74.0315%" y="245" width="0.1211%" height="15" fill="rgb(238,106,36)" fg:x="1223" fg:w="2"/><text x="74.2815%" y="255.50"></text></g><g><title>ip_queue_xmit (2 samples, 0.12%)</title><rect x="74.0315%" y="229" width="0.1211%" height="15" fill="rgb(241,58,19)" fg:x="1223" fg:w="2"/><text x="74.2815%" y="239.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.12%)</title><rect x="74.0315%" y="213" width="0.1211%" height="15" fill="rgb(224,11,5)" fg:x="1223" fg:w="2"/><text x="74.2815%" y="223.50"></text></g><g><title>ip_output (1 samples, 0.06%)</title><rect x="74.0920%" y="197" width="0.0605%" height="15" fill="rgb(213,11,33)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="207.50"></text></g><g><title>ip_finish_output (1 samples, 0.06%)</title><rect x="74.0920%" y="181" width="0.0605%" height="15" fill="rgb(215,36,54)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="191.50"></text></g><g><title>__ip_finish_output (1 samples, 0.06%)</title><rect x="74.0920%" y="165" width="0.0605%" height="15" fill="rgb(252,12,27)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="175.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="74.0920%" y="149" width="0.0605%" height="15" fill="rgb(219,227,11)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="159.50"></text></g><g><title>neigh_hh_output (1 samples, 0.06%)</title><rect x="74.0920%" y="133" width="0.0605%" height="15" fill="rgb(241,98,1)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="143.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="74.0920%" y="117" width="0.0605%" height="15" fill="rgb(232,116,37)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="127.50"></text></g><g><title>__dev_xmit_skb (1 samples, 0.06%)</title><rect x="74.0920%" y="101" width="0.0605%" height="15" fill="rgb(242,199,22)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="111.50"></text></g><g><title>sch_direct_xmit (1 samples, 0.06%)</title><rect x="74.0920%" y="85" width="0.0605%" height="15" fill="rgb(222,128,44)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="95.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="74.0920%" y="69" width="0.0605%" height="15" fill="rgb(251,86,39)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="79.50"></text></g><g><title>ena_start_xmit (1 samples, 0.06%)</title><rect x="74.0920%" y="53" width="0.0605%" height="15" fill="rgb(224,126,50)" fg:x="1224" fg:w="1"/><text x="74.3420%" y="63.50"></text></g><g><title>tcp_ack (1 samples, 0.06%)</title><rect x="74.1525%" y="293" width="0.0605%" height="15" fill="rgb(213,228,3)" fg:x="1225" fg:w="1"/><text x="74.4025%" y="303.50"></text></g><g><title>tcp_ack_update_window.isra.0 (1 samples, 0.06%)</title><rect x="74.1525%" y="277" width="0.0605%" height="15" fill="rgb(208,192,17)" fg:x="1225" fg:w="1"/><text x="74.4025%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.30%)</title><rect x="73.9709%" y="357" width="0.3027%" height="15" fill="rgb(207,19,13)" fg:x="1222" fg:w="5"/><text x="74.2209%" y="367.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.30%)</title><rect x="73.9709%" y="341" width="0.3027%" height="15" fill="rgb(224,38,0)" fg:x="1222" fg:w="5"/><text x="74.2209%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.24%)</title><rect x="74.0315%" y="325" width="0.2421%" height="15" fill="rgb(228,220,18)" fg:x="1223" fg:w="4"/><text x="74.2815%" y="335.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.24%)</title><rect x="74.0315%" y="309" width="0.2421%" height="15" fill="rgb(224,50,47)" fg:x="1223" fg:w="4"/><text x="74.2815%" y="319.50"></text></g><g><title>tcp_data_queue (1 samples, 0.06%)</title><rect x="74.2131%" y="293" width="0.0605%" height="15" fill="rgb(221,5,12)" fg:x="1226" fg:w="1"/><text x="74.4631%" y="303.50"></text></g><g><title>tcp_try_rmem_schedule (1 samples, 0.06%)</title><rect x="74.2131%" y="277" width="0.0605%" height="15" fill="rgb(246,152,26)" fg:x="1226" fg:w="1"/><text x="74.4631%" y="287.50"></text></g><g><title>__sk_mem_schedule (1 samples, 0.06%)</title><rect x="74.2131%" y="261" width="0.0605%" height="15" fill="rgb(219,50,38)" fg:x="1226" fg:w="1"/><text x="74.4631%" y="271.50"></text></g><g><title>__sk_mem_raise_allocated (1 samples, 0.06%)</title><rect x="74.2131%" y="245" width="0.0605%" height="15" fill="rgb(232,27,1)" fg:x="1226" fg:w="1"/><text x="74.4631%" y="255.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="74.2131%" y="229" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="1226" fg:w="1"/><text x="74.4631%" y="239.50"></text></g><g><title>net_rx_action (12 samples, 0.73%)</title><rect x="73.6077%" y="533" width="0.7264%" height="15" fill="rgb(231,11,52)" fg:x="1216" fg:w="12"/><text x="73.8577%" y="543.50"></text></g><g><title>__napi_poll (12 samples, 0.73%)</title><rect x="73.6077%" y="517" width="0.7264%" height="15" fill="rgb(206,61,33)" fg:x="1216" fg:w="12"/><text x="73.8577%" y="527.50"></text></g><g><title>ena_io_poll (12 samples, 0.73%)</title><rect x="73.6077%" y="501" width="0.7264%" height="15" fill="rgb(220,65,30)" fg:x="1216" fg:w="12"/><text x="73.8577%" y="511.50"></text></g><g><title>napi_complete_done (7 samples, 0.42%)</title><rect x="73.9104%" y="485" width="0.4237%" height="15" fill="rgb(226,216,13)" fg:x="1221" fg:w="7"/><text x="74.1604%" y="495.50"></text></g><g><title>netif_receive_skb_list_internal (7 samples, 0.42%)</title><rect x="73.9104%" y="469" width="0.4237%" height="15" fill="rgb(216,153,44)" fg:x="1221" fg:w="7"/><text x="74.1604%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (7 samples, 0.42%)</title><rect x="73.9104%" y="453" width="0.4237%" height="15" fill="rgb(227,176,26)" fg:x="1221" fg:w="7"/><text x="74.1604%" y="463.50"></text></g><g><title>ip_list_rcv (7 samples, 0.42%)</title><rect x="73.9104%" y="437" width="0.4237%" height="15" fill="rgb(215,38,16)" fg:x="1221" fg:w="7"/><text x="74.1604%" y="447.50"></text></g><g><title>ip_sublist_rcv (7 samples, 0.42%)</title><rect x="73.9104%" y="421" width="0.4237%" height="15" fill="rgb(207,166,9)" fg:x="1221" fg:w="7"/><text x="74.1604%" y="431.50"></text></g><g><title>ip_sublist_rcv_finish (6 samples, 0.36%)</title><rect x="73.9709%" y="405" width="0.3632%" height="15" fill="rgb(223,178,14)" fg:x="1222" fg:w="6"/><text x="74.2209%" y="415.50"></text></g><g><title>ip_local_deliver (6 samples, 0.36%)</title><rect x="73.9709%" y="389" width="0.3632%" height="15" fill="rgb(221,216,39)" fg:x="1222" fg:w="6"/><text x="74.2209%" y="399.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.36%)</title><rect x="73.9709%" y="373" width="0.3632%" height="15" fill="rgb(220,94,29)" fg:x="1222" fg:w="6"/><text x="74.2209%" y="383.50"></text></g><g><title>raw_local_deliver (1 samples, 0.06%)</title><rect x="74.2736%" y="357" width="0.0605%" height="15" fill="rgb(236,87,27)" fg:x="1227" fg:w="1"/><text x="74.5236%" y="367.50"></text></g><g><title>schedule_hrtimeout_range (101 samples, 6.11%)</title><rect x="68.2809%" y="757" width="6.1138%" height="15" fill="rgb(207,172,21)" fg:x="1128" fg:w="101"/><text x="68.5309%" y="767.50">schedule..</text></g><g><title>schedule_hrtimeout_range_clock (98 samples, 5.93%)</title><rect x="68.4625%" y="741" width="5.9322%" height="15" fill="rgb(209,201,27)" fg:x="1131" fg:w="98"/><text x="68.7125%" y="751.50">schedule..</text></g><g><title>schedule (87 samples, 5.27%)</title><rect x="69.1283%" y="725" width="5.2663%" height="15" fill="rgb(213,215,35)" fg:x="1142" fg:w="87"/><text x="69.3783%" y="735.50">schedu..</text></g><g><title>__schedule (87 samples, 5.27%)</title><rect x="69.1283%" y="709" width="5.2663%" height="15" fill="rgb(207,40,26)" fg:x="1142" fg:w="87"/><text x="69.3783%" y="719.50">__sche..</text></g><g><title>arch_local_irq_enable (87 samples, 5.27%)</title><rect x="69.1283%" y="693" width="5.2663%" height="15" fill="rgb(232,216,33)" fg:x="1142" fg:w="87"/><text x="69.3783%" y="703.50">arch_l..</text></g><g><title>el1h_64_irq (20 samples, 1.21%)</title><rect x="73.1840%" y="677" width="1.2107%" height="15" fill="rgb(223,86,28)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="687.50"></text></g><g><title>el1h_64_irq_handler (20 samples, 1.21%)</title><rect x="73.1840%" y="661" width="1.2107%" height="15" fill="rgb(231,46,5)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="671.50"></text></g><g><title>el1_interrupt (20 samples, 1.21%)</title><rect x="73.1840%" y="645" width="1.2107%" height="15" fill="rgb(254,19,43)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="655.50"></text></g><g><title>irq_exit_rcu (20 samples, 1.21%)</title><rect x="73.1840%" y="629" width="1.2107%" height="15" fill="rgb(240,18,12)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="639.50"></text></g><g><title>__irq_exit_rcu (20 samples, 1.21%)</title><rect x="73.1840%" y="613" width="1.2107%" height="15" fill="rgb(221,172,49)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="623.50"></text></g><g><title>do_softirq_own_stack (20 samples, 1.21%)</title><rect x="73.1840%" y="597" width="1.2107%" height="15" fill="rgb(223,89,53)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="607.50"></text></g><g><title>call_on_irq_stack (20 samples, 1.21%)</title><rect x="73.1840%" y="581" width="1.2107%" height="15" fill="rgb(247,223,36)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="591.50"></text></g><g><title>____do_softirq (20 samples, 1.21%)</title><rect x="73.1840%" y="565" width="1.2107%" height="15" fill="rgb(212,141,15)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="575.50"></text></g><g><title>__softirqentry_text_start (20 samples, 1.21%)</title><rect x="73.1840%" y="549" width="1.2107%" height="15" fill="rgb(249,91,22)" fg:x="1209" fg:w="20"/><text x="73.4340%" y="559.50"></text></g><g><title>run_timer_softirq (1 samples, 0.06%)</title><rect x="74.3341%" y="533" width="0.0605%" height="15" fill="rgb(214,132,54)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="543.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.06%)</title><rect x="74.3341%" y="517" width="0.0605%" height="15" fill="rgb(211,131,40)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="527.50"></text></g><g><title>call_timer_fn (1 samples, 0.06%)</title><rect x="74.3341%" y="501" width="0.0605%" height="15" fill="rgb(232,156,7)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="511.50"></text></g><g><title>tcp_delack_timer (1 samples, 0.06%)</title><rect x="74.3341%" y="485" width="0.0605%" height="15" fill="rgb(234,12,37)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="495.50"></text></g><g><title>tcp_delack_timer_handler (1 samples, 0.06%)</title><rect x="74.3341%" y="469" width="0.0605%" height="15" fill="rgb(246,42,52)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="479.50"></text></g><g><title>tcp_send_ack (1 samples, 0.06%)</title><rect x="74.3341%" y="453" width="0.0605%" height="15" fill="rgb(244,175,51)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="463.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.06%)</title><rect x="74.3341%" y="437" width="0.0605%" height="15" fill="rgb(250,64,3)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="447.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="74.3341%" y="421" width="0.0605%" height="15" fill="rgb(238,106,36)" fg:x="1228" fg:w="1"/><text x="74.5841%" y="431.50"></text></g><g><title>select_estimate_accuracy (1 samples, 0.06%)</title><rect x="74.3947%" y="757" width="0.0605%" height="15" fill="rgb(219,208,33)" fg:x="1229" fg:w="1"/><text x="74.6447%" y="767.50"></text></g><g><title>do_epoll_pwait.part.0 (123 samples, 7.45%)</title><rect x="67.1308%" y="805" width="7.4455%" height="15" fill="rgb(254,74,7)" fg:x="1109" fg:w="123"/><text x="67.3808%" y="815.50">do_epoll_p..</text></g><g><title>do_epoll_wait (121 samples, 7.32%)</title><rect x="67.2518%" y="789" width="7.3245%" height="15" fill="rgb(231,186,11)" fg:x="1111" fg:w="121"/><text x="67.5018%" y="799.50">do_epoll_w..</text></g><g><title>ep_poll (116 samples, 7.02%)</title><rect x="67.5545%" y="773" width="7.0218%" height="15" fill="rgb(238,129,13)" fg:x="1116" fg:w="116"/><text x="67.8045%" y="783.50">ep_poll</text></g><g><title>set_normalized_timespec64 (2 samples, 0.12%)</title><rect x="74.4552%" y="757" width="0.1211%" height="15" fill="rgb(245,82,4)" fg:x="1230" fg:w="2"/><text x="74.7052%" y="767.50"></text></g><g><title>__arm64_sys_epoll_pwait (125 samples, 7.57%)</title><rect x="67.1308%" y="821" width="7.5666%" height="15" fill="rgb(208,102,34)" fg:x="1109" fg:w="125"/><text x="67.3808%" y="831.50">__arm64_sy..</text></g><g><title>ktime_get_ts64 (2 samples, 0.12%)</title><rect x="74.5763%" y="805" width="0.1211%" height="15" fill="rgb(212,111,10)" fg:x="1232" fg:w="2"/><text x="74.8263%" y="815.50"></text></g><g><title>arch_counter_get_cntvct (1 samples, 0.06%)</title><rect x="74.6368%" y="789" width="0.0605%" height="15" fill="rgb(234,51,43)" fg:x="1233" fg:w="1"/><text x="74.8868%" y="799.50"></text></g><g><title>set_user_sigmask (1 samples, 0.06%)</title><rect x="74.6973%" y="821" width="0.0605%" height="15" fill="rgb(210,197,24)" fg:x="1234" fg:w="1"/><text x="74.9473%" y="831.50"></text></g><g><title>do_el0_svc (130 samples, 7.87%)</title><rect x="66.9492%" y="869" width="7.8692%" height="15" fill="rgb(221,53,8)" fg:x="1106" fg:w="130"/><text x="67.1992%" y="879.50">do_el0_svc</text></g><g><title>el0_svc_common.constprop.0 (130 samples, 7.87%)</title><rect x="66.9492%" y="853" width="7.8692%" height="15" fill="rgb(219,7,42)" fg:x="1106" fg:w="130"/><text x="67.1992%" y="863.50">el0_svc_com..</text></g><g><title>invoke_syscall (127 samples, 7.69%)</title><rect x="67.1308%" y="837" width="7.6877%" height="15" fill="rgb(234,209,2)" fg:x="1109" fg:w="127"/><text x="67.3808%" y="847.50">invoke_sysc..</text></g><g><title>timespec64_add_safe (1 samples, 0.06%)</title><rect x="74.7579%" y="821" width="0.0605%" height="15" fill="rgb(244,181,45)" fg:x="1235" fg:w="1"/><text x="75.0079%" y="831.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (136 samples, 8.23%)</title><rect x="66.7070%" y="933" width="8.2324%" height="15" fill="rgb(208,174,45)" fg:x="1102" fg:w="136"/><text x="66.9570%" y="943.50">mio::sys::u..</text></g><g><title>__GI_epoll_pwait (135 samples, 8.17%)</title><rect x="66.7676%" y="917" width="8.1719%" height="15" fill="rgb(210,147,18)" fg:x="1103" fg:w="135"/><text x="67.0176%" y="927.50">__GI_epoll_..</text></g><g><title>el0t_64_sync_handler (132 samples, 7.99%)</title><rect x="66.9492%" y="901" width="7.9903%" height="15" fill="rgb(232,35,33)" fg:x="1106" fg:w="132"/><text x="67.1992%" y="911.50">el0t_64_syn..</text></g><g><title>el0_svc (132 samples, 7.99%)</title><rect x="66.9492%" y="885" width="7.9903%" height="15" fill="rgb(225,46,33)" fg:x="1106" fg:w="132"/><text x="67.1992%" y="895.50">el0_svc</text></g><g><title>do_notify_resume (2 samples, 0.12%)</title><rect x="74.8184%" y="869" width="0.1211%" height="15" fill="rgb(233,34,11)" fg:x="1236" fg:w="2"/><text x="75.0684%" y="879.50"></text></g><g><title>rseq_update_cpu_id (1 samples, 0.06%)</title><rect x="74.8789%" y="853" width="0.0605%" height="15" fill="rgb(211,154,25)" fg:x="1237" fg:w="1"/><text x="75.1289%" y="863.50"></text></g><g><title>__aarch64_cas1_acq (1 samples, 0.06%)</title><rect x="74.9395%" y="917" width="0.0605%" height="15" fill="rgb(248,101,23)" fg:x="1238" fg:w="1"/><text x="75.1895%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (3 samples, 0.18%)</title><rect x="75.1211%" y="901" width="0.1816%" height="15" fill="rgb(218,87,16)" fg:x="1241" fg:w="3"/><text x="75.3711%" y="911.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.12%)</title><rect x="75.1816%" y="885" width="0.1211%" height="15" fill="rgb(253,102,50)" fg:x="1242" fg:w="2"/><text x="75.4316%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.06%)</title><rect x="75.3027%" y="901" width="0.0605%" height="15" fill="rgb(233,5,11)" fg:x="1244" fg:w="1"/><text x="75.5527%" y="911.50"></text></g><g><title>tokio::runtime::io::Driver::turn (151 samples, 9.14%)</title><rect x="66.3438%" y="949" width="9.1404%" height="15" fill="rgb(211,35,22)" fg:x="1096" fg:w="151"/><text x="66.5938%" y="959.50">tokio::runtim..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (9 samples, 0.54%)</title><rect x="74.9395%" y="933" width="0.5448%" height="15" fill="rgb(251,75,10)" fg:x="1238" fg:w="9"/><text x="75.1895%" y="943.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (8 samples, 0.48%)</title><rect x="75.0000%" y="917" width="0.4843%" height="15" fill="rgb(252,227,42)" fg:x="1239" fg:w="8"/><text x="75.2500%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.12%)</title><rect x="75.3632%" y="901" width="0.1211%" height="15" fill="rgb(244,98,3)" fg:x="1245" fg:w="2"/><text x="75.6132%" y="911.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="75.4237%" y="885" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="895.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="75.4237%" y="869" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="879.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="75.4237%" y="853" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="863.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="75.4237%" y="837" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="847.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="75.4237%" y="821" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="831.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="75.4237%" y="805" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="815.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="75.4237%" y="789" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="799.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="75.4237%" y="773" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="783.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="75.4237%" y="757" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="767.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="75.4237%" y="741" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="751.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="75.4237%" y="725" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="735.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="75.4237%" y="709" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="719.50"></text></g><g><title>napi_complete_done (1 samples, 0.06%)</title><rect x="75.4237%" y="693" width="0.0605%" height="15" fill="rgb(226,216,13)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.06%)</title><rect x="75.4237%" y="677" width="0.0605%" height="15" fill="rgb(216,153,44)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.06%)</title><rect x="75.4237%" y="661" width="0.0605%" height="15" fill="rgb(227,176,26)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="671.50"></text></g><g><title>ip_list_rcv (1 samples, 0.06%)</title><rect x="75.4237%" y="645" width="0.0605%" height="15" fill="rgb(215,38,16)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="655.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.06%)</title><rect x="75.4237%" y="629" width="0.0605%" height="15" fill="rgb(207,166,9)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="639.50"></text></g><g><title>ip_sublist_rcv_finish (1 samples, 0.06%)</title><rect x="75.4237%" y="613" width="0.0605%" height="15" fill="rgb(223,178,14)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="623.50"></text></g><g><title>ip_local_deliver (1 samples, 0.06%)</title><rect x="75.4237%" y="597" width="0.0605%" height="15" fill="rgb(221,216,39)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="607.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="75.4237%" y="581" width="0.0605%" height="15" fill="rgb(220,94,29)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="591.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="75.4237%" y="565" width="0.0605%" height="15" fill="rgb(207,19,13)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="575.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="75.4237%" y="549" width="0.0605%" height="15" fill="rgb(224,38,0)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="559.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="75.4237%" y="533" width="0.0605%" height="15" fill="rgb(228,220,18)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="543.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="75.4237%" y="517" width="0.0605%" height="15" fill="rgb(224,50,47)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="527.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.06%)</title><rect x="75.4237%" y="501" width="0.0605%" height="15" fill="rgb(209,184,50)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="511.50"></text></g><g><title>tcp_send_ack (1 samples, 0.06%)</title><rect x="75.4237%" y="485" width="0.0605%" height="15" fill="rgb(244,175,51)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="495.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.06%)</title><rect x="75.4237%" y="469" width="0.0605%" height="15" fill="rgb(250,64,3)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="479.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="75.4237%" y="453" width="0.0605%" height="15" fill="rgb(238,106,36)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="463.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="75.4237%" y="437" width="0.0605%" height="15" fill="rgb(241,58,19)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="447.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="75.4237%" y="421" width="0.0605%" height="15" fill="rgb(224,11,5)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="431.50"></text></g><g><title>ip_output (1 samples, 0.06%)</title><rect x="75.4237%" y="405" width="0.0605%" height="15" fill="rgb(213,11,33)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="415.50"></text></g><g><title>ip_finish_output (1 samples, 0.06%)</title><rect x="75.4237%" y="389" width="0.0605%" height="15" fill="rgb(215,36,54)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="399.50"></text></g><g><title>__ip_finish_output (1 samples, 0.06%)</title><rect x="75.4237%" y="373" width="0.0605%" height="15" fill="rgb(252,12,27)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="383.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="75.4237%" y="357" width="0.0605%" height="15" fill="rgb(219,227,11)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="367.50"></text></g><g><title>neigh_hh_output (1 samples, 0.06%)</title><rect x="75.4237%" y="341" width="0.0605%" height="15" fill="rgb(241,98,1)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="351.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="75.4237%" y="325" width="0.0605%" height="15" fill="rgb(232,116,37)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="335.50"></text></g><g><title>__dev_xmit_skb (1 samples, 0.06%)</title><rect x="75.4237%" y="309" width="0.0605%" height="15" fill="rgb(242,199,22)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="319.50"></text></g><g><title>sch_direct_xmit (1 samples, 0.06%)</title><rect x="75.4237%" y="293" width="0.0605%" height="15" fill="rgb(222,128,44)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="303.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="75.4237%" y="277" width="0.0605%" height="15" fill="rgb(251,86,39)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="287.50"></text></g><g><title>ena_start_xmit (1 samples, 0.06%)</title><rect x="75.4237%" y="261" width="0.0605%" height="15" fill="rgb(224,126,50)" fg:x="1246" fg:w="1"/><text x="75.6737%" y="271.50"></text></g><g><title>tokio::runtime::signal::Driver::process (2 samples, 0.12%)</title><rect x="75.4843%" y="949" width="0.1211%" height="15" fill="rgb(226,174,53)" fg:x="1247" fg:w="2"/><text x="75.7343%" y="959.50"></text></g><g><title>__aarch64_cas1_rel (1 samples, 0.06%)</title><rect x="75.7264%" y="933" width="0.0605%" height="15" fill="rgb(232,202,28)" fg:x="1251" fg:w="1"/><text x="75.9764%" y="943.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (7 samples, 0.42%)</title><rect x="75.6053%" y="949" width="0.4237%" height="15" fill="rgb(223,173,2)" fg:x="1249" fg:w="7"/><text x="75.8553%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (4 samples, 0.24%)</title><rect x="75.7869%" y="933" width="0.2421%" height="15" fill="rgb(252,61,7)" fg:x="1252" fg:w="4"/><text x="76.0369%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.12%)</title><rect x="75.9080%" y="917" width="0.1211%" height="15" fill="rgb(252,219,36)" fg:x="1254" fg:w="2"/><text x="76.1580%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.06%)</title><rect x="75.9685%" y="901" width="0.0605%" height="15" fill="rgb(222,87,26)" fg:x="1255" fg:w="1"/><text x="76.2185%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (269 samples, 16.28%)</title><rect x="59.8063%" y="981" width="16.2833%" height="15" fill="rgb(222,165,18)" fg:x="988" fg:w="269"/><text x="60.0563%" y="991.50">tokio::runtime::scheduler..</text></g><g><title>tokio::runtime::time::Driver::park_internal (170 samples, 10.29%)</title><rect x="65.7990%" y="965" width="10.2906%" height="15" fill="rgb(219,142,27)" fg:x="1087" fg:w="170"/><text x="66.0490%" y="975.50">tokio::runtime:..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.06%)</title><rect x="76.0291%" y="949" width="0.0605%" height="15" fill="rgb(252,219,36)" fg:x="1256" fg:w="1"/><text x="76.2791%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.06%)</title><rect x="76.0291%" y="933" width="0.0605%" height="15" fill="rgb(222,87,26)" fg:x="1256" fg:w="1"/><text x="76.2791%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (275 samples, 16.65%)</title><rect x="59.5036%" y="997" width="16.6465%" height="15" fill="rgb(244,9,18)" fg:x="983" fg:w="275"/><text x="59.7536%" y="1007.50">tokio::runtime::scheduler:..</text></g><g><title>tokio::runtime::time::Driver::park_internal (1 samples, 0.06%)</title><rect x="76.0896%" y="981" width="0.0605%" height="15" fill="rgb(219,142,27)" fg:x="1257" fg:w="1"/><text x="76.3396%" y="991.50"></text></g><g><title>tokio::runtime::io::Driver::turn (1 samples, 0.06%)</title><rect x="76.0896%" y="965" width="0.0605%" height="15" fill="rgb(211,35,22)" fg:x="1257" fg:w="1"/><text x="76.3396%" y="975.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.06%)</title><rect x="76.0896%" y="949" width="0.0605%" height="15" fill="rgb(251,75,10)" fg:x="1257" fg:w="1"/><text x="76.3396%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.06%)</title><rect x="76.4528%" y="965" width="0.0605%" height="15" fill="rgb(246,212,26)" fg:x="1263" fg:w="1"/><text x="76.7028%" y="975.50"></text></g><g><title>__aarch64_cas8_acq (1 samples, 0.06%)</title><rect x="76.4528%" y="949" width="0.0605%" height="15" fill="rgb(220,70,35)" fg:x="1263" fg:w="1"/><text x="76.7028%" y="959.50"></text></g><g><title>futex_hash (2 samples, 0.12%)</title><rect x="76.6344%" y="837" width="0.1211%" height="15" fill="rgb(212,85,34)" fg:x="1266" fg:w="2"/><text x="76.8844%" y="847.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (13 samples, 0.79%)</title><rect x="76.2712%" y="981" width="0.7869%" height="15" fill="rgb(221,89,13)" fg:x="1260" fg:w="13"/><text x="76.5212%" y="991.50"></text></g><g><title>syscall (9 samples, 0.54%)</title><rect x="76.5133%" y="965" width="0.5448%" height="15" fill="rgb(207,84,5)" fg:x="1264" fg:w="9"/><text x="76.7633%" y="975.50"></text></g><g><title>el0t_64_sync_handler (9 samples, 0.54%)</title><rect x="76.5133%" y="949" width="0.5448%" height="15" fill="rgb(232,35,33)" fg:x="1264" fg:w="9"/><text x="76.7633%" y="959.50"></text></g><g><title>el0_svc (9 samples, 0.54%)</title><rect x="76.5133%" y="933" width="0.5448%" height="15" fill="rgb(225,46,33)" fg:x="1264" fg:w="9"/><text x="76.7633%" y="943.50"></text></g><g><title>do_el0_svc (9 samples, 0.54%)</title><rect x="76.5133%" y="917" width="0.5448%" height="15" fill="rgb(221,53,8)" fg:x="1264" fg:w="9"/><text x="76.7633%" y="927.50"></text></g><g><title>el0_svc_common.constprop.0 (9 samples, 0.54%)</title><rect x="76.5133%" y="901" width="0.5448%" height="15" fill="rgb(219,7,42)" fg:x="1264" fg:w="9"/><text x="76.7633%" y="911.50"></text></g><g><title>invoke_syscall (7 samples, 0.42%)</title><rect x="76.6344%" y="885" width="0.4237%" height="15" fill="rgb(234,209,2)" fg:x="1266" fg:w="7"/><text x="76.8844%" y="895.50"></text></g><g><title>__arm64_sys_futex (7 samples, 0.42%)</title><rect x="76.6344%" y="869" width="0.4237%" height="15" fill="rgb(221,106,0)" fg:x="1266" fg:w="7"/><text x="76.8844%" y="879.50"></text></g><g><title>do_futex (7 samples, 0.42%)</title><rect x="76.6344%" y="853" width="0.4237%" height="15" fill="rgb(249,126,29)" fg:x="1266" fg:w="7"/><text x="76.8844%" y="863.50"></text></g><g><title>futex_wake (5 samples, 0.30%)</title><rect x="76.7554%" y="837" width="0.3027%" height="15" fill="rgb(247,80,14)" fg:x="1268" fg:w="5"/><text x="77.0054%" y="847.50"></text></g><g><title>wake_up_q (3 samples, 0.18%)</title><rect x="76.8765%" y="821" width="0.1816%" height="15" fill="rgb(236,117,44)" fg:x="1270" fg:w="3"/><text x="77.1265%" y="831.50"></text></g><g><title>arch_local_irq_restore (3 samples, 0.18%)</title><rect x="76.8765%" y="805" width="0.1816%" height="15" fill="rgb(250,186,41)" fg:x="1270" fg:w="3"/><text x="77.1265%" y="815.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="77.0581%" y="885" width="0.0605%" height="15" fill="rgb(234,197,42)" fg:x="1273" fg:w="1"/><text x="77.3081%" y="895.50"></text></g><g><title>__arm64_sys_write (1 samples, 0.06%)</title><rect x="77.1792%" y="821" width="0.0605%" height="15" fill="rgb(249,177,38)" fg:x="1275" fg:w="1"/><text x="77.4292%" y="831.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (17 samples, 1.03%)</title><rect x="77.0581%" y="981" width="1.0291%" height="15" fill="rgb(239,226,45)" fg:x="1273" fg:w="17"/><text x="77.3081%" y="991.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (17 samples, 1.03%)</title><rect x="77.0581%" y="965" width="1.0291%" height="15" fill="rgb(234,68,35)" fg:x="1273" fg:w="17"/><text x="77.3081%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (17 samples, 1.03%)</title><rect x="77.0581%" y="949" width="1.0291%" height="15" fill="rgb(242,138,15)" fg:x="1273" fg:w="17"/><text x="77.3081%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::write (17 samples, 1.03%)</title><rect x="77.0581%" y="933" width="1.0291%" height="15" fill="rgb(248,211,26)" fg:x="1273" fg:w="17"/><text x="77.3081%" y="943.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (17 samples, 1.03%)</title><rect x="77.0581%" y="917" width="1.0291%" height="15" fill="rgb(247,26,49)" fg:x="1273" fg:w="17"/><text x="77.3081%" y="927.50"></text></g><g><title>__GI___write (17 samples, 1.03%)</title><rect x="77.0581%" y="901" width="1.0291%" height="15" fill="rgb(225,125,48)" fg:x="1273" fg:w="17"/><text x="77.3081%" y="911.50"></text></g><g><title>el0t_64_sync_handler (16 samples, 0.97%)</title><rect x="77.1186%" y="885" width="0.9685%" height="15" fill="rgb(232,35,33)" fg:x="1274" fg:w="16"/><text x="77.3686%" y="895.50"></text></g><g><title>el0_svc (16 samples, 0.97%)</title><rect x="77.1186%" y="869" width="0.9685%" height="15" fill="rgb(225,46,33)" fg:x="1274" fg:w="16"/><text x="77.3686%" y="879.50"></text></g><g><title>do_el0_svc (16 samples, 0.97%)</title><rect x="77.1186%" y="853" width="0.9685%" height="15" fill="rgb(221,53,8)" fg:x="1274" fg:w="16"/><text x="77.3686%" y="863.50"></text></g><g><title>el0_svc_common.constprop.0 (16 samples, 0.97%)</title><rect x="77.1186%" y="837" width="0.9685%" height="15" fill="rgb(219,7,42)" fg:x="1274" fg:w="16"/><text x="77.3686%" y="847.50"></text></g><g><title>invoke_syscall (14 samples, 0.85%)</title><rect x="77.2397%" y="821" width="0.8475%" height="15" fill="rgb(234,209,2)" fg:x="1276" fg:w="14"/><text x="77.4897%" y="831.50"></text></g><g><title>__arm64_sys_write (13 samples, 0.79%)</title><rect x="77.3002%" y="805" width="0.7869%" height="15" fill="rgb(249,177,38)" fg:x="1277" fg:w="13"/><text x="77.5502%" y="815.50"></text></g><g><title>ksys_write (13 samples, 0.79%)</title><rect x="77.3002%" y="789" width="0.7869%" height="15" fill="rgb(223,155,43)" fg:x="1277" fg:w="13"/><text x="77.5502%" y="799.50"></text></g><g><title>vfs_write (13 samples, 0.79%)</title><rect x="77.3002%" y="773" width="0.7869%" height="15" fill="rgb(216,184,13)" fg:x="1277" fg:w="13"/><text x="77.5502%" y="783.50"></text></g><g><title>eventfd_write (13 samples, 0.79%)</title><rect x="77.3002%" y="757" width="0.7869%" height="15" fill="rgb(214,207,35)" fg:x="1277" fg:w="13"/><text x="77.5502%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2 samples, 0.12%)</title><rect x="78.0872%" y="981" width="0.1211%" height="15" fill="rgb(205,37,19)" fg:x="1290" fg:w="2"/><text x="78.3372%" y="991.50"></text></g><g><title>__aarch64_swp8_acq_rel (1 samples, 0.06%)</title><rect x="78.1477%" y="965" width="0.0605%" height="15" fill="rgb(247,223,18)" fg:x="1291" fg:w="1"/><text x="78.3977%" y="975.50"></text></g><g><title>BIO_free_all (1 samples, 0.06%)</title><rect x="78.6925%" y="853" width="0.0605%" height="15" fill="rgb(209,93,7)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="863.50"></text></g><g><title>BIO_free (1 samples, 0.06%)</title><rect x="78.6925%" y="837" width="0.0605%" height="15" fill="rgb(251,2,18)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="847.50"></text></g><g><title>openssl::ssl::bio::destroy (1 samples, 0.06%)</title><rect x="78.6925%" y="821" width="0.0605%" height="15" fill="rgb(239,99,30)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;openssl::ssl::bio::StreamState&lt;tokio_native_tls::AllowStd&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="78.6925%" y="805" width="0.0605%" height="15" fill="rgb(239,29,40)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="815.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="78.6925%" y="789" width="0.0605%" height="15" fill="rgb(253,46,47)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="799.50"></text></g><g><title>__libc_close (1 samples, 0.06%)</title><rect x="78.6925%" y="773" width="0.0605%" height="15" fill="rgb(240,27,17)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="783.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="78.6925%" y="757" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="767.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="78.6925%" y="741" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="751.50"></text></g><g><title>do_notify_resume (1 samples, 0.06%)</title><rect x="78.6925%" y="725" width="0.0605%" height="15" fill="rgb(233,34,11)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="735.50"></text></g><g><title>task_work_run (1 samples, 0.06%)</title><rect x="78.6925%" y="709" width="0.0605%" height="15" fill="rgb(206,18,50)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="719.50"></text></g><g><title>____fput (1 samples, 0.06%)</title><rect x="78.6925%" y="693" width="0.0605%" height="15" fill="rgb(227,227,50)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="703.50"></text></g><g><title>__fput (1 samples, 0.06%)</title><rect x="78.6925%" y="677" width="0.0605%" height="15" fill="rgb(210,120,45)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="687.50"></text></g><g><title>sock_close (1 samples, 0.06%)</title><rect x="78.6925%" y="661" width="0.0605%" height="15" fill="rgb(234,128,25)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="671.50"></text></g><g><title>__sock_release (1 samples, 0.06%)</title><rect x="78.6925%" y="645" width="0.0605%" height="15" fill="rgb(231,37,52)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="655.50"></text></g><g><title>inet_release (1 samples, 0.06%)</title><rect x="78.6925%" y="629" width="0.0605%" height="15" fill="rgb(252,100,5)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="639.50"></text></g><g><title>tcp_close (1 samples, 0.06%)</title><rect x="78.6925%" y="613" width="0.0605%" height="15" fill="rgb(213,64,51)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="623.50"></text></g><g><title>__tcp_close (1 samples, 0.06%)</title><rect x="78.6925%" y="597" width="0.0605%" height="15" fill="rgb(218,198,27)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="607.50"></text></g><g><title>inet_csk_destroy_sock (1 samples, 0.06%)</title><rect x="78.6925%" y="581" width="0.0605%" height="15" fill="rgb(208,192,51)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="591.50"></text></g><g><title>tcp_v4_destroy_sock (1 samples, 0.06%)</title><rect x="78.6925%" y="565" width="0.0605%" height="15" fill="rgb(236,33,32)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="575.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.06%)</title><rect x="78.6925%" y="549" width="0.0605%" height="15" fill="rgb(219,106,45)" fg:x="1300" fg:w="1"/><text x="78.9425%" y="559.50"></text></g><g><title>EVP_PKEY_free (1 samples, 0.06%)</title><rect x="78.7530%" y="741" width="0.0605%" height="15" fill="rgb(236,28,20)" fg:x="1301" fg:w="1"/><text x="79.0030%" y="751.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="78.7530%" y="725" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1301" fg:w="1"/><text x="79.0030%" y="735.50"></text></g><g><title>RSA_free (1 samples, 0.06%)</title><rect x="78.7530%" y="709" width="0.0605%" height="15" fill="rgb(210,74,12)" fg:x="1301" fg:w="1"/><text x="79.0030%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="78.7530%" y="693" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1301" fg:w="1"/><text x="79.0030%" y="703.50"></text></g><g><title>BN_MONT_CTX_free (1 samples, 0.06%)</title><rect x="78.7530%" y="677" width="0.0605%" height="15" fill="rgb(243,23,12)" fg:x="1301" fg:w="1"/><text x="79.0030%" y="687.50"></text></g><g><title>BN_clear_free (1 samples, 0.06%)</title><rect x="78.7530%" y="661" width="0.0605%" height="15" fill="rgb(238,87,2)" fg:x="1301" fg:w="1"/><text x="79.0030%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (3 samples, 0.18%)</title><rect x="78.6925%" y="901" width="0.1816%" height="15" fill="rgb(209,141,15)" fg:x="1300" fg:w="3"/><text x="78.9425%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (3 samples, 0.18%)</title><rect x="78.6925%" y="885" width="0.1816%" height="15" fill="rgb(212,79,31)" fg:x="1300" fg:w="3"/><text x="78.9425%" y="895.50"></text></g><g><title>SSL_free (3 samples, 0.18%)</title><rect x="78.6925%" y="869" width="0.1816%" height="15" fill="rgb(219,101,41)" fg:x="1300" fg:w="3"/><text x="78.9425%" y="879.50"></text></g><g><title>OPENSSL_sk_pop_free (2 samples, 0.12%)</title><rect x="78.7530%" y="853" width="0.1211%" height="15" fill="rgb(209,156,11)" fg:x="1301" fg:w="2"/><text x="79.0030%" y="863.50"></text></g><g><title>ASN1_item_free (2 samples, 0.12%)</title><rect x="78.7530%" y="837" width="0.1211%" height="15" fill="rgb(239,204,25)" fg:x="1301" fg:w="2"/><text x="79.0030%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="78.7530%" y="821" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1301" fg:w="2"/><text x="79.0030%" y="831.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="78.7530%" y="805" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1301" fg:w="2"/><text x="79.0030%" y="815.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="78.7530%" y="789" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1301" fg:w="2"/><text x="79.0030%" y="799.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="78.7530%" y="773" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1301" fg:w="2"/><text x="79.0030%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="78.7530%" y="757" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1301" fg:w="2"/><text x="79.0030%" y="767.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.06%)</title><rect x="78.8136%" y="741" width="0.0605%" height="15" fill="rgb(209,156,11)" fg:x="1302" fg:w="1"/><text x="79.0636%" y="751.50"></text></g><g><title>ASN1_item_free (1 samples, 0.06%)</title><rect x="78.8136%" y="725" width="0.0605%" height="15" fill="rgb(239,204,25)" fg:x="1302" fg:w="1"/><text x="79.0636%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="78.8136%" y="709" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1302" fg:w="1"/><text x="79.0636%" y="719.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="78.8136%" y="693" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="1302" fg:w="1"/><text x="79.0636%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="78.8136%" y="677" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="1302" fg:w="1"/><text x="79.0636%" y="687.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="78.8741%" y="901" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="911.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="78.8741%" y="885" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="895.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="78.8741%" y="869" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="879.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="78.8741%" y="853" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="863.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="78.8741%" y="837" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="847.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="78.8741%" y="821" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="831.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="78.8741%" y="805" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="815.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="78.8741%" y="789" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="799.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="78.8741%" y="773" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1303" fg:w="1"/><text x="79.1241%" y="783.50"></text></g><g><title>hyper::proto::h1::conn::State::is_write_closed (1 samples, 0.06%)</title><rect x="78.9346%" y="885" width="0.0605%" height="15" fill="rgb(223,90,30)" fg:x="1304" fg:w="1"/><text x="79.1846%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::error::Error&gt; (2 samples, 0.12%)</title><rect x="79.5400%" y="805" width="0.1211%" height="15" fill="rgb(250,219,13)" fg:x="1314" fg:w="2"/><text x="79.7900%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::dispatch::Callback&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (4 samples, 0.24%)</title><rect x="79.4794%" y="837" width="0.2421%" height="15" fill="rgb(210,190,39)" fg:x="1313" fg:w="4"/><text x="79.7294%" y="847.50"></text></g><g><title>&lt;hyper::client::dispatch::Callback&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.24%)</title><rect x="79.4794%" y="821" width="0.2421%" height="15" fill="rgb(220,227,23)" fg:x="1313" fg:w="4"/><text x="79.7294%" y="831.50"></text></g><g><title>hyper::error::Error::new_user_dispatch_gone (1 samples, 0.06%)</title><rect x="79.6610%" y="805" width="0.0605%" height="15" fill="rgb(235,75,21)" fg:x="1316" fg:w="1"/><text x="79.9110%" y="815.50"></text></g><g><title>wake_q_add_safe (1 samples, 0.06%)</title><rect x="80.0847%" y="645" width="0.0605%" height="15" fill="rgb(252,145,42)" fg:x="1323" fg:w="1"/><text x="80.3347%" y="655.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (19 samples, 1.15%)</title><rect x="79.3584%" y="853" width="1.1501%" height="15" fill="rgb(229,98,16)" fg:x="1311" fg:w="19"/><text x="79.6084%" y="863.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (13 samples, 0.79%)</title><rect x="79.7215%" y="837" width="0.7869%" height="15" fill="rgb(245,13,6)" fg:x="1317" fg:w="13"/><text x="79.9715%" y="847.50"></text></g><g><title>tokio::runtime::park::wake_by_ref (13 samples, 0.79%)</title><rect x="79.7215%" y="821" width="0.7869%" height="15" fill="rgb(250,104,0)" fg:x="1317" fg:w="13"/><text x="79.9715%" y="831.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.73%)</title><rect x="79.7821%" y="805" width="0.7264%" height="15" fill="rgb(221,89,13)" fg:x="1318" fg:w="12"/><text x="80.0321%" y="815.50"></text></g><g><title>syscall (11 samples, 0.67%)</title><rect x="79.8426%" y="789" width="0.6659%" height="15" fill="rgb(207,84,5)" fg:x="1319" fg:w="11"/><text x="80.0926%" y="799.50"></text></g><g><title>el0t_64_sync_handler (11 samples, 0.67%)</title><rect x="79.8426%" y="773" width="0.6659%" height="15" fill="rgb(232,35,33)" fg:x="1319" fg:w="11"/><text x="80.0926%" y="783.50"></text></g><g><title>el0_svc (11 samples, 0.67%)</title><rect x="79.8426%" y="757" width="0.6659%" height="15" fill="rgb(225,46,33)" fg:x="1319" fg:w="11"/><text x="80.0926%" y="767.50"></text></g><g><title>do_el0_svc (11 samples, 0.67%)</title><rect x="79.8426%" y="741" width="0.6659%" height="15" fill="rgb(221,53,8)" fg:x="1319" fg:w="11"/><text x="80.0926%" y="751.50"></text></g><g><title>el0_svc_common.constprop.0 (11 samples, 0.67%)</title><rect x="79.8426%" y="725" width="0.6659%" height="15" fill="rgb(219,7,42)" fg:x="1319" fg:w="11"/><text x="80.0926%" y="735.50"></text></g><g><title>invoke_syscall (9 samples, 0.54%)</title><rect x="79.9637%" y="709" width="0.5448%" height="15" fill="rgb(234,209,2)" fg:x="1321" fg:w="9"/><text x="80.2137%" y="719.50"></text></g><g><title>__arm64_sys_futex (9 samples, 0.54%)</title><rect x="79.9637%" y="693" width="0.5448%" height="15" fill="rgb(221,106,0)" fg:x="1321" fg:w="9"/><text x="80.2137%" y="703.50"></text></g><g><title>do_futex (9 samples, 0.54%)</title><rect x="79.9637%" y="677" width="0.5448%" height="15" fill="rgb(249,126,29)" fg:x="1321" fg:w="9"/><text x="80.2137%" y="687.50"></text></g><g><title>futex_wake (8 samples, 0.48%)</title><rect x="80.0242%" y="661" width="0.4843%" height="15" fill="rgb(247,80,14)" fg:x="1322" fg:w="8"/><text x="80.2742%" y="671.50"></text></g><g><title>wake_up_q (6 samples, 0.36%)</title><rect x="80.1453%" y="645" width="0.3632%" height="15" fill="rgb(236,117,44)" fg:x="1324" fg:w="6"/><text x="80.3953%" y="655.50"></text></g><g><title>arch_local_irq_restore (6 samples, 0.36%)</title><rect x="80.1453%" y="629" width="0.3632%" height="15" fill="rgb(250,186,41)" fg:x="1324" fg:w="6"/><text x="80.3953%" y="639.50"></text></g><g><title>el1h_64_irq (1 samples, 0.06%)</title><rect x="80.4479%" y="613" width="0.0605%" height="15" fill="rgb(223,86,28)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="623.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.06%)</title><rect x="80.4479%" y="597" width="0.0605%" height="15" fill="rgb(231,46,5)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="607.50"></text></g><g><title>el1_interrupt (1 samples, 0.06%)</title><rect x="80.4479%" y="581" width="0.0605%" height="15" fill="rgb(254,19,43)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="591.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="80.4479%" y="565" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="575.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="80.4479%" y="549" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="559.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="80.4479%" y="533" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="543.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="80.4479%" y="517" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="527.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="80.4479%" y="501" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="511.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="80.4479%" y="485" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="495.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="80.4479%" y="469" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="479.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="80.4479%" y="453" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="463.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="80.4479%" y="437" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="447.50"></text></g><g><title>napi_complete_done (1 samples, 0.06%)</title><rect x="80.4479%" y="421" width="0.0605%" height="15" fill="rgb(226,216,13)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="431.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.06%)</title><rect x="80.4479%" y="405" width="0.0605%" height="15" fill="rgb(216,153,44)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="415.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.06%)</title><rect x="80.4479%" y="389" width="0.0605%" height="15" fill="rgb(227,176,26)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="399.50"></text></g><g><title>ip_list_rcv (1 samples, 0.06%)</title><rect x="80.4479%" y="373" width="0.0605%" height="15" fill="rgb(215,38,16)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="383.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.06%)</title><rect x="80.4479%" y="357" width="0.0605%" height="15" fill="rgb(207,166,9)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="367.50"></text></g><g><title>ip_sublist_rcv_finish (1 samples, 0.06%)</title><rect x="80.4479%" y="341" width="0.0605%" height="15" fill="rgb(223,178,14)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="351.50"></text></g><g><title>ip_local_deliver (1 samples, 0.06%)</title><rect x="80.4479%" y="325" width="0.0605%" height="15" fill="rgb(221,216,39)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="335.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="80.4479%" y="309" width="0.0605%" height="15" fill="rgb(220,94,29)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="80.4479%" y="293" width="0.0605%" height="15" fill="rgb(207,19,13)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="303.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="80.4479%" y="277" width="0.0605%" height="15" fill="rgb(224,38,0)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="80.4479%" y="261" width="0.0605%" height="15" fill="rgb(228,220,18)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="271.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="80.4479%" y="245" width="0.0605%" height="15" fill="rgb(224,50,47)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="255.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.06%)</title><rect x="80.4479%" y="229" width="0.0605%" height="15" fill="rgb(232,142,51)" fg:x="1329" fg:w="1"/><text x="80.6979%" y="239.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (22 samples, 1.33%)</title><rect x="79.2373%" y="869" width="1.3317%" height="15" fill="rgb(236,226,3)" fg:x="1309" fg:w="22"/><text x="79.4873%" y="879.50"></text></g><g><title>hyper::proto::MessageHead&lt;http::status::StatusCode&gt;::into_response (1 samples, 0.06%)</title><rect x="80.5085%" y="853" width="0.0605%" height="15" fill="rgb(210,178,10)" fg:x="1330" fg:w="1"/><text x="80.7585%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.06%)</title><rect x="80.5085%" y="837" width="0.0605%" height="15" fill="rgb(225,131,44)" fg:x="1330" fg:w="1"/><text x="80.7585%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="80.5085%" y="821" width="0.0605%" height="15" fill="rgb(249,14,2)" fg:x="1330" fg:w="1"/><text x="80.7585%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Sender&gt; (1 samples, 0.06%)</title><rect x="80.5690%" y="869" width="0.0605%" height="15" fill="rgb(247,43,5)" fg:x="1331" fg:w="1"/><text x="80.8190%" y="879.50"></text></g><g><title>__aarch64_swp1_acq_rel (1 samples, 0.06%)</title><rect x="80.5690%" y="853" width="0.0605%" height="15" fill="rgb(243,92,26)" fg:x="1331" fg:w="1"/><text x="80.8190%" y="863.50"></text></g><g><title>hyper::body::body::Body::new_channel (1 samples, 0.06%)</title><rect x="80.6295%" y="869" width="0.0605%" height="15" fill="rgb(221,75,50)" fg:x="1332" fg:w="1"/><text x="80.8795%" y="879.50"></text></g><g><title>futures_channel::mpsc::channel (1 samples, 0.06%)</title><rect x="80.6295%" y="853" width="0.0605%" height="15" fill="rgb(207,141,45)" fg:x="1332" fg:w="1"/><text x="80.8795%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="80.6295%" y="837" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="1332" fg:w="1"/><text x="80.8795%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="80.6295%" y="821" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="1332" fg:w="1"/><text x="80.8795%" y="831.50"></text></g><g><title>hyper::body::body::Sender::poll_ready (1 samples, 0.06%)</title><rect x="80.6901%" y="869" width="0.0605%" height="15" fill="rgb(254,49,27)" fg:x="1333" fg:w="1"/><text x="80.9401%" y="879.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.06%)</title><rect x="80.6901%" y="853" width="0.0605%" height="15" fill="rgb(211,155,28)" fg:x="1333" fg:w="1"/><text x="80.9401%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.06%)</title><rect x="80.6901%" y="837" width="0.0605%" height="15" fill="rgb(242,141,45)" fg:x="1333" fg:w="1"/><text x="80.9401%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="80.8111%" y="837" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="1335" fg:w="1"/><text x="81.0611%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="80.8111%" y="821" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="1335" fg:w="1"/><text x="81.0611%" y="831.50"></text></g><g><title>__aarch64_cas8_acq_rel (1 samples, 0.06%)</title><rect x="80.8717%" y="837" width="0.0605%" height="15" fill="rgb(211,86,19)" fg:x="1336" fg:w="1"/><text x="81.1217%" y="847.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (1 samples, 0.06%)</title><rect x="80.9322%" y="837" width="0.0605%" height="15" fill="rgb(226,166,54)" fg:x="1337" fg:w="1"/><text x="81.1822%" y="847.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.06%)</title><rect x="80.9927%" y="837" width="0.0605%" height="15" fill="rgb(221,136,6)" fg:x="1338" fg:w="1"/><text x="81.2427%" y="847.50"></text></g><g><title>__aarch64_ldset8_acq_rel (1 samples, 0.06%)</title><rect x="80.9927%" y="821" width="0.0605%" height="15" fill="rgb(222,199,2)" fg:x="1338" fg:w="1"/><text x="81.2427%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.06%)</title><rect x="81.0533%" y="805" width="0.0605%" height="15" fill="rgb(246,212,26)" fg:x="1339" fg:w="1"/><text x="81.3033%" y="815.50"></text></g><g><title>__aarch64_cas8_acq (1 samples, 0.06%)</title><rect x="81.0533%" y="789" width="0.0605%" height="15" fill="rgb(220,70,35)" fg:x="1339" fg:w="1"/><text x="81.3033%" y="799.50"></text></g><g><title>hyper::body::body::Sender::try_send_data (9 samples, 0.54%)</title><rect x="80.7506%" y="869" width="0.5448%" height="15" fill="rgb(246,141,9)" fg:x="1334" fg:w="9"/><text x="81.0006%" y="879.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (9 samples, 0.54%)</title><rect x="80.7506%" y="853" width="0.5448%" height="15" fill="rgb(222,226,1)" fg:x="1334" fg:w="9"/><text x="81.0006%" y="863.50"></text></g><g><title>tokio::runtime::park::wake (4 samples, 0.24%)</title><rect x="81.0533%" y="837" width="0.2421%" height="15" fill="rgb(211,212,25)" fg:x="1339" fg:w="4"/><text x="81.3033%" y="847.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.24%)</title><rect x="81.0533%" y="821" width="0.2421%" height="15" fill="rgb(221,89,13)" fg:x="1339" fg:w="4"/><text x="81.3033%" y="831.50"></text></g><g><title>syscall (3 samples, 0.18%)</title><rect x="81.1138%" y="805" width="0.1816%" height="15" fill="rgb(207,84,5)" fg:x="1340" fg:w="3"/><text x="81.3638%" y="815.50"></text></g><g><title>el0t_64_sync_handler (2 samples, 0.12%)</title><rect x="81.1743%" y="789" width="0.1211%" height="15" fill="rgb(232,35,33)" fg:x="1341" fg:w="2"/><text x="81.4243%" y="799.50"></text></g><g><title>el0_svc (2 samples, 0.12%)</title><rect x="81.1743%" y="773" width="0.1211%" height="15" fill="rgb(225,46,33)" fg:x="1341" fg:w="2"/><text x="81.4243%" y="783.50"></text></g><g><title>do_el0_svc (2 samples, 0.12%)</title><rect x="81.1743%" y="757" width="0.1211%" height="15" fill="rgb(221,53,8)" fg:x="1341" fg:w="2"/><text x="81.4243%" y="767.50"></text></g><g><title>el0_svc_common.constprop.0 (2 samples, 0.12%)</title><rect x="81.1743%" y="741" width="0.1211%" height="15" fill="rgb(219,7,42)" fg:x="1341" fg:w="2"/><text x="81.4243%" y="751.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="81.2349%" y="725" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="1342" fg:w="1"/><text x="81.4849%" y="735.50"></text></g><g><title>__arm64_sys_futex (1 samples, 0.06%)</title><rect x="81.2349%" y="709" width="0.0605%" height="15" fill="rgb(221,106,0)" fg:x="1342" fg:w="1"/><text x="81.4849%" y="719.50"></text></g><g><title>do_futex (1 samples, 0.06%)</title><rect x="81.2349%" y="693" width="0.0605%" height="15" fill="rgb(249,126,29)" fg:x="1342" fg:w="1"/><text x="81.4849%" y="703.50"></text></g><g><title>futex_wake (1 samples, 0.06%)</title><rect x="81.2349%" y="677" width="0.0605%" height="15" fill="rgb(247,80,14)" fg:x="1342" fg:w="1"/><text x="81.4849%" y="687.50"></text></g><g><title>wake_up_q (1 samples, 0.06%)</title><rect x="81.2349%" y="661" width="0.0605%" height="15" fill="rgb(236,117,44)" fg:x="1342" fg:w="1"/><text x="81.4849%" y="671.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="81.2349%" y="645" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="1342" fg:w="1"/><text x="81.4849%" y="655.50"></text></g><g><title>&lt;hyper::client::dispatch::Envelope&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="81.2954%" y="853" width="0.0605%" height="15" fill="rgb(209,114,53)" fg:x="1343" fg:w="1"/><text x="81.5454%" y="863.50"></text></g><g><title>&lt;want::State as core::convert::From&lt;usize&gt;&gt;::from (1 samples, 0.06%)</title><rect x="81.3559%" y="853" width="0.0605%" height="15" fill="rgb(220,83,17)" fg:x="1344" fg:w="1"/><text x="81.6059%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.06%)</title><rect x="81.4165%" y="853" width="0.0605%" height="15" fill="rgb(252,227,42)" fg:x="1345" fg:w="1"/><text x="81.6665%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.06%)</title><rect x="81.4165%" y="837" width="0.0605%" height="15" fill="rgb(244,98,3)" fg:x="1345" fg:w="1"/><text x="81.6665%" y="847.50"></text></g><g><title>__aarch64_cas8_acq_rel (1 samples, 0.06%)</title><rect x="81.4165%" y="821" width="0.0605%" height="15" fill="rgb(211,86,19)" fg:x="1345" fg:w="1"/><text x="81.6665%" y="831.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.06%)</title><rect x="81.5981%" y="821" width="0.0605%" height="15" fill="rgb(216,202,39)" fg:x="1348" fg:w="1"/><text x="81.8481%" y="831.50"></text></g><g><title>tokio::sync::mpsc::block::is_ready (1 samples, 0.06%)</title><rect x="81.5981%" y="805" width="0.0605%" height="15" fill="rgb(247,113,7)" fg:x="1348" fg:w="1"/><text x="81.8481%" y="815.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (7 samples, 0.42%)</title><rect x="81.2954%" y="869" width="0.4237%" height="15" fill="rgb(249,10,16)" fg:x="1343" fg:w="7"/><text x="81.5454%" y="879.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (4 samples, 0.24%)</title><rect x="81.4770%" y="853" width="0.2421%" height="15" fill="rgb(239,200,39)" fg:x="1346" fg:w="4"/><text x="81.7270%" y="863.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.12%)</title><rect x="81.5981%" y="837" width="0.1211%" height="15" fill="rgb(231,124,40)" fg:x="1348" fg:w="2"/><text x="81.8481%" y="847.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.06%)</title><rect x="81.6586%" y="821" width="0.0605%" height="15" fill="rgb(212,203,37)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="831.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="81.6586%" y="805" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="815.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="81.6586%" y="789" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="799.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="81.6586%" y="773" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="783.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="81.6586%" y="757" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="767.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="81.6586%" y="741" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="751.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="81.6586%" y="725" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="735.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="81.6586%" y="709" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="719.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="81.6586%" y="693" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="703.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="81.6586%" y="677" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="687.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="81.6586%" y="661" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="671.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="81.6586%" y="645" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="655.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="81.6586%" y="629" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="639.50"></text></g><g><title>ena_clean_rx_irq (1 samples, 0.06%)</title><rect x="81.6586%" y="613" width="0.0605%" height="15" fill="rgb(226,177,46)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="623.50"></text></g><g><title>napi_gro_receive (1 samples, 0.06%)</title><rect x="81.6586%" y="597" width="0.0605%" height="15" fill="rgb(248,45,29)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="607.50"></text></g><g><title>dev_gro_receive (1 samples, 0.06%)</title><rect x="81.6586%" y="581" width="0.0605%" height="15" fill="rgb(219,73,15)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="591.50"></text></g><g><title>inet_gro_receive (1 samples, 0.06%)</title><rect x="81.6586%" y="565" width="0.0605%" height="15" fill="rgb(205,21,43)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="575.50"></text></g><g><title>tcp4_gro_receive (1 samples, 0.06%)</title><rect x="81.6586%" y="549" width="0.0605%" height="15" fill="rgb(205,44,26)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="559.50"></text></g><g><title>tcp_gro_receive (1 samples, 0.06%)</title><rect x="81.6586%" y="533" width="0.0605%" height="15" fill="rgb(251,56,48)" fg:x="1349" fg:w="1"/><text x="81.9086%" y="543.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="81.9007%" y="821" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="1353" fg:w="1"/><text x="82.1507%" y="831.50"></text></g><g><title>core::fmt::write (4 samples, 0.24%)</title><rect x="81.9613%" y="821" width="0.2421%" height="15" fill="rgb(248,210,20)" fg:x="1354" fg:w="4"/><text x="82.2113%" y="831.50"></text></g><g><title>&lt;http::uri::Uri as core::fmt::Display&gt;::fmt (3 samples, 0.18%)</title><rect x="82.0218%" y="805" width="0.1816%" height="15" fill="rgb(248,60,6)" fg:x="1355" fg:w="3"/><text x="82.2718%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.18%)</title><rect x="82.0218%" y="789" width="0.1816%" height="15" fill="rgb(220,95,32)" fg:x="1355" fg:w="3"/><text x="82.2718%" y="799.50"></text></g><g><title>core::fmt::write (3 samples, 0.18%)</title><rect x="82.0218%" y="773" width="0.1816%" height="15" fill="rgb(248,210,20)" fg:x="1355" fg:w="3"/><text x="82.2718%" y="783.50"></text></g><g><title>&lt;hyper::proto::h1::role::FastWrite as core::fmt::Write&gt;::write_str (2 samples, 0.12%)</title><rect x="82.0823%" y="757" width="0.1211%" height="15" fill="rgb(221,9,2)" fg:x="1356" fg:w="2"/><text x="82.3323%" y="767.50"></text></g><g><title>__GI___memcpy_simd (2 samples, 0.12%)</title><rect x="82.0823%" y="741" width="0.1211%" height="15" fill="rgb(208,42,30)" fg:x="1356" fg:w="2"/><text x="82.3323%" y="751.50"></text></g><g><title>bytes::bytes::promotable_even_drop (1 samples, 0.06%)</title><rect x="82.2034%" y="805" width="0.0605%" height="15" fill="rgb(233,15,31)" fg:x="1358" fg:w="1"/><text x="82.4534%" y="815.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="82.2034%" y="789" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="1358" fg:w="1"/><text x="82.4534%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="82.2034%" y="773" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="1358" fg:w="1"/><text x="82.4534%" y="783.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::clear (2 samples, 0.12%)</title><rect x="82.2034%" y="821" width="0.1211%" height="15" fill="rgb(242,32,50)" fg:x="1358" fg:w="2"/><text x="82.4534%" y="831.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.06%)</title><rect x="82.2639%" y="805" width="0.0605%" height="15" fill="rgb(219,160,23)" fg:x="1359" fg:w="1"/><text x="82.5139%" y="815.50"></text></g><g><title>__aarch64_ldadd8_rel (1 samples, 0.06%)</title><rect x="82.2639%" y="789" width="0.0605%" height="15" fill="rgb(205,223,40)" fg:x="1359" fg:w="1"/><text x="82.5139%" y="799.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (10 samples, 0.61%)</title><rect x="81.7797%" y="837" width="0.6053%" height="15" fill="rgb(222,66,12)" fg:x="1351" fg:w="10"/><text x="82.0297%" y="847.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::remove (1 samples, 0.06%)</title><rect x="82.3245%" y="821" width="0.0605%" height="15" fill="rgb(211,85,50)" fg:x="1360" fg:w="1"/><text x="82.5745%" y="831.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (12 samples, 0.73%)</title><rect x="81.7191%" y="869" width="0.7264%" height="15" fill="rgb(240,42,41)" fg:x="1350" fg:w="12"/><text x="81.9691%" y="879.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (11 samples, 0.67%)</title><rect x="81.7797%" y="853" width="0.6659%" height="15" fill="rgb(221,80,35)" fg:x="1351" fg:w="11"/><text x="82.0297%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.06%)</title><rect x="82.3850%" y="837" width="0.0605%" height="15" fill="rgb(209,163,48)" fg:x="1361" fg:w="1"/><text x="82.6350%" y="847.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.06%)</title><rect x="82.9298%" y="629" width="0.0605%" height="15" fill="rgb(205,209,50)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="639.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.06%)</title><rect x="82.9298%" y="613" width="0.0605%" height="15" fill="rgb(213,217,36)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.06%)</title><rect x="82.9298%" y="597" width="0.0605%" height="15" fill="rgb(206,23,40)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.06%)</title><rect x="82.9298%" y="581" width="0.0605%" height="15" fill="rgb(225,218,7)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.06%)</title><rect x="82.9298%" y="565" width="0.0605%" height="15" fill="rgb(240,131,42)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="575.50"></text></g><g><title>__libc_recv (1 samples, 0.06%)</title><rect x="82.9298%" y="549" width="0.0605%" height="15" fill="rgb(249,36,48)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="559.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="82.9298%" y="533" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="543.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="82.9298%" y="517" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="527.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="82.9298%" y="501" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="511.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="82.9298%" y="485" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="495.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="82.9298%" y="469" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="479.50"></text></g><g><title>__arm64_sys_recvfrom (1 samples, 0.06%)</title><rect x="82.9298%" y="453" width="0.0605%" height="15" fill="rgb(220,214,49)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="463.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.06%)</title><rect x="82.9298%" y="437" width="0.0605%" height="15" fill="rgb(223,213,54)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="447.50"></text></g><g><title>inet_recvmsg (1 samples, 0.06%)</title><rect x="82.9298%" y="421" width="0.0605%" height="15" fill="rgb(247,19,13)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="431.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.06%)</title><rect x="82.9298%" y="405" width="0.0605%" height="15" fill="rgb(228,39,8)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="415.50"></text></g><g><title>tcp_recvmsg_locked (1 samples, 0.06%)</title><rect x="82.9298%" y="389" width="0.0605%" height="15" fill="rgb(253,180,25)" fg:x="1370" fg:w="1"/><text x="83.1798%" y="399.50"></text></g><g><title>std::sys::unix::decode_error_kind (2 samples, 0.12%)</title><rect x="82.9903%" y="629" width="0.1211%" height="15" fill="rgb(236,147,4)" fg:x="1371" fg:w="2"/><text x="83.2403%" y="639.50"></text></g><g><title>BIO_read (5 samples, 0.30%)</title><rect x="82.8692%" y="725" width="0.3027%" height="15" fill="rgb(222,53,33)" fg:x="1369" fg:w="5"/><text x="83.1192%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="82.9298%" y="709" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="1370" fg:w="4"/><text x="83.1798%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 0.24%)</title><rect x="82.9298%" y="693" width="0.2421%" height="15" fill="rgb(222,124,3)" fg:x="1370" fg:w="4"/><text x="83.1798%" y="703.50"></text></g><g><title>openssl::ssl::bio::bread (4 samples, 0.24%)</title><rect x="82.9298%" y="677" width="0.2421%" height="15" fill="rgb(213,132,17)" fg:x="1370" fg:w="4"/><text x="83.1798%" y="687.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (4 samples, 0.24%)</title><rect x="82.9298%" y="661" width="0.2421%" height="15" fill="rgb(243,131,41)" fg:x="1370" fg:w="4"/><text x="83.1798%" y="671.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (4 samples, 0.24%)</title><rect x="82.9298%" y="645" width="0.2421%" height="15" fill="rgb(235,57,13)" fg:x="1370" fg:w="4"/><text x="83.1798%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.06%)</title><rect x="83.1114%" y="629" width="0.0605%" height="15" fill="rgb(226,221,19)" fg:x="1373" fg:w="1"/><text x="83.3614%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.06%)</title><rect x="83.1114%" y="613" width="0.0605%" height="15" fill="rgb(216,63,32)" fg:x="1373" fg:w="1"/><text x="83.3614%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="83.1719%" y="725" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="1374" fg:w="1"/><text x="83.4219%" y="735.50"></text></g><g><title>SSL_read (9 samples, 0.54%)</title><rect x="82.7482%" y="789" width="0.5448%" height="15" fill="rgb(229,92,0)" fg:x="1367" fg:w="9"/><text x="82.9982%" y="799.50"></text></g><g><title>[libssl.so.3.0.8] (9 samples, 0.54%)</title><rect x="82.7482%" y="773" width="0.5448%" height="15" fill="rgb(243,173,28)" fg:x="1367" fg:w="9"/><text x="82.9982%" y="783.50"></text></g><g><title>[libssl.so.3.0.8] (8 samples, 0.48%)</title><rect x="82.8087%" y="757" width="0.4843%" height="15" fill="rgb(243,173,28)" fg:x="1368" fg:w="8"/><text x="83.0587%" y="767.50"></text></g><g><title>[libssl.so.3.0.8] (8 samples, 0.48%)</title><rect x="82.8087%" y="741" width="0.4843%" height="15" fill="rgb(243,173,28)" fg:x="1368" fg:w="8"/><text x="83.0587%" y="751.50"></text></g><g><title>__free (1 samples, 0.06%)</title><rect x="83.2324%" y="725" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="1375" fg:w="1"/><text x="83.4824%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="83.2324%" y="709" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="1375" fg:w="1"/><text x="83.4824%" y="719.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (12 samples, 0.73%)</title><rect x="82.6271%" y="805" width="0.7264%" height="15" fill="rgb(229,181,33)" fg:x="1365" fg:w="12"/><text x="82.8771%" y="815.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::make_error (1 samples, 0.06%)</title><rect x="83.2930%" y="789" width="0.0605%" height="15" fill="rgb(217,192,41)" fg:x="1376" fg:w="1"/><text x="83.5430%" y="799.50"></text></g><g><title>SSL_get_error (1 samples, 0.06%)</title><rect x="83.2930%" y="773" width="0.0605%" height="15" fill="rgb(221,63,27)" fg:x="1376" fg:w="1"/><text x="83.5430%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="83.2930%" y="757" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1376" fg:w="1"/><text x="83.5430%" y="767.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (13 samples, 0.79%)</title><rect x="82.6271%" y="821" width="0.7869%" height="15" fill="rgb(230,77,10)" fg:x="1365" fg:w="13"/><text x="82.8771%" y="831.50"></text></g><g><title>__memset_generic (1 samples, 0.06%)</title><rect x="83.3535%" y="805" width="0.0605%" height="15" fill="rgb(239,146,25)" fg:x="1377" fg:w="1"/><text x="83.6035%" y="815.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (18 samples, 1.09%)</title><rect x="82.5666%" y="853" width="1.0896%" height="15" fill="rgb(251,29,52)" fg:x="1364" fg:w="18"/><text x="82.8166%" y="863.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (18 samples, 1.09%)</title><rect x="82.5666%" y="837" width="1.0896%" height="15" fill="rgb(243,39,4)" fg:x="1364" fg:w="18"/><text x="82.8166%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (4 samples, 0.24%)</title><rect x="83.4140%" y="821" width="0.2421%" height="15" fill="rgb(218,209,54)" fg:x="1378" fg:w="4"/><text x="83.6640%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.18%)</title><rect x="83.4746%" y="805" width="0.1816%" height="15" fill="rgb(206,112,53)" fg:x="1379" fg:w="3"/><text x="83.7246%" y="815.50"></text></g><g><title>_int_malloc (2 samples, 0.12%)</title><rect x="83.5351%" y="789" width="0.1211%" height="15" fill="rgb(222,219,51)" fg:x="1380" fg:w="2"/><text x="83.7851%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (1 samples, 0.06%)</title><rect x="83.7772%" y="821" width="0.0605%" height="15" fill="rgb(225,159,42)" fg:x="1384" fg:w="1"/><text x="84.0272%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.12%)</title><rect x="83.8378%" y="821" width="0.1211%" height="15" fill="rgb(214,83,43)" fg:x="1385" fg:w="2"/><text x="84.0878%" y="831.50"></text></g><g><title>lock_sock_nested (1 samples, 0.06%)</title><rect x="84.5036%" y="373" width="0.0605%" height="15" fill="rgb(207,134,26)" fg:x="1396" fg:w="1"/><text x="84.7536%" y="383.50"></text></g><g><title>skb_attempt_defer_free (2 samples, 0.12%)</title><rect x="84.5642%" y="357" width="0.1211%" height="15" fill="rgb(227,173,46)" fg:x="1397" fg:w="2"/><text x="84.8142%" y="367.50"></text></g><g><title>kfree_skbmem (1 samples, 0.06%)</title><rect x="84.6247%" y="341" width="0.0605%" height="15" fill="rgb(253,13,25)" fg:x="1398" fg:w="1"/><text x="84.8747%" y="351.50"></text></g><g><title>kmem_cache_free (1 samples, 0.06%)</title><rect x="84.6247%" y="325" width="0.0605%" height="15" fill="rgb(225,137,16)" fg:x="1398" fg:w="1"/><text x="84.8747%" y="335.50"></text></g><g><title>__arch_copy_to_user (7 samples, 0.42%)</title><rect x="84.6852%" y="309" width="0.4237%" height="15" fill="rgb(210,178,31)" fg:x="1399" fg:w="7"/><text x="84.9352%" y="319.50"></text></g><g><title>__check_object_size (1 samples, 0.06%)</title><rect x="85.1090%" y="309" width="0.0605%" height="15" fill="rgb(218,1,22)" fg:x="1406" fg:w="1"/><text x="85.3590%" y="319.50"></text></g><g><title>__check_object_size.part.0 (1 samples, 0.06%)</title><rect x="85.1090%" y="293" width="0.0605%" height="15" fill="rgb(217,52,49)" fg:x="1406" fg:w="1"/><text x="85.3590%" y="303.50"></text></g><g><title>check_heap_object (1 samples, 0.06%)</title><rect x="85.1090%" y="277" width="0.0605%" height="15" fill="rgb(246,112,49)" fg:x="1406" fg:w="1"/><text x="85.3590%" y="287.50"></text></g><g><title>_copy_to_iter (1 samples, 0.06%)</title><rect x="85.1695%" y="309" width="0.0605%" height="15" fill="rgb(220,50,42)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="319.50"></text></g><g><title>el1h_64_irq (1 samples, 0.06%)</title><rect x="85.1695%" y="293" width="0.0605%" height="15" fill="rgb(223,86,28)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="303.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.06%)</title><rect x="85.1695%" y="277" width="0.0605%" height="15" fill="rgb(231,46,5)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="287.50"></text></g><g><title>el1_interrupt (1 samples, 0.06%)</title><rect x="85.1695%" y="261" width="0.0605%" height="15" fill="rgb(254,19,43)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="271.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="85.1695%" y="245" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="255.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="85.1695%" y="229" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="239.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="85.1695%" y="213" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="223.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="85.1695%" y="197" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="207.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="85.1695%" y="181" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="191.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="85.1695%" y="165" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="175.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="85.1695%" y="149" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="159.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="85.1695%" y="133" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="143.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="85.1695%" y="117" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="127.50"></text></g><g><title>ena_clean_rx_irq (1 samples, 0.06%)</title><rect x="85.1695%" y="101" width="0.0605%" height="15" fill="rgb(226,177,46)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="111.50"></text></g><g><title>ena_rx_skb (1 samples, 0.06%)</title><rect x="85.1695%" y="85" width="0.0605%" height="15" fill="rgb(212,94,10)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="95.50"></text></g><g><title>build_skb (1 samples, 0.06%)</title><rect x="85.1695%" y="69" width="0.0605%" height="15" fill="rgb(215,24,34)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="79.50"></text></g><g><title>__build_skb (1 samples, 0.06%)</title><rect x="85.1695%" y="53" width="0.0605%" height="15" fill="rgb(246,144,32)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="63.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="85.1695%" y="37" width="0.0605%" height="15" fill="rgb(223,51,51)" fg:x="1407" fg:w="1"/><text x="85.4195%" y="47.50"></text></g><g><title>skb_copy_datagram_iter (10 samples, 0.61%)</title><rect x="84.6852%" y="357" width="0.6053%" height="15" fill="rgb(241,149,22)" fg:x="1399" fg:w="10"/><text x="84.9352%" y="367.50"></text></g><g><title>__skb_datagram_iter (10 samples, 0.61%)</title><rect x="84.6852%" y="341" width="0.6053%" height="15" fill="rgb(248,96,51)" fg:x="1399" fg:w="10"/><text x="84.9352%" y="351.50"></text></g><g><title>simple_copy_to_iter (10 samples, 0.61%)</title><rect x="84.6852%" y="325" width="0.6053%" height="15" fill="rgb(239,76,11)" fg:x="1399" fg:w="10"/><text x="84.9352%" y="335.50"></text></g><g><title>uaccess_ttbr0_enable (1 samples, 0.06%)</title><rect x="85.2300%" y="309" width="0.0605%" height="15" fill="rgb(205,92,53)" fg:x="1408" fg:w="1"/><text x="85.4800%" y="319.50"></text></g><g><title>sock_rfree (3 samples, 0.18%)</title><rect x="85.2906%" y="357" width="0.1816%" height="15" fill="rgb(211,40,33)" fg:x="1409" fg:w="3"/><text x="85.5406%" y="367.50"></text></g><g><title>__sk_mem_reduce_allocated (3 samples, 0.18%)</title><rect x="85.2906%" y="341" width="0.1816%" height="15" fill="rgb(252,220,0)" fg:x="1409" fg:w="3"/><text x="85.5406%" y="351.50"></text></g><g><title>arch_local_irq_restore (2 samples, 0.12%)</title><rect x="85.3511%" y="325" width="0.1211%" height="15" fill="rgb(250,186,41)" fg:x="1410" fg:w="2"/><text x="85.6011%" y="335.50"></text></g><g><title>__alloc_skb (1 samples, 0.06%)</title><rect x="85.4722%" y="293" width="0.0605%" height="15" fill="rgb(237,90,40)" fg:x="1412" fg:w="1"/><text x="85.7222%" y="303.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="85.4722%" y="277" width="0.0605%" height="15" fill="rgb(227,94,12)" fg:x="1412" fg:w="1"/><text x="85.7222%" y="287.50"></text></g><g><title>ip_queue_xmit (4 samples, 0.24%)</title><rect x="85.5327%" y="277" width="0.2421%" height="15" fill="rgb(241,58,19)" fg:x="1413" fg:w="4"/><text x="85.7827%" y="287.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.24%)</title><rect x="85.5327%" y="261" width="0.2421%" height="15" fill="rgb(224,11,5)" fg:x="1413" fg:w="4"/><text x="85.7827%" y="271.50"></text></g><g><title>ip_output (3 samples, 0.18%)</title><rect x="85.5932%" y="245" width="0.1816%" height="15" fill="rgb(213,11,33)" fg:x="1414" fg:w="3"/><text x="85.8432%" y="255.50"></text></g><g><title>ip_finish_output (3 samples, 0.18%)</title><rect x="85.5932%" y="229" width="0.1816%" height="15" fill="rgb(215,36,54)" fg:x="1414" fg:w="3"/><text x="85.8432%" y="239.50"></text></g><g><title>__ip_finish_output (3 samples, 0.18%)</title><rect x="85.5932%" y="213" width="0.1816%" height="15" fill="rgb(252,12,27)" fg:x="1414" fg:w="3"/><text x="85.8432%" y="223.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.18%)</title><rect x="85.5932%" y="197" width="0.1816%" height="15" fill="rgb(219,227,11)" fg:x="1414" fg:w="3"/><text x="85.8432%" y="207.50"></text></g><g><title>neigh_hh_output (3 samples, 0.18%)</title><rect x="85.5932%" y="181" width="0.1816%" height="15" fill="rgb(241,98,1)" fg:x="1414" fg:w="3"/><text x="85.8432%" y="191.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.18%)</title><rect x="85.5932%" y="165" width="0.1816%" height="15" fill="rgb(232,116,37)" fg:x="1414" fg:w="3"/><text x="85.8432%" y="175.50"></text></g><g><title>__dev_xmit_skb (3 samples, 0.18%)</title><rect x="85.5932%" y="149" width="0.1816%" height="15" fill="rgb(242,199,22)" fg:x="1414" fg:w="3"/><text x="85.8432%" y="159.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.12%)</title><rect x="85.6538%" y="133" width="0.1211%" height="15" fill="rgb(222,128,44)" fg:x="1415" fg:w="2"/><text x="85.9038%" y="143.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.12%)</title><rect x="85.6538%" y="117" width="0.1211%" height="15" fill="rgb(251,86,39)" fg:x="1415" fg:w="2"/><text x="85.9038%" y="127.50"></text></g><g><title>ena_start_xmit (1 samples, 0.06%)</title><rect x="85.7143%" y="101" width="0.0605%" height="15" fill="rgb(224,126,50)" fg:x="1416" fg:w="1"/><text x="85.9643%" y="111.50"></text></g><g><title>ena_xmit_common (1 samples, 0.06%)</title><rect x="85.7143%" y="85" width="0.0605%" height="15" fill="rgb(216,203,50)" fg:x="1416" fg:w="1"/><text x="85.9643%" y="95.50"></text></g><g><title>__sys_recvfrom (23 samples, 1.39%)</title><rect x="84.4431%" y="421" width="1.3923%" height="15" fill="rgb(223,213,54)" fg:x="1395" fg:w="23"/><text x="84.6931%" y="431.50"></text></g><g><title>inet_recvmsg (23 samples, 1.39%)</title><rect x="84.4431%" y="405" width="1.3923%" height="15" fill="rgb(247,19,13)" fg:x="1395" fg:w="23"/><text x="84.6931%" y="415.50"></text></g><g><title>tcp_recvmsg (23 samples, 1.39%)</title><rect x="84.4431%" y="389" width="1.3923%" height="15" fill="rgb(228,39,8)" fg:x="1395" fg:w="23"/><text x="84.6931%" y="399.50"></text></g><g><title>tcp_recvmsg_locked (21 samples, 1.27%)</title><rect x="84.5642%" y="373" width="1.2712%" height="15" fill="rgb(253,180,25)" fg:x="1397" fg:w="21"/><text x="84.8142%" y="383.50"></text></g><g><title>tcp_cleanup_rbuf (6 samples, 0.36%)</title><rect x="85.4722%" y="357" width="0.3632%" height="15" fill="rgb(223,19,39)" fg:x="1412" fg:w="6"/><text x="85.7222%" y="367.50"></text></g><g><title>__tcp_cleanup_rbuf (6 samples, 0.36%)</title><rect x="85.4722%" y="341" width="0.3632%" height="15" fill="rgb(225,131,45)" fg:x="1412" fg:w="6"/><text x="85.7222%" y="351.50"></text></g><g><title>tcp_send_ack (6 samples, 0.36%)</title><rect x="85.4722%" y="325" width="0.3632%" height="15" fill="rgb(244,175,51)" fg:x="1412" fg:w="6"/><text x="85.7222%" y="335.50"></text></g><g><title>__tcp_send_ack.part.0 (6 samples, 0.36%)</title><rect x="85.4722%" y="309" width="0.3632%" height="15" fill="rgb(250,64,3)" fg:x="1412" fg:w="6"/><text x="85.7222%" y="319.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.30%)</title><rect x="85.5327%" y="293" width="0.3027%" height="15" fill="rgb(238,106,36)" fg:x="1413" fg:w="5"/><text x="85.7827%" y="303.50"></text></g><g><title>tcp_established_options (1 samples, 0.06%)</title><rect x="85.7748%" y="277" width="0.0605%" height="15" fill="rgb(239,162,26)" fg:x="1417" fg:w="1"/><text x="86.0248%" y="287.50"></text></g><g><title>BIO_read (27 samples, 1.63%)</title><rect x="84.2615%" y="709" width="1.6344%" height="15" fill="rgb(222,53,33)" fg:x="1392" fg:w="27"/><text x="84.5115%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (25 samples, 1.51%)</title><rect x="84.3826%" y="693" width="1.5133%" height="15" fill="rgb(222,124,3)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="703.50"></text></g><g><title>[libcrypto.so.3.0.8] (25 samples, 1.51%)</title><rect x="84.3826%" y="677" width="1.5133%" height="15" fill="rgb(222,124,3)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="687.50"></text></g><g><title>openssl::ssl::bio::bread (25 samples, 1.51%)</title><rect x="84.3826%" y="661" width="1.5133%" height="15" fill="rgb(213,132,17)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="671.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (25 samples, 1.51%)</title><rect x="84.3826%" y="645" width="1.5133%" height="15" fill="rgb(243,131,41)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="655.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (25 samples, 1.51%)</title><rect x="84.3826%" y="629" width="1.5133%" height="15" fill="rgb(235,57,13)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (25 samples, 1.51%)</title><rect x="84.3826%" y="613" width="1.5133%" height="15" fill="rgb(205,209,50)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="623.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 1.51%)</title><rect x="84.3826%" y="597" width="1.5133%" height="15" fill="rgb(213,217,36)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 1.51%)</title><rect x="84.3826%" y="581" width="1.5133%" height="15" fill="rgb(206,23,40)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 1.51%)</title><rect x="84.3826%" y="565" width="1.5133%" height="15" fill="rgb(225,218,7)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 1.51%)</title><rect x="84.3826%" y="549" width="1.5133%" height="15" fill="rgb(240,131,42)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="559.50"></text></g><g><title>__libc_recv (25 samples, 1.51%)</title><rect x="84.3826%" y="533" width="1.5133%" height="15" fill="rgb(249,36,48)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="543.50"></text></g><g><title>el0t_64_sync_handler (25 samples, 1.51%)</title><rect x="84.3826%" y="517" width="1.5133%" height="15" fill="rgb(232,35,33)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="527.50"></text></g><g><title>el0_svc (25 samples, 1.51%)</title><rect x="84.3826%" y="501" width="1.5133%" height="15" fill="rgb(225,46,33)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="511.50"></text></g><g><title>do_el0_svc (25 samples, 1.51%)</title><rect x="84.3826%" y="485" width="1.5133%" height="15" fill="rgb(221,53,8)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="495.50"></text></g><g><title>el0_svc_common.constprop.0 (25 samples, 1.51%)</title><rect x="84.3826%" y="469" width="1.5133%" height="15" fill="rgb(219,7,42)" fg:x="1394" fg:w="25"/><text x="84.6326%" y="479.50"></text></g><g><title>invoke_syscall (24 samples, 1.45%)</title><rect x="84.4431%" y="453" width="1.4528%" height="15" fill="rgb(234,209,2)" fg:x="1395" fg:w="24"/><text x="84.6931%" y="463.50"></text></g><g><title>__arm64_sys_recvfrom (24 samples, 1.45%)</title><rect x="84.4431%" y="437" width="1.4528%" height="15" fill="rgb(220,214,49)" fg:x="1395" fg:w="24"/><text x="84.6931%" y="447.50"></text></g><g><title>memset (1 samples, 0.06%)</title><rect x="85.8354%" y="421" width="0.0605%" height="15" fill="rgb(251,9,1)" fg:x="1418" fg:w="1"/><text x="86.0854%" y="431.50"></text></g><g><title>EVP_DecryptUpdate (2 samples, 0.12%)</title><rect x="85.8959%" y="709" width="0.1211%" height="15" fill="rgb(244,216,6)" fg:x="1419" fg:w="2"/><text x="86.1459%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="85.8959%" y="693" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1419" fg:w="2"/><text x="86.1459%" y="703.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="85.8959%" y="677" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1419" fg:w="2"/><text x="86.1459%" y="687.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="85.8959%" y="661" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1419" fg:w="2"/><text x="86.1459%" y="671.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="85.9564%" y="645" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="655.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="85.9564%" y="629" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="639.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="85.9564%" y="613" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="623.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="85.9564%" y="597" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="607.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="85.9564%" y="581" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="591.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="85.9564%" y="565" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="575.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="85.9564%" y="549" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="559.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="85.9564%" y="533" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="543.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="85.9564%" y="517" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="527.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="85.9564%" y="501" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="511.50"></text></g><g><title>napi_consume_skb (1 samples, 0.06%)</title><rect x="85.9564%" y="485" width="0.0605%" height="15" fill="rgb(244,99,54)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="495.50"></text></g><g><title>skb_release_data (1 samples, 0.06%)</title><rect x="85.9564%" y="469" width="0.0605%" height="15" fill="rgb(252,193,18)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="479.50"></text></g><g><title>page_frag_free (1 samples, 0.06%)</title><rect x="85.9564%" y="453" width="0.0605%" height="15" fill="rgb(228,79,29)" fg:x="1420" fg:w="1"/><text x="86.2064%" y="463.50"></text></g><g><title>[libssl.so.3.0.8] (33 samples, 2.00%)</title><rect x="84.0799%" y="725" width="1.9976%" height="15" fill="rgb(243,173,28)" fg:x="1389" fg:w="33"/><text x="84.3299%" y="735.50">[..</text></g><g><title>__free (1 samples, 0.06%)</title><rect x="86.0169%" y="709" width="0.0605%" height="15" fill="rgb(211,107,33)" fg:x="1421" fg:w="1"/><text x="86.2669%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="86.0169%" y="693" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="1421" fg:w="1"/><text x="86.2669%" y="703.50"></text></g><g><title>__GI___memcpy_simd (2 samples, 0.12%)</title><rect x="86.0775%" y="725" width="0.1211%" height="15" fill="rgb(208,42,30)" fg:x="1422" fg:w="2"/><text x="86.3275%" y="735.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (38 samples, 2.30%)</title><rect x="84.0194%" y="789" width="2.3002%" height="15" fill="rgb(229,181,33)" fg:x="1388" fg:w="38"/><text x="84.2694%" y="799.50">&lt;..</text></g><g><title>SSL_read (37 samples, 2.24%)</title><rect x="84.0799%" y="773" width="2.2397%" height="15" fill="rgb(229,92,0)" fg:x="1389" fg:w="37"/><text x="84.3299%" y="783.50">S..</text></g><g><title>[libssl.so.3.0.8] (37 samples, 2.24%)</title><rect x="84.0799%" y="757" width="2.2397%" height="15" fill="rgb(243,173,28)" fg:x="1389" fg:w="37"/><text x="84.3299%" y="767.50">[..</text></g><g><title>[libssl.so.3.0.8] (37 samples, 2.24%)</title><rect x="84.0799%" y="741" width="2.2397%" height="15" fill="rgb(243,173,28)" fg:x="1389" fg:w="37"/><text x="84.3299%" y="751.50">[..</text></g><g><title>__free (2 samples, 0.12%)</title><rect x="86.1985%" y="725" width="0.1211%" height="15" fill="rgb(211,107,33)" fg:x="1424" fg:w="2"/><text x="86.4485%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="86.2591%" y="709" width="0.0605%" height="15" fill="rgb(221,113,48)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="719.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="86.2591%" y="693" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="703.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="86.2591%" y="677" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="687.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="86.2591%" y="661" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="671.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="86.2591%" y="645" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="655.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="86.2591%" y="629" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="639.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="86.2591%" y="613" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="623.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="86.2591%" y="597" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="607.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="86.2591%" y="581" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="591.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="86.2591%" y="565" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1425" fg:w="1"/><text x="86.5091%" y="575.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (67 samples, 4.06%)</title><rect x="82.4455%" y="869" width="4.0557%" height="15" fill="rgb(230,174,3)" fg:x="1362" fg:w="67"/><text x="82.6955%" y="879.50">hype..</text></g><g><title>hyper::proto::h1::decode::Decoder::decode (47 samples, 2.85%)</title><rect x="83.6562%" y="853" width="2.8450%" height="15" fill="rgb(231,229,53)" fg:x="1382" fg:w="47"/><text x="83.9062%" y="863.50">hy..</text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (46 samples, 2.78%)</title><rect x="83.7167%" y="837" width="2.7845%" height="15" fill="rgb(212,188,0)" fg:x="1383" fg:w="46"/><text x="83.9667%" y="847.50">&lt;h..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (42 samples, 2.54%)</title><rect x="83.9588%" y="821" width="2.5424%" height="15" fill="rgb(243,39,4)" fg:x="1387" fg:w="42"/><text x="84.2088%" y="831.50">hy..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (41 samples, 2.48%)</title><rect x="84.0194%" y="805" width="2.4818%" height="15" fill="rgb(230,77,10)" fg:x="1388" fg:w="41"/><text x="84.2694%" y="815.50">&lt;t..</text></g><g><title>__memset_generic (3 samples, 0.18%)</title><rect x="86.3196%" y="789" width="0.1816%" height="15" fill="rgb(239,146,25)" fg:x="1426" fg:w="3"/><text x="86.5696%" y="799.50"></text></g><g><title>&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.06%)</title><rect x="86.6223%" y="821" width="0.0605%" height="15" fill="rgb(252,164,2)" fg:x="1431" fg:w="1"/><text x="86.8723%" y="831.50"></text></g><g><title>BIO_ctrl (1 samples, 0.06%)</title><rect x="87.1065%" y="741" width="0.0605%" height="15" fill="rgb(238,83,39)" fg:x="1439" fg:w="1"/><text x="87.3565%" y="751.50"></text></g><g><title>BIO_ctrl (3 samples, 0.18%)</title><rect x="87.1671%" y="725" width="0.1816%" height="15" fill="rgb(238,83,39)" fg:x="1440" fg:w="3"/><text x="87.4171%" y="735.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.06%)</title><rect x="87.2881%" y="709" width="0.0605%" height="15" fill="rgb(235,80,21)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="719.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.06%)</title><rect x="87.2881%" y="693" width="0.0605%" height="15" fill="rgb(217,188,25)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="703.50"></text></g><g><title>el0_interrupt (1 samples, 0.06%)</title><rect x="87.2881%" y="677" width="0.0605%" height="15" fill="rgb(227,66,35)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="687.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="87.2881%" y="661" width="0.0605%" height="15" fill="rgb(240,18,12)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="671.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.06%)</title><rect x="87.2881%" y="645" width="0.0605%" height="15" fill="rgb(221,172,49)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="655.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="87.2881%" y="629" width="0.0605%" height="15" fill="rgb(223,89,53)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="639.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.06%)</title><rect x="87.2881%" y="613" width="0.0605%" height="15" fill="rgb(247,223,36)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="623.50"></text></g><g><title>____do_softirq (1 samples, 0.06%)</title><rect x="87.2881%" y="597" width="0.0605%" height="15" fill="rgb(212,141,15)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="607.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="87.2881%" y="581" width="0.0605%" height="15" fill="rgb(249,91,22)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="591.50"></text></g><g><title>net_rx_action (1 samples, 0.06%)</title><rect x="87.2881%" y="565" width="0.0605%" height="15" fill="rgb(231,11,52)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="575.50"></text></g><g><title>__napi_poll (1 samples, 0.06%)</title><rect x="87.2881%" y="549" width="0.0605%" height="15" fill="rgb(206,61,33)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="559.50"></text></g><g><title>ena_io_poll (1 samples, 0.06%)</title><rect x="87.2881%" y="533" width="0.0605%" height="15" fill="rgb(220,65,30)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="543.50"></text></g><g><title>ena_clean_rx_irq (1 samples, 0.06%)</title><rect x="87.2881%" y="517" width="0.0605%" height="15" fill="rgb(226,177,46)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="527.50"></text></g><g><title>ena_refill_rx_bufs (1 samples, 0.06%)</title><rect x="87.2881%" y="501" width="0.0605%" height="15" fill="rgb(212,226,14)" fg:x="1442" fg:w="1"/><text x="87.5381%" y="511.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="87.5303%" y="533" width="0.0605%" height="15" fill="rgb(215,118,7)" fg:x="1446" fg:w="1"/><text x="87.7803%" y="543.50"></text></g><g><title>lock_sock_nested (1 samples, 0.06%)</title><rect x="87.7119%" y="405" width="0.0605%" height="15" fill="rgb(207,134,26)" fg:x="1449" fg:w="1"/><text x="87.9619%" y="415.50"></text></g><g><title>tcp_recv_timestamp (1 samples, 0.06%)</title><rect x="87.7724%" y="405" width="0.0605%" height="15" fill="rgb(235,104,26)" fg:x="1450" fg:w="1"/><text x="88.0224%" y="415.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="87.8329%" y="357" width="0.0605%" height="15" fill="rgb(252,225,4)" fg:x="1451" fg:w="1"/><text x="88.0829%" y="367.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="87.8935%" y="309" width="0.0605%" height="15" fill="rgb(254,91,48)" fg:x="1452" fg:w="1"/><text x="88.1435%" y="319.50"></text></g><g><title>mem_cgroup_charge_skmem (1 samples, 0.06%)</title><rect x="87.8935%" y="293" width="0.0605%" height="15" fill="rgb(248,15,41)" fg:x="1452" fg:w="1"/><text x="88.1435%" y="303.50"></text></g><g><title>try_charge_memcg (1 samples, 0.06%)</title><rect x="87.8935%" y="277" width="0.0605%" height="15" fill="rgb(209,44,39)" fg:x="1452" fg:w="1"/><text x="88.1435%" y="287.50"></text></g><g><title>release_sock (4 samples, 0.24%)</title><rect x="87.8329%" y="389" width="0.2421%" height="15" fill="rgb(217,78,19)" fg:x="1451" fg:w="4"/><text x="88.0829%" y="399.50"></text></g><g><title>__release_sock (4 samples, 0.24%)</title><rect x="87.8329%" y="373" width="0.2421%" height="15" fill="rgb(211,114,53)" fg:x="1451" fg:w="4"/><text x="88.0829%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.18%)</title><rect x="87.8935%" y="357" width="0.1816%" height="15" fill="rgb(228,220,18)" fg:x="1452" fg:w="3"/><text x="88.1435%" y="367.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.18%)</title><rect x="87.8935%" y="341" width="0.1816%" height="15" fill="rgb(224,50,47)" fg:x="1452" fg:w="3"/><text x="88.1435%" y="351.50"></text></g><g><title>tcp_data_queue (3 samples, 0.18%)</title><rect x="87.8935%" y="325" width="0.1816%" height="15" fill="rgb(221,5,12)" fg:x="1452" fg:w="3"/><text x="88.1435%" y="335.50"></text></g><g><title>tcp_data_ready (2 samples, 0.12%)</title><rect x="87.9540%" y="309" width="0.1211%" height="15" fill="rgb(238,57,28)" fg:x="1453" fg:w="2"/><text x="88.2040%" y="319.50"></text></g><g><title>sock_def_readable (2 samples, 0.12%)</title><rect x="87.9540%" y="293" width="0.1211%" height="15" fill="rgb(209,192,28)" fg:x="1453" fg:w="2"/><text x="88.2040%" y="303.50"></text></g><g><title>__wake_up_sync_key (2 samples, 0.12%)</title><rect x="87.9540%" y="277" width="0.1211%" height="15" fill="rgb(225,130,1)" fg:x="1453" fg:w="2"/><text x="88.2040%" y="287.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.12%)</title><rect x="87.9540%" y="261" width="0.1211%" height="15" fill="rgb(248,80,4)" fg:x="1453" fg:w="2"/><text x="88.2040%" y="271.50"></text></g><g><title>__folio_put (1 samples, 0.06%)</title><rect x="88.1356%" y="341" width="0.0605%" height="15" fill="rgb(231,215,36)" fg:x="1456" fg:w="1"/><text x="88.3856%" y="351.50"></text></g><g><title>free_unref_page (1 samples, 0.06%)</title><rect x="88.1356%" y="325" width="0.0605%" height="15" fill="rgb(212,90,28)" fg:x="1456" fg:w="1"/><text x="88.3856%" y="335.50"></text></g><g><title>skb_attempt_defer_free (3 samples, 0.18%)</title><rect x="88.0751%" y="373" width="0.1816%" height="15" fill="rgb(227,173,46)" fg:x="1455" fg:w="3"/><text x="88.3251%" y="383.50"></text></g><g><title>skb_release_data (2 samples, 0.12%)</title><rect x="88.1356%" y="357" width="0.1211%" height="15" fill="rgb(252,193,18)" fg:x="1456" fg:w="2"/><text x="88.3856%" y="367.50"></text></g><g><title>skb_free_head (1 samples, 0.06%)</title><rect x="88.1961%" y="341" width="0.0605%" height="15" fill="rgb(210,171,50)" fg:x="1457" fg:w="1"/><text x="88.4461%" y="351.50"></text></g><g><title>page_frag_free (1 samples, 0.06%)</title><rect x="88.1961%" y="325" width="0.0605%" height="15" fill="rgb(228,79,29)" fg:x="1457" fg:w="1"/><text x="88.4461%" y="335.50"></text></g><g><title>free_unref_page (1 samples, 0.06%)</title><rect x="88.1961%" y="309" width="0.0605%" height="15" fill="rgb(212,90,28)" fg:x="1457" fg:w="1"/><text x="88.4461%" y="319.50"></text></g><g><title>__arch_copy_to_user (4 samples, 0.24%)</title><rect x="88.3172%" y="325" width="0.2421%" height="15" fill="rgb(210,178,31)" fg:x="1459" fg:w="4"/><text x="88.5672%" y="335.50"></text></g><g><title>skb_copy_datagram_iter (7 samples, 0.42%)</title><rect x="88.2567%" y="373" width="0.4237%" height="15" fill="rgb(241,149,22)" fg:x="1458" fg:w="7"/><text x="88.5067%" y="383.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.36%)</title><rect x="88.3172%" y="357" width="0.3632%" height="15" fill="rgb(248,96,51)" fg:x="1459" fg:w="6"/><text x="88.5672%" y="367.50"></text></g><g><title>simple_copy_to_iter (6 samples, 0.36%)</title><rect x="88.3172%" y="341" width="0.3632%" height="15" fill="rgb(239,76,11)" fg:x="1459" fg:w="6"/><text x="88.5672%" y="351.50"></text></g><g><title>__check_object_size (2 samples, 0.12%)</title><rect x="88.5593%" y="325" width="0.1211%" height="15" fill="rgb(218,1,22)" fg:x="1463" fg:w="2"/><text x="88.8093%" y="335.50"></text></g><g><title>__check_object_size.part.0 (2 samples, 0.12%)</title><rect x="88.5593%" y="309" width="0.1211%" height="15" fill="rgb(217,52,49)" fg:x="1463" fg:w="2"/><text x="88.8093%" y="319.50"></text></g><g><title>check_heap_object (1 samples, 0.06%)</title><rect x="88.6199%" y="293" width="0.0605%" height="15" fill="rgb(246,112,49)" fg:x="1464" fg:w="1"/><text x="88.8699%" y="303.50"></text></g><g><title>arch_local_irq_disable (1 samples, 0.06%)</title><rect x="88.6804%" y="341" width="0.0605%" height="15" fill="rgb(232,161,26)" fg:x="1465" fg:w="1"/><text x="88.9304%" y="351.50"></text></g><g><title>sock_rfree (2 samples, 0.12%)</title><rect x="88.6804%" y="373" width="0.1211%" height="15" fill="rgb(211,40,33)" fg:x="1465" fg:w="2"/><text x="88.9304%" y="383.50"></text></g><g><title>__sk_mem_reduce_allocated (2 samples, 0.12%)</title><rect x="88.6804%" y="357" width="0.1211%" height="15" fill="rgb(252,220,0)" fg:x="1465" fg:w="2"/><text x="88.9304%" y="367.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="88.7409%" y="341" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="1466" fg:w="1"/><text x="88.9909%" y="351.50"></text></g><g><title>ena_com_close_bounce_buffer (1 samples, 0.06%)</title><rect x="89.0436%" y="85" width="0.0605%" height="15" fill="rgb(213,25,52)" fg:x="1471" fg:w="1"/><text x="89.2936%" y="95.50"></text></g><g><title>ena_com_sq_update_tail (1 samples, 0.06%)</title><rect x="89.1041%" y="69" width="0.0605%" height="15" fill="rgb(222,204,14)" fg:x="1472" fg:w="1"/><text x="89.3541%" y="79.50"></text></g><g><title>ena_com_write_bounce_buffer_to_dev (1 samples, 0.06%)</title><rect x="89.1041%" y="53" width="0.0605%" height="15" fill="rgb(244,13,28)" fg:x="1472" fg:w="1"/><text x="89.3541%" y="63.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.24%)</title><rect x="88.9831%" y="133" width="0.2421%" height="15" fill="rgb(251,86,39)" fg:x="1470" fg:w="4"/><text x="89.2331%" y="143.50"></text></g><g><title>ena_start_xmit (4 samples, 0.24%)</title><rect x="88.9831%" y="117" width="0.2421%" height="15" fill="rgb(224,126,50)" fg:x="1470" fg:w="4"/><text x="89.2331%" y="127.50"></text></g><g><title>ena_xmit_common (4 samples, 0.24%)</title><rect x="88.9831%" y="101" width="0.2421%" height="15" fill="rgb(216,203,50)" fg:x="1470" fg:w="4"/><text x="89.2331%" y="111.50"></text></g><g><title>ena_com_prepare_tx (2 samples, 0.12%)</title><rect x="89.1041%" y="85" width="0.1211%" height="15" fill="rgb(231,3,27)" fg:x="1472" fg:w="2"/><text x="89.3541%" y="95.50"></text></g><g><title>memmove (1 samples, 0.06%)</title><rect x="89.1646%" y="69" width="0.0605%" height="15" fill="rgb(240,41,46)" fg:x="1473" fg:w="1"/><text x="89.4146%" y="79.50"></text></g><g><title>inet_recvmsg (27 samples, 1.63%)</title><rect x="87.7119%" y="421" width="1.6344%" height="15" fill="rgb(247,19,13)" fg:x="1449" fg:w="27"/><text x="87.9619%" y="431.50"></text></g><g><title>tcp_recvmsg (25 samples, 1.51%)</title><rect x="87.8329%" y="405" width="1.5133%" height="15" fill="rgb(228,39,8)" fg:x="1451" fg:w="25"/><text x="88.0829%" y="415.50"></text></g><g><title>tcp_recvmsg_locked (21 samples, 1.27%)</title><rect x="88.0751%" y="389" width="1.2712%" height="15" fill="rgb(253,180,25)" fg:x="1455" fg:w="21"/><text x="88.3251%" y="399.50"></text></g><g><title>tcp_cleanup_rbuf (9 samples, 0.54%)</title><rect x="88.8015%" y="373" width="0.5448%" height="15" fill="rgb(223,19,39)" fg:x="1467" fg:w="9"/><text x="89.0515%" y="383.50"></text></g><g><title>__tcp_cleanup_rbuf (9 samples, 0.54%)</title><rect x="88.8015%" y="357" width="0.5448%" height="15" fill="rgb(225,131,45)" fg:x="1467" fg:w="9"/><text x="89.0515%" y="367.50"></text></g><g><title>tcp_send_ack (9 samples, 0.54%)</title><rect x="88.8015%" y="341" width="0.5448%" height="15" fill="rgb(244,175,51)" fg:x="1467" fg:w="9"/><text x="89.0515%" y="351.50"></text></g><g><title>__tcp_send_ack.part.0 (9 samples, 0.54%)</title><rect x="88.8015%" y="325" width="0.5448%" height="15" fill="rgb(250,64,3)" fg:x="1467" fg:w="9"/><text x="89.0515%" y="335.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.54%)</title><rect x="88.8015%" y="309" width="0.5448%" height="15" fill="rgb(238,106,36)" fg:x="1467" fg:w="9"/><text x="89.0515%" y="319.50"></text></g><g><title>ip_queue_xmit (9 samples, 0.54%)</title><rect x="88.8015%" y="293" width="0.5448%" height="15" fill="rgb(241,58,19)" fg:x="1467" fg:w="9"/><text x="89.0515%" y="303.50"></text></g><g><title>__ip_queue_xmit (9 samples, 0.54%)</title><rect x="88.8015%" y="277" width="0.5448%" height="15" fill="rgb(224,11,5)" fg:x="1467" fg:w="9"/><text x="89.0515%" y="287.50"></text></g><g><title>ip_output (8 samples, 0.48%)</title><rect x="88.8620%" y="261" width="0.4843%" height="15" fill="rgb(213,11,33)" fg:x="1468" fg:w="8"/><text x="89.1120%" y="271.50"></text></g><g><title>ip_finish_output (8 samples, 0.48%)</title><rect x="88.8620%" y="245" width="0.4843%" height="15" fill="rgb(215,36,54)" fg:x="1468" fg:w="8"/><text x="89.1120%" y="255.50"></text></g><g><title>__ip_finish_output (8 samples, 0.48%)</title><rect x="88.8620%" y="229" width="0.4843%" height="15" fill="rgb(252,12,27)" fg:x="1468" fg:w="8"/><text x="89.1120%" y="239.50"></text></g><g><title>ip_finish_output2 (8 samples, 0.48%)</title><rect x="88.8620%" y="213" width="0.4843%" height="15" fill="rgb(219,227,11)" fg:x="1468" fg:w="8"/><text x="89.1120%" y="223.50"></text></g><g><title>neigh_hh_output (7 samples, 0.42%)</title><rect x="88.9225%" y="197" width="0.4237%" height="15" fill="rgb(241,98,1)" fg:x="1469" fg:w="7"/><text x="89.1725%" y="207.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.42%)</title><rect x="88.9225%" y="181" width="0.4237%" height="15" fill="rgb(232,116,37)" fg:x="1469" fg:w="7"/><text x="89.1725%" y="191.50"></text></g><g><title>__dev_xmit_skb (7 samples, 0.42%)</title><rect x="88.9225%" y="165" width="0.4237%" height="15" fill="rgb(242,199,22)" fg:x="1469" fg:w="7"/><text x="89.1725%" y="175.50"></text></g><g><title>sch_direct_xmit (6 samples, 0.36%)</title><rect x="88.9831%" y="149" width="0.3632%" height="15" fill="rgb(222,128,44)" fg:x="1470" fg:w="6"/><text x="89.2331%" y="159.50"></text></g><g><title>validate_xmit_skb_list (2 samples, 0.12%)</title><rect x="89.2252%" y="133" width="0.1211%" height="15" fill="rgb(254,174,52)" fg:x="1474" fg:w="2"/><text x="89.4752%" y="143.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.12%)</title><rect x="89.2252%" y="117" width="0.1211%" height="15" fill="rgb(240,104,40)" fg:x="1474" fg:w="2"/><text x="89.4752%" y="127.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.06%)</title><rect x="89.2857%" y="101" width="0.0605%" height="15" fill="rgb(229,109,34)" fg:x="1475" fg:w="1"/><text x="89.5357%" y="111.50"></text></g><g><title>security_socket_recvmsg (2 samples, 0.12%)</title><rect x="89.3462%" y="421" width="0.1211%" height="15" fill="rgb(251,47,32)" fg:x="1476" fg:w="2"/><text x="89.5962%" y="431.50"></text></g><g><title>selinux_socket_recvmsg (2 samples, 0.12%)</title><rect x="89.3462%" y="405" width="0.1211%" height="15" fill="rgb(236,191,14)" fg:x="1476" fg:w="2"/><text x="89.5962%" y="415.50"></text></g><g><title>avc_lookup (1 samples, 0.06%)</title><rect x="89.4068%" y="389" width="0.0605%" height="15" fill="rgb(223,23,32)" fg:x="1477" fg:w="1"/><text x="89.6568%" y="399.50"></text></g><g><title>__sys_recvfrom (33 samples, 2.00%)</title><rect x="87.7119%" y="437" width="1.9976%" height="15" fill="rgb(223,213,54)" fg:x="1449" fg:w="33"/><text x="87.9619%" y="447.50">_..</text></g><g><title>sockfd_lookup_light (4 samples, 0.24%)</title><rect x="89.4673%" y="421" width="0.2421%" height="15" fill="rgb(234,43,45)" fg:x="1478" fg:w="4"/><text x="89.7173%" y="431.50"></text></g><g><title>__fdget (4 samples, 0.24%)</title><rect x="89.4673%" y="405" width="0.2421%" height="15" fill="rgb(239,45,19)" fg:x="1478" fg:w="4"/><text x="89.7173%" y="415.50"></text></g><g><title>__fget_light (4 samples, 0.24%)</title><rect x="89.4673%" y="389" width="0.2421%" height="15" fill="rgb(243,103,32)" fg:x="1478" fg:w="4"/><text x="89.7173%" y="399.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (37 samples, 2.24%)</title><rect x="87.5303%" y="629" width="2.2397%" height="15" fill="rgb(205,209,50)" fg:x="1446" fg:w="37"/><text x="87.7803%" y="639.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (37 samples, 2.24%)</title><rect x="87.5303%" y="613" width="2.2397%" height="15" fill="rgb(213,217,36)" fg:x="1446" fg:w="37"/><text x="87.7803%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (37 samples, 2.24%)</title><rect x="87.5303%" y="597" width="2.2397%" height="15" fill="rgb(206,23,40)" fg:x="1446" fg:w="37"/><text x="87.7803%" y="607.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (37 samples, 2.24%)</title><rect x="87.5303%" y="581" width="2.2397%" height="15" fill="rgb(225,218,7)" fg:x="1446" fg:w="37"/><text x="87.7803%" y="591.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (37 samples, 2.24%)</title><rect x="87.5303%" y="565" width="2.2397%" height="15" fill="rgb(240,131,42)" fg:x="1446" fg:w="37"/><text x="87.7803%" y="575.50">s..</text></g><g><title>__libc_recv (37 samples, 2.24%)</title><rect x="87.5303%" y="549" width="2.2397%" height="15" fill="rgb(249,36,48)" fg:x="1446" fg:w="37"/><text x="87.7803%" y="559.50">_..</text></g><g><title>el0t_64_sync_handler (36 samples, 2.18%)</title><rect x="87.5908%" y="533" width="2.1792%" height="15" fill="rgb(232,35,33)" fg:x="1447" fg:w="36"/><text x="87.8408%" y="543.50">e..</text></g><g><title>el0_svc (36 samples, 2.18%)</title><rect x="87.5908%" y="517" width="2.1792%" height="15" fill="rgb(225,46,33)" fg:x="1447" fg:w="36"/><text x="87.8408%" y="527.50">e..</text></g><g><title>do_el0_svc (36 samples, 2.18%)</title><rect x="87.5908%" y="501" width="2.1792%" height="15" fill="rgb(221,53,8)" fg:x="1447" fg:w="36"/><text x="87.8408%" y="511.50">d..</text></g><g><title>el0_svc_common.constprop.0 (36 samples, 2.18%)</title><rect x="87.5908%" y="485" width="2.1792%" height="15" fill="rgb(219,7,42)" fg:x="1447" fg:w="36"/><text x="87.8408%" y="495.50">e..</text></g><g><title>invoke_syscall (34 samples, 2.06%)</title><rect x="87.7119%" y="469" width="2.0581%" height="15" fill="rgb(234,209,2)" fg:x="1449" fg:w="34"/><text x="87.9619%" y="479.50">i..</text></g><g><title>__arm64_sys_recvfrom (34 samples, 2.06%)</title><rect x="87.7119%" y="453" width="2.0581%" height="15" fill="rgb(220,214,49)" fg:x="1449" fg:w="34"/><text x="87.9619%" y="463.50">_..</text></g><g><title>import_single_range (1 samples, 0.06%)</title><rect x="89.7094%" y="437" width="0.0605%" height="15" fill="rgb(208,154,40)" fg:x="1482" fg:w="1"/><text x="89.9594%" y="447.50"></text></g><g><title>BIO_read (41 samples, 2.48%)</title><rect x="87.3487%" y="725" width="2.4818%" height="15" fill="rgb(222,53,33)" fg:x="1443" fg:w="41"/><text x="87.5987%" y="735.50">BI..</text></g><g><title>[libcrypto.so.3.0.8] (38 samples, 2.30%)</title><rect x="87.5303%" y="709" width="2.3002%" height="15" fill="rgb(222,124,3)" fg:x="1446" fg:w="38"/><text x="87.7803%" y="719.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (38 samples, 2.30%)</title><rect x="87.5303%" y="693" width="2.3002%" height="15" fill="rgb(222,124,3)" fg:x="1446" fg:w="38"/><text x="87.7803%" y="703.50">[..</text></g><g><title>openssl::ssl::bio::bread (38 samples, 2.30%)</title><rect x="87.5303%" y="677" width="2.3002%" height="15" fill="rgb(213,132,17)" fg:x="1446" fg:w="38"/><text x="87.7803%" y="687.50">o..</text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (38 samples, 2.30%)</title><rect x="87.5303%" y="661" width="2.3002%" height="15" fill="rgb(243,131,41)" fg:x="1446" fg:w="38"/><text x="87.7803%" y="671.50">&lt;..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (38 samples, 2.30%)</title><rect x="87.5303%" y="645" width="2.3002%" height="15" fill="rgb(235,57,13)" fg:x="1446" fg:w="38"/><text x="87.7803%" y="655.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.06%)</title><rect x="89.7700%" y="629" width="0.0605%" height="15" fill="rgb(226,221,19)" fg:x="1483" fg:w="1"/><text x="90.0200%" y="639.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (4 samples, 0.24%)</title><rect x="89.8305%" y="725" width="0.2421%" height="15" fill="rgb(219,214,47)" fg:x="1484" fg:w="4"/><text x="90.0805%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="89.8910%" y="709" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="1485" fg:w="3"/><text x="90.1410%" y="719.50"></text></g><g><title>OSSL_PARAM_locate (3 samples, 0.18%)</title><rect x="89.8910%" y="693" width="0.1816%" height="15" fill="rgb(250,105,22)" fg:x="1485" fg:w="3"/><text x="90.1410%" y="703.50"></text></g><g><title>__GI_strcmp (1 samples, 0.06%)</title><rect x="90.0121%" y="677" width="0.0605%" height="15" fill="rgb(237,17,19)" fg:x="1487" fg:w="1"/><text x="90.2621%" y="687.50"></text></g><g><title>EVP_CIPHER_get0_provider (1 samples, 0.06%)</title><rect x="90.0726%" y="725" width="0.0605%" height="15" fill="rgb(242,209,20)" fg:x="1488" fg:w="1"/><text x="90.3226%" y="735.50"></text></g><g><title>EVP_DecryptUpdate (3 samples, 0.18%)</title><rect x="90.1332%" y="725" width="0.1816%" height="15" fill="rgb(244,216,6)" fg:x="1489" fg:w="3"/><text x="90.3832%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="90.1332%" y="709" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="1489" fg:w="3"/><text x="90.3832%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="90.1332%" y="693" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="1489" fg:w="3"/><text x="90.3832%" y="703.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="90.1332%" y="677" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="1489" fg:w="3"/><text x="90.3832%" y="687.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.12%)</title><rect x="90.1937%" y="661" width="0.1211%" height="15" fill="rgb(222,124,3)" fg:x="1490" fg:w="2"/><text x="90.4437%" y="671.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (1 samples, 0.06%)</title><rect x="90.2542%" y="645" width="0.0605%" height="15" fill="rgb(242,102,27)" fg:x="1491" fg:w="1"/><text x="90.5042%" y="655.50"></text></g><g><title>[libssl.so.3.0.8] (55 samples, 3.33%)</title><rect x="87.1671%" y="741" width="3.3293%" height="15" fill="rgb(243,173,28)" fg:x="1440" fg:w="55"/><text x="87.4171%" y="751.50">[li..</text></g><g><title>__GI___libc_malloc (3 samples, 0.18%)</title><rect x="90.3148%" y="725" width="0.1816%" height="15" fill="rgb(206,112,53)" fg:x="1492" fg:w="3"/><text x="90.5648%" y="735.50"></text></g><g><title>_int_malloc (2 samples, 0.12%)</title><rect x="90.3753%" y="709" width="0.1211%" height="15" fill="rgb(222,219,51)" fg:x="1493" fg:w="2"/><text x="90.6253%" y="719.50"></text></g><g><title>malloc_consolidate (2 samples, 0.12%)</title><rect x="90.3753%" y="693" width="0.1211%" height="15" fill="rgb(228,194,39)" fg:x="1493" fg:w="2"/><text x="90.6253%" y="703.50"></text></g><g><title>SSL_read (63 samples, 3.81%)</title><rect x="86.8039%" y="789" width="3.8136%" height="15" fill="rgb(229,92,0)" fg:x="1434" fg:w="63"/><text x="87.0539%" y="799.50">SSL_..</text></g><g><title>[libssl.so.3.0.8] (63 samples, 3.81%)</title><rect x="86.8039%" y="773" width="3.8136%" height="15" fill="rgb(243,173,28)" fg:x="1434" fg:w="63"/><text x="87.0539%" y="783.50">[lib..</text></g><g><title>[libssl.so.3.0.8] (62 samples, 3.75%)</title><rect x="86.8644%" y="757" width="3.7530%" height="15" fill="rgb(243,173,28)" fg:x="1435" fg:w="62"/><text x="87.1144%" y="767.50">[lib..</text></g><g><title>__GI___memcpy_simd (2 samples, 0.12%)</title><rect x="90.4964%" y="741" width="0.1211%" height="15" fill="rgb(208,42,30)" fg:x="1495" fg:w="2"/><text x="90.7464%" y="751.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (64 samples, 3.87%)</title><rect x="86.8039%" y="805" width="3.8741%" height="15" fill="rgb(229,181,33)" fg:x="1434" fg:w="64"/><text x="87.0539%" y="815.50">&lt;ope..</text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::make_error (1 samples, 0.06%)</title><rect x="90.6174%" y="789" width="0.0605%" height="15" fill="rgb(217,192,41)" fg:x="1497" fg:w="1"/><text x="90.8674%" y="799.50"></text></g><g><title>SSL_get_error (1 samples, 0.06%)</title><rect x="90.6174%" y="773" width="0.0605%" height="15" fill="rgb(221,63,27)" fg:x="1497" fg:w="1"/><text x="90.8674%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="90.6174%" y="757" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1497" fg:w="1"/><text x="90.8674%" y="767.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="90.6174%" y="741" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1497" fg:w="1"/><text x="90.8674%" y="751.50"></text></g><g><title>___pthread_getspecific (1 samples, 0.06%)</title><rect x="90.6174%" y="725" width="0.0605%" height="15" fill="rgb(226,150,32)" fg:x="1497" fg:w="1"/><text x="90.8674%" y="735.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (69 samples, 4.18%)</title><rect x="86.5617%" y="837" width="4.1768%" height="15" fill="rgb(243,39,4)" fg:x="1430" fg:w="69"/><text x="86.8117%" y="847.50">hyper..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (67 samples, 4.06%)</title><rect x="86.6828%" y="821" width="4.0557%" height="15" fill="rgb(230,77,10)" fg:x="1432" fg:w="67"/><text x="86.9328%" y="831.50">&lt;tok..</text></g><g><title>__memset_generic (1 samples, 0.06%)</title><rect x="90.6780%" y="805" width="0.0605%" height="15" fill="rgb(239,146,25)" fg:x="1498" fg:w="1"/><text x="90.9280%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.06%)</title><rect x="90.7990%" y="821" width="0.0605%" height="15" fill="rgb(209,163,48)" fg:x="1500" fg:w="1"/><text x="91.0490%" y="831.50"></text></g><g><title>tracing::span::Span::log (1 samples, 0.06%)</title><rect x="90.8596%" y="821" width="0.0605%" height="15" fill="rgb(216,179,3)" fg:x="1501" fg:w="1"/><text x="91.1096%" y="831.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (74 samples, 4.48%)</title><rect x="86.5012%" y="869" width="4.4794%" height="15" fill="rgb(205,143,7)" fg:x="1429" fg:w="74"/><text x="86.7512%" y="879.50">hyper..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (73 samples, 4.42%)</title><rect x="86.5617%" y="853" width="4.4189%" height="15" fill="rgb(241,43,5)" fg:x="1430" fg:w="73"/><text x="86.8117%" y="863.50">hyper..</text></g><g><title>hyper::proto::h1::role::parse_headers (4 samples, 0.24%)</title><rect x="90.7385%" y="837" width="0.2421%" height="15" fill="rgb(233,207,15)" fg:x="1499" fg:w="4"/><text x="90.9885%" y="847.50"></text></g><g><title>tracing::span::Span::record_all (1 samples, 0.06%)</title><rect x="90.9201%" y="821" width="0.0605%" height="15" fill="rgb(211,109,31)" fg:x="1502" fg:w="1"/><text x="91.1701%" y="831.50"></text></g><g><title>BIO_ctrl (1 samples, 0.06%)</title><rect x="91.4044%" y="725" width="0.0605%" height="15" fill="rgb(238,83,39)" fg:x="1510" fg:w="1"/><text x="91.6544%" y="735.50"></text></g><g><title>openssl::ssl::bio::ctrl (1 samples, 0.06%)</title><rect x="91.4044%" y="709" width="0.0605%" height="15" fill="rgb(231,192,28)" fg:x="1510" fg:w="1"/><text x="91.6544%" y="719.50"></text></g><g><title>BIO_get_data (1 samples, 0.06%)</title><rect x="91.4044%" y="693" width="0.0605%" height="15" fill="rgb(213,179,10)" fg:x="1510" fg:w="1"/><text x="91.6544%" y="703.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (4 samples, 0.24%)</title><rect x="91.4649%" y="661" width="0.2421%" height="15" fill="rgb(243,131,41)" fg:x="1511" fg:w="4"/><text x="91.7149%" y="671.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.18%)</title><rect x="91.5254%" y="645" width="0.1816%" height="15" fill="rgb(235,57,13)" fg:x="1512" fg:w="3"/><text x="91.7754%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.06%)</title><rect x="91.6465%" y="629" width="0.0605%" height="15" fill="rgb(226,221,19)" fg:x="1514" fg:w="1"/><text x="91.8965%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.06%)</title><rect x="91.6465%" y="613" width="0.0605%" height="15" fill="rgb(216,63,32)" fg:x="1514" fg:w="1"/><text x="91.8965%" y="623.50"></text></g><g><title>__aarch64_cas1_rel (1 samples, 0.06%)</title><rect x="91.6465%" y="597" width="0.0605%" height="15" fill="rgb(232,202,28)" fg:x="1514" fg:w="1"/><text x="91.8965%" y="607.50"></text></g><g><title>BIO_read (6 samples, 0.36%)</title><rect x="91.4649%" y="725" width="0.3632%" height="15" fill="rgb(222,53,33)" fg:x="1511" fg:w="6"/><text x="91.7149%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 0.36%)</title><rect x="91.4649%" y="709" width="0.3632%" height="15" fill="rgb(222,124,3)" fg:x="1511" fg:w="6"/><text x="91.7149%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 0.36%)</title><rect x="91.4649%" y="693" width="0.3632%" height="15" fill="rgb(222,124,3)" fg:x="1511" fg:w="6"/><text x="91.7149%" y="703.50"></text></g><g><title>openssl::ssl::bio::bread (6 samples, 0.36%)</title><rect x="91.4649%" y="677" width="0.3632%" height="15" fill="rgb(213,132,17)" fg:x="1511" fg:w="6"/><text x="91.7149%" y="687.50"></text></g><g><title>openssl::ssl::bio::retriable_error (2 samples, 0.12%)</title><rect x="91.7070%" y="661" width="0.1211%" height="15" fill="rgb(214,115,19)" fg:x="1515" fg:w="2"/><text x="91.9570%" y="671.50"></text></g><g><title>SSL_read (14 samples, 0.85%)</title><rect x="91.1622%" y="789" width="0.8475%" height="15" fill="rgb(229,92,0)" fg:x="1506" fg:w="14"/><text x="91.4122%" y="799.50"></text></g><g><title>[libssl.so.3.0.8] (14 samples, 0.85%)</title><rect x="91.1622%" y="773" width="0.8475%" height="15" fill="rgb(243,173,28)" fg:x="1506" fg:w="14"/><text x="91.4122%" y="783.50"></text></g><g><title>[libssl.so.3.0.8] (12 samples, 0.73%)</title><rect x="91.2833%" y="757" width="0.7264%" height="15" fill="rgb(243,173,28)" fg:x="1508" fg:w="12"/><text x="91.5333%" y="767.50"></text></g><g><title>[libssl.so.3.0.8] (10 samples, 0.61%)</title><rect x="91.4044%" y="741" width="0.6053%" height="15" fill="rgb(243,173,28)" fg:x="1510" fg:w="10"/><text x="91.6544%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.18%)</title><rect x="91.8281%" y="725" width="0.1816%" height="15" fill="rgb(206,112,53)" fg:x="1517" fg:w="3"/><text x="92.0781%" y="735.50"></text></g><g><title>_int_malloc (3 samples, 0.18%)</title><rect x="91.8281%" y="709" width="0.1816%" height="15" fill="rgb(222,219,51)" fg:x="1517" fg:w="3"/><text x="92.0781%" y="719.50"></text></g><g><title>malloc_consolidate (2 samples, 0.12%)</title><rect x="91.8886%" y="693" width="0.1211%" height="15" fill="rgb(228,194,39)" fg:x="1518" fg:w="2"/><text x="92.1386%" y="703.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (18 samples, 1.09%)</title><rect x="91.1622%" y="805" width="1.0896%" height="15" fill="rgb(229,181,33)" fg:x="1506" fg:w="18"/><text x="91.4122%" y="815.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::make_error (4 samples, 0.24%)</title><rect x="92.0097%" y="789" width="0.2421%" height="15" fill="rgb(217,192,41)" fg:x="1520" fg:w="4"/><text x="92.2597%" y="799.50"></text></g><g><title>SSL_get_error (3 samples, 0.18%)</title><rect x="92.0702%" y="773" width="0.1816%" height="15" fill="rgb(221,63,27)" fg:x="1521" fg:w="3"/><text x="92.3202%" y="783.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="92.0702%" y="757" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="1521" fg:w="3"/><text x="92.3202%" y="767.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 0.18%)</title><rect x="92.0702%" y="741" width="0.1816%" height="15" fill="rgb(222,124,3)" fg:x="1521" fg:w="3"/><text x="92.3202%" y="751.50"></text></g><g><title>OPENSSL_init_crypto (3 samples, 0.18%)</title><rect x="92.0702%" y="725" width="0.1816%" height="15" fill="rgb(205,15,16)" fg:x="1521" fg:w="3"/><text x="92.3202%" y="735.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.06%)</title><rect x="92.1913%" y="709" width="0.0605%" height="15" fill="rgb(220,49,37)" fg:x="1523" fg:w="1"/><text x="92.4413%" y="719.50"></text></g><g><title>__GI___pthread_once (1 samples, 0.06%)</title><rect x="92.1913%" y="693" width="0.0605%" height="15" fill="rgb(247,154,54)" fg:x="1523" fg:w="1"/><text x="92.4413%" y="703.50"></text></g><g><title>BIO_get_data (3 samples, 0.18%)</title><rect x="92.2518%" y="805" width="0.1816%" height="15" fill="rgb(213,179,10)" fg:x="1524" fg:w="3"/><text x="92.5018%" y="815.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (29 samples, 1.76%)</title><rect x="91.1017%" y="821" width="1.7554%" height="15" fill="rgb(230,77,10)" fg:x="1505" fg:w="29"/><text x="91.3517%" y="831.50"></text></g><g><title>__memset_generic (7 samples, 0.42%)</title><rect x="92.4334%" y="805" width="0.4237%" height="15" fill="rgb(239,146,25)" fg:x="1527" fg:w="7"/><text x="92.6834%" y="815.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (32 samples, 1.94%)</title><rect x="90.9806%" y="869" width="1.9370%" height="15" fill="rgb(215,38,35)" fg:x="1503" fg:w="32"/><text x="91.2306%" y="879.50">h..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (31 samples, 1.88%)</title><rect x="91.0412%" y="853" width="1.8765%" height="15" fill="rgb(207,36,19)" fg:x="1504" fg:w="31"/><text x="91.2912%" y="863.50">h..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (31 samples, 1.88%)</title><rect x="91.0412%" y="837" width="1.8765%" height="15" fill="rgb(243,39,4)" fg:x="1504" fg:w="31"/><text x="91.2912%" y="847.50">h..</text></g><g><title>hyper::proto::h1::io::ReadStrategy::next (1 samples, 0.06%)</title><rect x="92.8571%" y="821" width="0.0605%" height="15" fill="rgb(233,139,23)" fg:x="1534" fg:w="1"/><text x="93.1071%" y="831.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.06%)</title><rect x="93.2203%" y="821" width="0.0605%" height="15" fill="rgb(238,16,53)" fg:x="1540" fg:w="1"/><text x="93.4703%" y="831.50"></text></g><g><title>EVP_CIPHER_get_mode (1 samples, 0.06%)</title><rect x="93.5835%" y="741" width="0.0605%" height="15" fill="rgb(207,18,29)" fg:x="1546" fg:w="1"/><text x="93.8335%" y="751.50"></text></g><g><title>EVP_MD_CTX_get0_md (1 samples, 0.06%)</title><rect x="93.6441%" y="741" width="0.0605%" height="15" fill="rgb(241,37,16)" fg:x="1547" fg:w="1"/><text x="93.8941%" y="751.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.06%)</title><rect x="93.8257%" y="661" width="0.0605%" height="15" fill="rgb(232,225,49)" fg:x="1550" fg:w="1"/><text x="94.0757%" y="671.50"></text></g><g><title>tcp_release_cb (1 samples, 0.06%)</title><rect x="93.8862%" y="421" width="0.0605%" height="15" fill="rgb(230,144,50)" fg:x="1551" fg:w="1"/><text x="94.1362%" y="431.50"></text></g><g><title>check_heap_object (2 samples, 0.12%)</title><rect x="93.9467%" y="357" width="0.1211%" height="15" fill="rgb(246,112,49)" fg:x="1552" fg:w="2"/><text x="94.1967%" y="367.50"></text></g><g><title>memblock_is_map_memory (1 samples, 0.06%)</title><rect x="94.0073%" y="341" width="0.0605%" height="15" fill="rgb(232,74,7)" fg:x="1553" fg:w="1"/><text x="94.2573%" y="351.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.24%)</title><rect x="93.9467%" y="405" width="0.2421%" height="15" fill="rgb(209,134,15)" fg:x="1552" fg:w="4"/><text x="94.1967%" y="415.50"></text></g><g><title>__check_object_size (4 samples, 0.24%)</title><rect x="93.9467%" y="389" width="0.2421%" height="15" fill="rgb(218,1,22)" fg:x="1552" fg:w="4"/><text x="94.1967%" y="399.50"></text></g><g><title>__check_object_size.part.0 (4 samples, 0.24%)</title><rect x="93.9467%" y="373" width="0.2421%" height="15" fill="rgb(217,52,49)" fg:x="1552" fg:w="4"/><text x="94.1967%" y="383.50"></text></g><g><title>is_vmalloc_addr (2 samples, 0.12%)</title><rect x="94.0678%" y="357" width="0.1211%" height="15" fill="rgb(231,214,5)" fg:x="1554" fg:w="2"/><text x="94.3178%" y="367.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="94.1889%" y="245" width="0.0605%" height="15" fill="rgb(232,116,37)" fg:x="1556" fg:w="1"/><text x="94.4389%" y="255.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.18%)</title><rect x="94.3099%" y="181" width="0.1816%" height="15" fill="rgb(251,86,39)" fg:x="1558" fg:w="3"/><text x="94.5599%" y="191.50"></text></g><g><title>ena_start_xmit (3 samples, 0.18%)</title><rect x="94.3099%" y="165" width="0.1816%" height="15" fill="rgb(224,126,50)" fg:x="1558" fg:w="3"/><text x="94.5599%" y="175.50"></text></g><g><title>ena_xmit_common (2 samples, 0.12%)</title><rect x="94.3705%" y="149" width="0.1211%" height="15" fill="rgb(216,203,50)" fg:x="1559" fg:w="2"/><text x="94.6205%" y="159.50"></text></g><g><title>ena_com_prepare_tx (2 samples, 0.12%)</title><rect x="94.3705%" y="133" width="0.1211%" height="15" fill="rgb(231,3,27)" fg:x="1559" fg:w="2"/><text x="94.6205%" y="143.50"></text></g><g><title>ena_com_sq_update_tail (1 samples, 0.06%)</title><rect x="94.4310%" y="117" width="0.0605%" height="15" fill="rgb(222,204,14)" fg:x="1560" fg:w="1"/><text x="94.6810%" y="127.50"></text></g><g><title>ena_com_write_bounce_buffer_to_dev (1 samples, 0.06%)</title><rect x="94.4310%" y="101" width="0.0605%" height="15" fill="rgb(244,13,28)" fg:x="1560" fg:w="1"/><text x="94.6810%" y="111.50"></text></g><g><title>__dev_xmit_skb (5 samples, 0.30%)</title><rect x="94.2494%" y="213" width="0.3027%" height="15" fill="rgb(242,199,22)" fg:x="1557" fg:w="5"/><text x="94.4994%" y="223.50"></text></g><g><title>sch_direct_xmit (4 samples, 0.24%)</title><rect x="94.3099%" y="197" width="0.2421%" height="15" fill="rgb(222,128,44)" fg:x="1558" fg:w="4"/><text x="94.5599%" y="207.50"></text></g><g><title>validate_xmit_skb_list (1 samples, 0.06%)</title><rect x="94.4915%" y="181" width="0.0605%" height="15" fill="rgb(254,174,52)" fg:x="1561" fg:w="1"/><text x="94.7415%" y="191.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.06%)</title><rect x="94.4915%" y="165" width="0.0605%" height="15" fill="rgb(229,109,34)" fg:x="1561" fg:w="1"/><text x="94.7415%" y="175.50"></text></g><g><title>ip_queue_xmit (8 samples, 0.48%)</title><rect x="94.1889%" y="341" width="0.4843%" height="15" fill="rgb(241,58,19)" fg:x="1556" fg:w="8"/><text x="94.4389%" y="351.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.48%)</title><rect x="94.1889%" y="325" width="0.4843%" height="15" fill="rgb(224,11,5)" fg:x="1556" fg:w="8"/><text x="94.4389%" y="335.50"></text></g><g><title>ip_output (8 samples, 0.48%)</title><rect x="94.1889%" y="309" width="0.4843%" height="15" fill="rgb(213,11,33)" fg:x="1556" fg:w="8"/><text x="94.4389%" y="319.50"></text></g><g><title>ip_finish_output (8 samples, 0.48%)</title><rect x="94.1889%" y="293" width="0.4843%" height="15" fill="rgb(215,36,54)" fg:x="1556" fg:w="8"/><text x="94.4389%" y="303.50"></text></g><g><title>__ip_finish_output (8 samples, 0.48%)</title><rect x="94.1889%" y="277" width="0.4843%" height="15" fill="rgb(252,12,27)" fg:x="1556" fg:w="8"/><text x="94.4389%" y="287.50"></text></g><g><title>ip_finish_output2 (8 samples, 0.48%)</title><rect x="94.1889%" y="261" width="0.4843%" height="15" fill="rgb(219,227,11)" fg:x="1556" fg:w="8"/><text x="94.4389%" y="271.50"></text></g><g><title>neigh_hh_output (7 samples, 0.42%)</title><rect x="94.2494%" y="245" width="0.4237%" height="15" fill="rgb(241,98,1)" fg:x="1557" fg:w="7"/><text x="94.4994%" y="255.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.42%)</title><rect x="94.2494%" y="229" width="0.4237%" height="15" fill="rgb(232,116,37)" fg:x="1557" fg:w="7"/><text x="94.4994%" y="239.50"></text></g><g><title>qdisc_pkt_len_init (2 samples, 0.12%)</title><rect x="94.5521%" y="213" width="0.1211%" height="15" fill="rgb(235,200,31)" fg:x="1562" fg:w="2"/><text x="94.8021%" y="223.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.54%)</title><rect x="94.1889%" y="357" width="0.5448%" height="15" fill="rgb(238,106,36)" fg:x="1556" fg:w="9"/><text x="94.4389%" y="367.50"></text></g><g><title>tcp_update_skb_after_send (1 samples, 0.06%)</title><rect x="94.6731%" y="341" width="0.0605%" height="15" fill="rgb(219,84,35)" fg:x="1564" fg:w="1"/><text x="94.9231%" y="351.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="94.7337%" y="357" width="0.0605%" height="15" fill="rgb(211,127,13)" fg:x="1565" fg:w="1"/><text x="94.9837%" y="367.50"></text></g><g><title>cubictcp_cwnd_event (1 samples, 0.06%)</title><rect x="94.7942%" y="357" width="0.0605%" height="15" fill="rgb(216,51,12)" fg:x="1566" fg:w="1"/><text x="95.0442%" y="367.50"></text></g><g><title>memset (1 samples, 0.06%)</title><rect x="94.8547%" y="357" width="0.0605%" height="15" fill="rgb(251,9,1)" fg:x="1567" fg:w="1"/><text x="95.1047%" y="367.50"></text></g><g><title>tcp_push (13 samples, 0.79%)</title><rect x="94.1889%" y="405" width="0.7869%" height="15" fill="rgb(229,201,43)" fg:x="1556" fg:w="13"/><text x="94.4389%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (13 samples, 0.79%)</title><rect x="94.1889%" y="389" width="0.7869%" height="15" fill="rgb(226,88,38)" fg:x="1556" fg:w="13"/><text x="94.4389%" y="399.50"></text></g><g><title>tcp_write_xmit (13 samples, 0.79%)</title><rect x="94.1889%" y="373" width="0.7869%" height="15" fill="rgb(236,72,36)" fg:x="1556" fg:w="13"/><text x="94.4389%" y="383.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="94.9153%" y="357" width="0.0605%" height="15" fill="rgb(227,19,23)" fg:x="1568" fg:w="1"/><text x="95.1653%" y="367.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="94.9153%" y="341" width="0.0605%" height="15" fill="rgb(241,45,34)" fg:x="1568" fg:w="1"/><text x="95.1653%" y="351.50"></text></g><g><title>sk_reset_timer (1 samples, 0.06%)</title><rect x="94.9153%" y="325" width="0.0605%" height="15" fill="rgb(220,37,33)" fg:x="1568" fg:w="1"/><text x="95.1653%" y="335.50"></text></g><g><title>mod_timer (1 samples, 0.06%)</title><rect x="94.9153%" y="309" width="0.0605%" height="15" fill="rgb(234,190,54)" fg:x="1568" fg:w="1"/><text x="95.1653%" y="319.50"></text></g><g><title>__mod_timer (1 samples, 0.06%)</title><rect x="94.9153%" y="293" width="0.0605%" height="15" fill="rgb(232,140,47)" fg:x="1568" fg:w="1"/><text x="95.1653%" y="303.50"></text></g><g><title>tcp_send_mss (1 samples, 0.06%)</title><rect x="94.9758%" y="405" width="0.0605%" height="15" fill="rgb(220,146,16)" fg:x="1569" fg:w="1"/><text x="95.2258%" y="415.50"></text></g><g><title>ipv4_mtu (1 samples, 0.06%)</title><rect x="94.9758%" y="389" width="0.0605%" height="15" fill="rgb(232,85,13)" fg:x="1569" fg:w="1"/><text x="95.2258%" y="399.50"></text></g><g><title>tcp_skb_entail (1 samples, 0.06%)</title><rect x="95.0363%" y="405" width="0.0605%" height="15" fill="rgb(247,23,37)" fg:x="1570" fg:w="1"/><text x="95.2863%" y="415.50"></text></g><g><title>inet_sendmsg (21 samples, 1.27%)</title><rect x="93.8862%" y="453" width="1.2712%" height="15" fill="rgb(243,57,38)" fg:x="1551" fg:w="21"/><text x="94.1362%" y="463.50"></text></g><g><title>tcp_sendmsg (21 samples, 1.27%)</title><rect x="93.8862%" y="437" width="1.2712%" height="15" fill="rgb(214,140,26)" fg:x="1551" fg:w="21"/><text x="94.1362%" y="447.50"></text></g><g><title>tcp_sendmsg_locked (20 samples, 1.21%)</title><rect x="93.9467%" y="421" width="1.2107%" height="15" fill="rgb(250,191,34)" fg:x="1552" fg:w="20"/><text x="94.1967%" y="431.50"></text></g><g><title>tcp_stream_alloc_skb (1 samples, 0.06%)</title><rect x="95.0969%" y="405" width="0.0605%" height="15" fill="rgb(231,56,26)" fg:x="1571" fg:w="1"/><text x="95.3469%" y="415.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="95.0969%" y="389" width="0.0605%" height="15" fill="rgb(254,91,48)" fg:x="1571" fg:w="1"/><text x="95.3469%" y="399.50"></text></g><g><title>mem_cgroup_charge_skmem (1 samples, 0.06%)</title><rect x="95.0969%" y="373" width="0.0605%" height="15" fill="rgb(248,15,41)" fg:x="1571" fg:w="1"/><text x="95.3469%" y="383.50"></text></g><g><title>arch_local_irq_restore (1 samples, 0.06%)</title><rect x="95.0969%" y="357" width="0.0605%" height="15" fill="rgb(250,186,41)" fg:x="1571" fg:w="1"/><text x="95.3469%" y="367.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="95.1574%" y="453" width="0.0605%" height="15" fill="rgb(207,90,34)" fg:x="1572" fg:w="1"/><text x="95.4074%" y="463.50"></text></g><g><title>selinux_socket_sendmsg (1 samples, 0.06%)</title><rect x="95.1574%" y="437" width="0.0605%" height="15" fill="rgb(225,206,2)" fg:x="1572" fg:w="1"/><text x="95.4074%" y="447.50"></text></g><g><title>sock_sendmsg (23 samples, 1.39%)</title><rect x="93.8862%" y="469" width="1.3923%" height="15" fill="rgb(253,44,23)" fg:x="1551" fg:w="23"/><text x="94.1362%" y="479.50"></text></g><g><title>selinux_socket_sendmsg (1 samples, 0.06%)</title><rect x="95.2179%" y="453" width="0.0605%" height="15" fill="rgb(225,206,2)" fg:x="1573" fg:w="1"/><text x="95.4679%" y="463.50"></text></g><g><title>BIO_write (25 samples, 1.51%)</title><rect x="93.8257%" y="725" width="1.5133%" height="15" fill="rgb(244,9,40)" fg:x="1550" fg:w="25"/><text x="94.0757%" y="735.50"></text></g><g><title>[libcrypto.so.3.0.8] (25 samples, 1.51%)</title><rect x="93.8257%" y="709" width="1.5133%" height="15" fill="rgb(222,124,3)" fg:x="1550" fg:w="25"/><text x="94.0757%" y="719.50"></text></g><g><title>[libcrypto.so.3.0.8] (25 samples, 1.51%)</title><rect x="93.8257%" y="693" width="1.5133%" height="15" fill="rgb(222,124,3)" fg:x="1550" fg:w="25"/><text x="94.0757%" y="703.50"></text></g><g><title>openssl::ssl::bio::bwrite (25 samples, 1.51%)</title><rect x="93.8257%" y="677" width="1.5133%" height="15" fill="rgb(207,115,13)" fg:x="1550" fg:w="25"/><text x="94.0757%" y="687.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (24 samples, 1.45%)</title><rect x="93.8862%" y="661" width="1.4528%" height="15" fill="rgb(229,85,47)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (24 samples, 1.45%)</title><rect x="93.8862%" y="645" width="1.4528%" height="15" fill="rgb(209,219,12)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="655.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (24 samples, 1.45%)</title><rect x="93.8862%" y="629" width="1.4528%" height="15" fill="rgb(252,79,41)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (24 samples, 1.45%)</title><rect x="93.8862%" y="613" width="1.4528%" height="15" fill="rgb(244,113,20)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="623.50"></text></g><g><title>__libc_send (24 samples, 1.45%)</title><rect x="93.8862%" y="597" width="1.4528%" height="15" fill="rgb(249,28,5)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="607.50"></text></g><g><title>el0t_64_sync_handler (24 samples, 1.45%)</title><rect x="93.8862%" y="581" width="1.4528%" height="15" fill="rgb(232,35,33)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="591.50"></text></g><g><title>el0_svc (24 samples, 1.45%)</title><rect x="93.8862%" y="565" width="1.4528%" height="15" fill="rgb(225,46,33)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="575.50"></text></g><g><title>do_el0_svc (24 samples, 1.45%)</title><rect x="93.8862%" y="549" width="1.4528%" height="15" fill="rgb(221,53,8)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="559.50"></text></g><g><title>el0_svc_common.constprop.0 (24 samples, 1.45%)</title><rect x="93.8862%" y="533" width="1.4528%" height="15" fill="rgb(219,7,42)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="543.50"></text></g><g><title>invoke_syscall (24 samples, 1.45%)</title><rect x="93.8862%" y="517" width="1.4528%" height="15" fill="rgb(234,209,2)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="527.50"></text></g><g><title>__arm64_sys_sendto (24 samples, 1.45%)</title><rect x="93.8862%" y="501" width="1.4528%" height="15" fill="rgb(210,136,51)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="511.50"></text></g><g><title>__sys_sendto (24 samples, 1.45%)</title><rect x="93.8862%" y="485" width="1.4528%" height="15" fill="rgb(241,223,3)" fg:x="1551" fg:w="24"/><text x="94.1362%" y="495.50"></text></g><g><title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="95.2785%" y="469" width="0.0605%" height="15" fill="rgb(234,43,45)" fg:x="1574" fg:w="1"/><text x="95.5285%" y="479.50"></text></g><g><title>__fdget (1 samples, 0.06%)</title><rect x="95.2785%" y="453" width="0.0605%" height="15" fill="rgb(239,45,19)" fg:x="1574" fg:w="1"/><text x="95.5285%" y="463.50"></text></g><g><title>__fget_light (1 samples, 0.06%)</title><rect x="95.2785%" y="437" width="0.0605%" height="15" fill="rgb(243,103,32)" fg:x="1574" fg:w="1"/><text x="95.5285%" y="447.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.06%)</title><rect x="95.3390%" y="725" width="0.0605%" height="15" fill="rgb(224,93,23)" fg:x="1575" fg:w="1"/><text x="95.5890%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="95.3390%" y="709" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="1575" fg:w="1"/><text x="95.5890%" y="719.50"></text></g><g><title>[libssl.so.3.0.8] (29 samples, 1.76%)</title><rect x="93.7046%" y="741" width="1.7554%" height="15" fill="rgb(243,173,28)" fg:x="1548" fg:w="29"/><text x="93.9546%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="95.3995%" y="725" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="1576" fg:w="1"/><text x="95.6495%" y="735.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (43 samples, 2.60%)</title><rect x="92.9177%" y="869" width="2.6029%" height="15" fill="rgb(209,172,29)" fg:x="1535" fg:w="43"/><text x="93.1677%" y="879.50">hy..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (42 samples, 2.54%)</title><rect x="92.9782%" y="853" width="2.5424%" height="15" fill="rgb(252,73,8)" fg:x="1536" fg:w="42"/><text x="93.2282%" y="863.50">hy..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (41 samples, 2.48%)</title><rect x="93.0387%" y="837" width="2.4818%" height="15" fill="rgb(222,43,30)" fg:x="1537" fg:w="41"/><text x="93.2887%" y="847.50">hy..</text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (37 samples, 2.24%)</title><rect x="93.2809%" y="821" width="2.2397%" height="15" fill="rgb(227,51,33)" fg:x="1541" fg:w="37"/><text x="93.5309%" y="831.50">&lt;..</text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Write&gt;::write (36 samples, 2.18%)</title><rect x="93.3414%" y="805" width="2.1792%" height="15" fill="rgb(219,0,48)" fg:x="1542" fg:w="36"/><text x="93.5914%" y="815.50">&lt;..</text></g><g><title>SSL_write (36 samples, 2.18%)</title><rect x="93.3414%" y="789" width="2.1792%" height="15" fill="rgb(216,174,29)" fg:x="1542" fg:w="36"/><text x="93.5914%" y="799.50">S..</text></g><g><title>[libssl.so.3.0.8] (36 samples, 2.18%)</title><rect x="93.3414%" y="773" width="2.1792%" height="15" fill="rgb(243,173,28)" fg:x="1542" fg:w="36"/><text x="93.5914%" y="783.50">[..</text></g><g><title>[libssl.so.3.0.8] (34 samples, 2.06%)</title><rect x="93.4625%" y="757" width="2.0581%" height="15" fill="rgb(243,173,28)" fg:x="1544" fg:w="34"/><text x="93.7125%" y="767.50">[..</text></g><g><title>__memset_generic (1 samples, 0.06%)</title><rect x="95.4600%" y="741" width="0.0605%" height="15" fill="rgb(239,146,25)" fg:x="1577" fg:w="1"/><text x="95.7100%" y="751.50"></text></g><g><title>tokio::sync::oneshot::State::load (2 samples, 0.12%)</title><rect x="95.5811%" y="853" width="0.1211%" height="15" fill="rgb(236,27,2)" fg:x="1579" fg:w="2"/><text x="95.8311%" y="863.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (283 samples, 17.13%)</title><rect x="78.6320%" y="917" width="17.1308%" height="15" fill="rgb(213,225,48)" fg:x="1299" fg:w="283"/><text x="78.8820%" y="927.50">&lt;futures_util::future::futu..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (278 samples, 16.83%)</title><rect x="78.9346%" y="901" width="16.8281%" height="15" fill="rgb(223,54,4)" fg:x="1304" fg:w="278"/><text x="79.1846%" y="911.50">hyper::proto::h1::dispatch..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (277 samples, 16.77%)</title><rect x="78.9952%" y="885" width="16.7676%" height="15" fill="rgb(240,145,22)" fg:x="1305" fg:w="277"/><text x="79.2452%" y="895.50">hyper::proto::h1::dispatch..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::poll_closed (4 samples, 0.24%)</title><rect x="95.5206%" y="869" width="0.2421%" height="15" fill="rgb(226,38,1)" fg:x="1578" fg:w="4"/><text x="95.7706%" y="879.50"></text></g><g><title>tokio::sync::oneshot::Task::will_wake (1 samples, 0.06%)</title><rect x="95.7022%" y="853" width="0.0605%" height="15" fill="rgb(222,118,0)" fg:x="1581" fg:w="1"/><text x="95.9522%" y="863.50"></text></g><g><title>&lt;hyper::client::client::PoolClient&lt;B&gt; as hyper::client::pool::Poolable&gt;::is_open (1 samples, 0.06%)</title><rect x="95.7627%" y="885" width="0.0605%" height="15" fill="rgb(251,192,42)" fg:x="1582" fg:w="1"/><text x="96.0127%" y="895.50"></text></g><g><title>hyper::client::connect::PoisonPill::poisoned (1 samples, 0.06%)</title><rect x="95.7627%" y="869" width="0.0605%" height="15" fill="rgb(206,186,47)" fg:x="1582" fg:w="1"/><text x="96.0127%" y="879.50"></text></g><g><title>bytes::bytes::shared_clone (1 samples, 0.06%)</title><rect x="95.8232%" y="885" width="0.0605%" height="15" fill="rgb(213,143,48)" fg:x="1583" fg:w="1"/><text x="96.0732%" y="895.50"></text></g><g><title>__aarch64_ldadd8_relax (1 samples, 0.06%)</title><rect x="95.8232%" y="869" width="0.0605%" height="15" fill="rgb(220,1,46)" fg:x="1583" fg:w="1"/><text x="96.0732%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (290 samples, 17.55%)</title><rect x="78.4504%" y="933" width="17.5545%" height="15" fill="rgb(213,225,48)" fg:x="1296" fg:w="290"/><text x="78.7004%" y="943.50">&lt;futures_util::future::futu..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (4 samples, 0.24%)</title><rect x="95.7627%" y="917" width="0.2421%" height="15" fill="rgb(242,43,17)" fg:x="1582" fg:w="4"/><text x="96.0127%" y="927.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.24%)</title><rect x="95.7627%" y="901" width="0.2421%" height="15" fill="rgb(248,36,42)" fg:x="1582" fg:w="4"/><text x="96.0127%" y="911.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (2 samples, 0.12%)</title><rect x="95.8838%" y="885" width="0.1211%" height="15" fill="rgb(221,4,34)" fg:x="1584" fg:w="2"/><text x="96.1338%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.06%)</title><rect x="95.9443%" y="869" width="0.0605%" height="15" fill="rgb(222,198,6)" fg:x="1585" fg:w="1"/><text x="96.1943%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="95.9443%" y="853" width="0.0605%" height="15" fill="rgb(236,225,40)" fg:x="1585" fg:w="1"/><text x="96.1943%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (295 samples, 17.86%)</title><rect x="78.2688%" y="965" width="17.8571%" height="15" fill="rgb(227,84,42)" fg:x="1293" fg:w="295"/><text x="78.5188%" y="975.50">tokio::runtime::task::core::..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (293 samples, 17.74%)</title><rect x="78.3898%" y="949" width="17.7361%" height="15" fill="rgb(231,124,40)" fg:x="1295" fg:w="293"/><text x="78.6398%" y="959.50">tokio::loom::std::unsafe_cel..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.12%)</title><rect x="96.0048%" y="933" width="0.1211%" height="15" fill="rgb(209,16,8)" fg:x="1586" fg:w="2"/><text x="96.2548%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.06%)</title><rect x="96.1259%" y="965" width="0.0605%" height="15" fill="rgb(206,157,30)" fg:x="1588" fg:w="1"/><text x="96.3759%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (749 samples, 45.34%)</title><rect x="50.9080%" y="1189" width="45.3390%" height="15" fill="rgb(228,202,16)" fg:x="841" fg:w="749"/><text x="51.1580%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (749 samples, 45.34%)</title><rect x="50.9080%" y="1173" width="45.3390%" height="15" fill="rgb(228,202,16)" fg:x="841" fg:w="749"/><text x="51.1580%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (749 samples, 45.34%)</title><rect x="50.9080%" y="1157" width="45.3390%" height="15" fill="rgb(218,104,40)" fg:x="841" fg:w="749"/><text x="51.1580%" y="1167.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (729 samples, 44.13%)</title><rect x="52.1186%" y="1141" width="44.1283%" height="15" fill="rgb(210,88,34)" fg:x="861" fg:w="729"/><text x="52.3686%" y="1151.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (729 samples, 44.13%)</title><rect x="52.1186%" y="1125" width="44.1283%" height="15" fill="rgb(249,26,43)" fg:x="861" fg:w="729"/><text x="52.3686%" y="1135.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (729 samples, 44.13%)</title><rect x="52.1186%" y="1109" width="44.1283%" height="15" fill="rgb(244,44,31)" fg:x="861" fg:w="729"/><text x="52.3686%" y="1119.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (729 samples, 44.13%)</title><rect x="52.1186%" y="1093" width="44.1283%" height="15" fill="rgb(227,84,42)" fg:x="861" fg:w="729"/><text x="52.3686%" y="1103.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (729 samples, 44.13%)</title><rect x="52.1186%" y="1077" width="44.1283%" height="15" fill="rgb(231,124,40)" fg:x="861" fg:w="729"/><text x="52.3686%" y="1087.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (639 samples, 38.68%)</title><rect x="57.5666%" y="1061" width="38.6804%" height="15" fill="rgb(234,183,34)" fg:x="951" fg:w="639"/><text x="57.8166%" y="1071.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (639 samples, 38.68%)</title><rect x="57.5666%" y="1045" width="38.6804%" height="15" fill="rgb(250,218,41)" fg:x="951" fg:w="639"/><text x="57.8166%" y="1055.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (638 samples, 38.62%)</title><rect x="57.6271%" y="1029" width="38.6199%" height="15" fill="rgb(252,134,48)" fg:x="952" fg:w="638"/><text x="57.8771%" y="1039.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (638 samples, 38.62%)</title><rect x="57.6271%" y="1013" width="38.6199%" height="15" fill="rgb(206,202,46)" fg:x="952" fg:w="638"/><text x="57.8771%" y="1023.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (332 samples, 20.10%)</title><rect x="76.1501%" y="997" width="20.0969%" height="15" fill="rgb(246,72,13)" fg:x="1258" fg:w="332"/><text x="76.4001%" y="1007.50">tokio::runtime::scheduler::multi..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (298 samples, 18.04%)</title><rect x="78.2082%" y="981" width="18.0387%" height="15" fill="rgb(244,44,31)" fg:x="1292" fg:w="298"/><text x="78.4582%" y="991.50">tokio::runtime::task::harnes..</text></g><g><title>tokio::runtime::task::waker::raw_waker (1 samples, 0.06%)</title><rect x="96.1864%" y="965" width="0.0605%" height="15" fill="rgb(211,145,6)" fg:x="1589" fg:w="1"/><text x="96.4364%" y="975.50"></text></g><g><title>thread_start (750 samples, 45.40%)</title><rect x="50.9080%" y="1237" width="45.3995%" height="15" fill="rgb(213,48,3)" fg:x="841" fg:w="750"/><text x="51.1580%" y="1247.50">thread_start</text></g><g><title>start_thread (750 samples, 45.40%)</title><rect x="50.9080%" y="1221" width="45.3995%" height="15" fill="rgb(209,148,13)" fg:x="841" fg:w="750"/><text x="51.1580%" y="1231.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (750 samples, 45.40%)</title><rect x="50.9080%" y="1205" width="45.3995%" height="15" fill="rgb(215,36,0)" fg:x="841" fg:w="750"/><text x="51.1580%" y="1215.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.06%)</title><rect x="96.2470%" y="1189" width="0.0605%" height="15" fill="rgb(218,173,48)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.06%)</title><rect x="96.2470%" y="1173" width="0.0605%" height="15" fill="rgb(237,166,40)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.06%)</title><rect x="96.2470%" y="1157" width="0.0605%" height="15" fill="rgb(223,116,29)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1167.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.06%)</title><rect x="96.2470%" y="1141" width="0.0605%" height="15" fill="rgb(233,124,20)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1151.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.06%)</title><rect x="96.2470%" y="1125" width="0.0605%" height="15" fill="rgb(216,161,14)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1135.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="96.2470%" y="1109" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1119.50"></text></g><g><title>el0_svc (1 samples, 0.06%)</title><rect x="96.2470%" y="1093" width="0.0605%" height="15" fill="rgb(225,46,33)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1103.50"></text></g><g><title>do_el0_svc (1 samples, 0.06%)</title><rect x="96.2470%" y="1077" width="0.0605%" height="15" fill="rgb(221,53,8)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1087.50"></text></g><g><title>el0_svc_common.constprop.0 (1 samples, 0.06%)</title><rect x="96.2470%" y="1061" width="0.0605%" height="15" fill="rgb(219,7,42)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1071.50"></text></g><g><title>invoke_syscall (1 samples, 0.06%)</title><rect x="96.2470%" y="1045" width="0.0605%" height="15" fill="rgb(234,209,2)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1055.50"></text></g><g><title>__arm64_sys_mmap (1 samples, 0.06%)</title><rect x="96.2470%" y="1029" width="0.0605%" height="15" fill="rgb(232,29,1)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1039.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.06%)</title><rect x="96.2470%" y="1013" width="0.0605%" height="15" fill="rgb(248,1,16)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1023.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.06%)</title><rect x="96.2470%" y="997" width="0.0605%" height="15" fill="rgb(226,196,1)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="1007.50"></text></g><g><title>down_write_killable (1 samples, 0.06%)</title><rect x="96.2470%" y="981" width="0.0605%" height="15" fill="rgb(229,142,1)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="991.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.06%)</title><rect x="96.2470%" y="965" width="0.0605%" height="15" fill="rgb(250,77,51)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="975.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.06%)</title><rect x="96.2470%" y="949" width="0.0605%" height="15" fill="rgb(240,46,24)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="959.50"></text></g><g><title>arch_counter_get_cntvct (1 samples, 0.06%)</title><rect x="96.2470%" y="933" width="0.0605%" height="15" fill="rgb(234,51,43)" fg:x="1590" fg:w="1"/><text x="96.4970%" y="943.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="96.3075%" y="1221" width="0.0605%" height="15" fill="rgb(228,76,43)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1231.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1 samples, 0.06%)</title><rect x="96.3075%" y="1205" width="0.0605%" height="15" fill="rgb(250,218,41)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1215.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.06%)</title><rect x="96.3075%" y="1189" width="0.0605%" height="15" fill="rgb(238,208,28)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1199.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="96.3075%" y="1173" width="0.0605%" height="15" fill="rgb(208,157,13)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1183.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.06%)</title><rect x="96.3075%" y="1157" width="0.0605%" height="15" fill="rgb(212,174,39)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1167.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (1 samples, 0.06%)</title><rect x="96.3075%" y="1141" width="0.0605%" height="15" fill="rgb(243,177,20)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1151.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (1 samples, 0.06%)</title><rect x="96.3075%" y="1125" width="0.0605%" height="15" fill="rgb(244,101,36)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1135.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (1 samples, 0.06%)</title><rect x="96.3075%" y="1109" width="0.0605%" height="15" fill="rgb(223,3,11)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1119.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (1 samples, 0.06%)</title><rect x="96.3075%" y="1093" width="0.0605%" height="15" fill="rgb(248,177,53)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1103.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (1 samples, 0.06%)</title><rect x="96.3075%" y="1077" width="0.0605%" height="15" fill="rgb(206,114,36)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1087.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="96.3075%" y="1061" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1071.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="96.3075%" y="1045" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1055.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="96.3075%" y="1029" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1039.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (1 samples, 0.06%)</title><rect x="96.3075%" y="1013" width="0.0605%" height="15" fill="rgb(228,63,22)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1023.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (1 samples, 0.06%)</title><rect x="96.3075%" y="997" width="0.0605%" height="15" fill="rgb(247,141,48)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="1007.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="96.3075%" y="981" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="991.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="96.3075%" y="965" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="975.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="96.3075%" y="949" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="959.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="96.3075%" y="933" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="943.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="96.3075%" y="917" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="1591" fg:w="1"/><text x="96.5575%" y="927.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (1 samples, 0.06%)</title><rect x="96.3680%" y="885" width="0.0605%" height="15" fill="rgb(219,214,47)" fg:x="1592" fg:w="1"/><text x="96.6180%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="96.3680%" y="869" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1592" fg:w="1"/><text x="96.6180%" y="879.50"></text></g><g><title>OSSL_PARAM_locate (1 samples, 0.06%)</title><rect x="96.3680%" y="853" width="0.0605%" height="15" fill="rgb(250,105,22)" fg:x="1592" fg:w="1"/><text x="96.6180%" y="863.50"></text></g><g><title>__GI_strcmp (1 samples, 0.06%)</title><rect x="96.3680%" y="837" width="0.0605%" height="15" fill="rgb(237,17,19)" fg:x="1592" fg:w="1"/><text x="96.6180%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.18%)</title><rect x="96.3075%" y="1237" width="0.1816%" height="15" fill="rgb(231,124,40)" fg:x="1591" fg:w="3"/><text x="96.5575%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (2 samples, 0.12%)</title><rect x="96.3680%" y="1221" width="0.1211%" height="15" fill="rgb(234,183,34)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1231.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2 samples, 0.12%)</title><rect x="96.3680%" y="1205" width="0.1211%" height="15" fill="rgb(250,218,41)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1215.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (2 samples, 0.12%)</title><rect x="96.3680%" y="1189" width="0.1211%" height="15" fill="rgb(252,134,48)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.12%)</title><rect x="96.3680%" y="1173" width="0.1211%" height="15" fill="rgb(206,202,46)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.12%)</title><rect x="96.3680%" y="1157" width="0.1211%" height="15" fill="rgb(246,72,13)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.12%)</title><rect x="96.3680%" y="1141" width="0.1211%" height="15" fill="rgb(244,44,31)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.12%)</title><rect x="96.3680%" y="1125" width="0.1211%" height="15" fill="rgb(227,84,42)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.12%)</title><rect x="96.3680%" y="1109" width="0.1211%" height="15" fill="rgb(231,124,40)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="96.3680%" y="1093" width="0.1211%" height="15" fill="rgb(213,225,48)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="96.3680%" y="1077" width="0.1211%" height="15" fill="rgb(213,225,48)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1087.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (2 samples, 0.12%)</title><rect x="96.3680%" y="1061" width="0.1211%" height="15" fill="rgb(223,54,4)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1071.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (2 samples, 0.12%)</title><rect x="96.3680%" y="1045" width="0.1211%" height="15" fill="rgb(240,145,22)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1055.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (2 samples, 0.12%)</title><rect x="96.3680%" y="1029" width="0.1211%" height="15" fill="rgb(209,172,29)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1039.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (2 samples, 0.12%)</title><rect x="96.3680%" y="1013" width="0.1211%" height="15" fill="rgb(252,73,8)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1023.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (2 samples, 0.12%)</title><rect x="96.3680%" y="997" width="0.1211%" height="15" fill="rgb(222,43,30)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="1007.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (2 samples, 0.12%)</title><rect x="96.3680%" y="981" width="0.1211%" height="15" fill="rgb(227,51,33)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="991.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Write&gt;::write (2 samples, 0.12%)</title><rect x="96.3680%" y="965" width="0.1211%" height="15" fill="rgb(219,0,48)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="975.50"></text></g><g><title>SSL_write (2 samples, 0.12%)</title><rect x="96.3680%" y="949" width="0.1211%" height="15" fill="rgb(216,174,29)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="959.50"></text></g><g><title>[libssl.so.3.0.8] (2 samples, 0.12%)</title><rect x="96.3680%" y="933" width="0.1211%" height="15" fill="rgb(243,173,28)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="943.50"></text></g><g><title>[libssl.so.3.0.8] (2 samples, 0.12%)</title><rect x="96.3680%" y="917" width="0.1211%" height="15" fill="rgb(243,173,28)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="927.50"></text></g><g><title>[libssl.so.3.0.8] (2 samples, 0.12%)</title><rect x="96.3680%" y="901" width="0.1211%" height="15" fill="rgb(243,173,28)" fg:x="1592" fg:w="2"/><text x="96.6180%" y="911.50"></text></g><g><title>EVP_EncryptUpdate (1 samples, 0.06%)</title><rect x="96.4286%" y="885" width="0.0605%" height="15" fill="rgb(242,93,6)" fg:x="1593" fg:w="1"/><text x="96.6786%" y="895.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="96.4286%" y="869" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1593" fg:w="1"/><text x="96.6786%" y="879.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="96.4286%" y="853" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1593" fg:w="1"/><text x="96.6786%" y="863.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="96.4286%" y="837" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1593" fg:w="1"/><text x="96.6786%" y="847.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.06%)</title><rect x="96.4286%" y="821" width="0.0605%" height="15" fill="rgb(222,124,3)" fg:x="1593" fg:w="1"/><text x="96.6786%" y="831.50"></text></g><g><title>CRYPTO_gcm128_tag (1 samples, 0.06%)</title><rect x="96.4286%" y="805" width="0.0605%" height="15" fill="rgb(235,162,7)" fg:x="1593" fg:w="1"/><text x="96.6786%" y="815.50"></text></g><g><title>CRYPTO_gcm128_finish (1 samples, 0.06%)</title><rect x="96.4286%" y="789" width="0.0605%" height="15" fill="rgb(231,165,39)" fg:x="1593" fg:w="1"/><text x="96.6786%" y="799.50"></text></g><g><title>revm::inspector::_::&lt;impl revm::inspector::Inspector&lt;DB&gt; for &amp;mut T&gt;::step (1 samples, 0.06%)</title><rect x="96.4891%" y="933" width="0.0605%" height="15" fill="rgb(238,141,0)" fg:x="1594" fg:w="1"/><text x="96.7391%" y="943.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="96.4891%" y="1173" width="0.1211%" height="15" fill="rgb(228,76,43)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1183.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2 samples, 0.12%)</title><rect x="96.4891%" y="1157" width="0.1211%" height="15" fill="rgb(250,218,41)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1167.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.12%)</title><rect x="96.4891%" y="1141" width="0.1211%" height="15" fill="rgb(238,208,28)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1151.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="96.4891%" y="1125" width="0.1211%" height="15" fill="rgb(208,157,13)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1135.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="96.4891%" y="1109" width="0.1211%" height="15" fill="rgb(212,174,39)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1119.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (2 samples, 0.12%)</title><rect x="96.4891%" y="1093" width="0.1211%" height="15" fill="rgb(243,177,20)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1103.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (2 samples, 0.12%)</title><rect x="96.4891%" y="1077" width="0.1211%" height="15" fill="rgb(244,101,36)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1087.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (2 samples, 0.12%)</title><rect x="96.4891%" y="1061" width="0.1211%" height="15" fill="rgb(223,3,11)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1071.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (2 samples, 0.12%)</title><rect x="96.4891%" y="1045" width="0.1211%" height="15" fill="rgb(248,177,53)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1055.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (2 samples, 0.12%)</title><rect x="96.4891%" y="1029" width="0.1211%" height="15" fill="rgb(206,114,36)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1039.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (2 samples, 0.12%)</title><rect x="96.4891%" y="1013" width="0.1211%" height="15" fill="rgb(232,116,6)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1023.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (2 samples, 0.12%)</title><rect x="96.4891%" y="997" width="0.1211%" height="15" fill="rgb(236,181,49)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="1007.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (2 samples, 0.12%)</title><rect x="96.4891%" y="981" width="0.1211%" height="15" fill="rgb(222,82,5)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="991.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (2 samples, 0.12%)</title><rect x="96.4891%" y="965" width="0.1211%" height="15" fill="rgb(232,116,6)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="975.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (2 samples, 0.12%)</title><rect x="96.4891%" y="949" width="0.1211%" height="15" fill="rgb(236,181,49)" fg:x="1594" fg:w="2"/><text x="96.7391%" y="959.50"></text></g><g><title>revm_interpreter::instructions::arithmetic::mulmod (1 samples, 0.06%)</title><rect x="96.5496%" y="933" width="0.0605%" height="15" fill="rgb(227,188,52)" fg:x="1595" fg:w="1"/><text x="96.7996%" y="943.50"></text></g><g><title>ruint::modular::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::mul_mod (1 samples, 0.06%)</title><rect x="96.5496%" y="917" width="0.0605%" height="15" fill="rgb(250,122,12)" fg:x="1595" fg:w="1"/><text x="96.7996%" y="927.50"></text></g><g><title>__calloc (1 samples, 0.06%)</title><rect x="96.5496%" y="901" width="0.0605%" height="15" fill="rgb(238,177,25)" fg:x="1595" fg:w="1"/><text x="96.7996%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="96.5496%" y="885" width="0.0605%" height="15" fill="rgb(222,219,51)" fg:x="1595" fg:w="1"/><text x="96.7996%" y="895.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (7 samples, 0.42%)</title><rect x="96.4891%" y="1237" width="0.4237%" height="15" fill="rgb(249,26,43)" fg:x="1594" fg:w="7"/><text x="96.7391%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7 samples, 0.42%)</title><rect x="96.4891%" y="1221" width="0.4237%" height="15" fill="rgb(244,44,31)" fg:x="1594" fg:w="7"/><text x="96.7391%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (7 samples, 0.42%)</title><rect x="96.4891%" y="1205" width="0.4237%" height="15" fill="rgb(227,84,42)" fg:x="1594" fg:w="7"/><text x="96.7391%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7 samples, 0.42%)</title><rect x="96.4891%" y="1189" width="0.4237%" height="15" fill="rgb(231,124,40)" fg:x="1594" fg:w="7"/><text x="96.7391%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (5 samples, 0.30%)</title><rect x="96.6102%" y="1173" width="0.3027%" height="15" fill="rgb(234,183,34)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1183.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5 samples, 0.30%)</title><rect x="96.6102%" y="1157" width="0.3027%" height="15" fill="rgb(250,218,41)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1167.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (5 samples, 0.30%)</title><rect x="96.6102%" y="1141" width="0.3027%" height="15" fill="rgb(252,134,48)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5 samples, 0.30%)</title><rect x="96.6102%" y="1125" width="0.3027%" height="15" fill="rgb(206,202,46)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (5 samples, 0.30%)</title><rect x="96.6102%" y="1109" width="0.3027%" height="15" fill="rgb(246,72,13)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.30%)</title><rect x="96.6102%" y="1093" width="0.3027%" height="15" fill="rgb(244,44,31)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.30%)</title><rect x="96.6102%" y="1077" width="0.3027%" height="15" fill="rgb(227,84,42)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1087.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.30%)</title><rect x="96.6102%" y="1061" width="0.3027%" height="15" fill="rgb(231,124,40)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1071.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.30%)</title><rect x="96.6102%" y="1045" width="0.3027%" height="15" fill="rgb(213,225,48)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1055.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.30%)</title><rect x="96.6102%" y="1029" width="0.3027%" height="15" fill="rgb(213,225,48)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1039.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (5 samples, 0.30%)</title><rect x="96.6102%" y="1013" width="0.3027%" height="15" fill="rgb(223,54,4)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1023.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (5 samples, 0.30%)</title><rect x="96.6102%" y="997" width="0.3027%" height="15" fill="rgb(240,145,22)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="1007.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (5 samples, 0.30%)</title><rect x="96.6102%" y="981" width="0.3027%" height="15" fill="rgb(209,172,29)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="991.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (5 samples, 0.30%)</title><rect x="96.6102%" y="965" width="0.3027%" height="15" fill="rgb(252,73,8)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="975.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (5 samples, 0.30%)</title><rect x="96.6102%" y="949" width="0.3027%" height="15" fill="rgb(222,43,30)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="959.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5 samples, 0.30%)</title><rect x="96.6102%" y="933" width="0.3027%" height="15" fill="rgb(227,51,33)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="943.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Write&gt;::write (5 samples, 0.30%)</title><rect x="96.6102%" y="917" width="0.3027%" height="15" fill="rgb(219,0,48)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="927.50"></text></g><g><title>SSL_write (5 samples, 0.30%)</title><rect x="96.6102%" y="901" width="0.3027%" height="15" fill="rgb(216,174,29)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="911.50"></text></g><g><title>[libssl.so.3.0.8] (5 samples, 0.30%)</title><rect x="96.6102%" y="885" width="0.3027%" height="15" fill="rgb(243,173,28)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="895.50"></text></g><g><title>[libssl.so.3.0.8] (5 samples, 0.30%)</title><rect x="96.6102%" y="869" width="0.3027%" height="15" fill="rgb(243,173,28)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="879.50"></text></g><g><title>[libssl.so.3.0.8] (5 samples, 0.30%)</title><rect x="96.6102%" y="853" width="0.3027%" height="15" fill="rgb(243,173,28)" fg:x="1596" fg:w="5"/><text x="96.8602%" y="863.50"></text></g><g><title>EVP_CipherUpdate (2 samples, 0.12%)</title><rect x="96.7918%" y="837" width="0.1211%" height="15" fill="rgb(254,0,47)" fg:x="1599" fg:w="2"/><text x="97.0418%" y="847.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="96.9128%" y="1093" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="1103.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="96.9128%" y="1077" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="1087.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="96.9128%" y="1061" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="1071.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="96.9128%" y="1045" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="1055.50"></text></g><g><title>revm_precompile::secp256k1::ec_recover_run (1 samples, 0.06%)</title><rect x="96.9128%" y="1029" width="0.0605%" height="15" fill="rgb(229,73,9)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="1039.50"></text></g><g><title>revm_precompile::secp256k1::secp256k1::ecrecover (1 samples, 0.06%)</title><rect x="96.9128%" y="1013" width="0.0605%" height="15" fill="rgb(233,99,19)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="1023.50"></text></g><g><title>secp256k1::context::alloc_only::&lt;impl secp256k1::Secp256k1&lt;secp256k1::context::alloc_only::All&gt;&gt;::new (1 samples, 0.06%)</title><rect x="96.9128%" y="997" width="0.0605%" height="15" fill="rgb(214,74,23)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="1007.50"></text></g><g><title>rustsecp256k1_v0_8_1_context_randomize (1 samples, 0.06%)</title><rect x="96.9128%" y="981" width="0.0605%" height="15" fill="rgb(228,93,17)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="991.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_gen_blind (1 samples, 0.06%)</title><rect x="96.9128%" y="965" width="0.0605%" height="15" fill="rgb(252,146,48)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="975.50"></text></g><g><title>rustsecp256k1_v0_8_1_ecmult_gen (1 samples, 0.06%)</title><rect x="96.9128%" y="949" width="0.0605%" height="15" fill="rgb(227,226,9)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="959.50"></text></g><g><title>rustsecp256k1_v0_8_1_gej_add_ge (1 samples, 0.06%)</title><rect x="96.9128%" y="933" width="0.0605%" height="15" fill="rgb(218,17,44)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="943.50"></text></g><g><title>rustsecp256k1_v0_8_1_fe_mul_inner (1 samples, 0.06%)</title><rect x="96.9128%" y="917" width="0.0605%" height="15" fill="rgb(232,212,25)" fg:x="1601" fg:w="1"/><text x="97.1628%" y="927.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="96.9734%" y="1077" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="1087.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="96.9734%" y="1061" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="1071.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="96.9734%" y="1045" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="1055.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::tx::Tx&lt;K,E&gt; as reth_db::abstraction::transaction::DbTx&gt;::get (1 samples, 0.06%)</title><rect x="96.9734%" y="1029" width="0.0605%" height="15" fill="rgb(253,2,53)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="1039.50"></text></g><g><title>reth_libmdbx::transaction::Transaction&lt;K,E&gt;::get (1 samples, 0.06%)</title><rect x="96.9734%" y="1013" width="0.0605%" height="15" fill="rgb(250,84,16)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="1023.50"></text></g><g><title>mdbx_get (1 samples, 0.06%)</title><rect x="96.9734%" y="997" width="0.0605%" height="15" fill="rgb(207,205,41)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="1007.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="96.9734%" y="981" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="991.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="96.9734%" y="965" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="975.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="96.9734%" y="949" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="959.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="96.9734%" y="933" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="943.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="96.9734%" y="917" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="927.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="96.9734%" y="901" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="911.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="96.9734%" y="885" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="895.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="96.9734%" y="869" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="879.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="96.9734%" y="853" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="863.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="96.9734%" y="837" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="847.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="96.9734%" y="821" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="831.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="96.9734%" y="805" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="815.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="96.9734%" y="789" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="799.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="96.9734%" y="773" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="783.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="96.9734%" y="757" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="767.50"></text></g><g><title>filemap_map_pmd (1 samples, 0.06%)</title><rect x="96.9734%" y="741" width="0.0605%" height="15" fill="rgb(251,50,33)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="751.50"></text></g><g><title>pmd_install (1 samples, 0.06%)</title><rect x="96.9734%" y="725" width="0.0605%" height="15" fill="rgb(207,198,44)" fg:x="1602" fg:w="1"/><text x="97.2234%" y="735.50"></text></g><g><title>find_vma (1 samples, 0.06%)</title><rect x="97.0339%" y="821" width="0.0605%" height="15" fill="rgb(227,147,34)" fg:x="1603" fg:w="1"/><text x="97.2839%" y="831.50"></text></g><g><title>mt_find (1 samples, 0.06%)</title><rect x="97.0339%" y="805" width="0.0605%" height="15" fill="rgb(232,55,28)" fg:x="1603" fg:w="1"/><text x="97.2839%" y="815.50"></text></g><g><title>__do_fault (7 samples, 0.42%)</title><rect x="97.0944%" y="741" width="0.4237%" height="15" fill="rgb(232,18,38)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="751.50"></text></g><g><title>xfs_filemap_fault (7 samples, 0.42%)</title><rect x="97.0944%" y="725" width="0.4237%" height="15" fill="rgb(230,143,35)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="735.50"></text></g><g><title>filemap_fault (7 samples, 0.42%)</title><rect x="97.0944%" y="709" width="0.4237%" height="15" fill="rgb(254,137,16)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="719.50"></text></g><g><title>filemap_read_folio (7 samples, 0.42%)</title><rect x="97.0944%" y="693" width="0.4237%" height="15" fill="rgb(208,133,8)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="703.50"></text></g><g><title>folio_wait_bit_common (7 samples, 0.42%)</title><rect x="97.0944%" y="677" width="0.4237%" height="15" fill="rgb(209,139,3)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="687.50"></text></g><g><title>io_schedule (7 samples, 0.42%)</title><rect x="97.0944%" y="661" width="0.4237%" height="15" fill="rgb(229,69,48)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="671.50"></text></g><g><title>schedule (7 samples, 0.42%)</title><rect x="97.0944%" y="645" width="0.4237%" height="15" fill="rgb(213,215,35)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="655.50"></text></g><g><title>__schedule (7 samples, 0.42%)</title><rect x="97.0944%" y="629" width="0.4237%" height="15" fill="rgb(207,40,26)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="639.50"></text></g><g><title>arch_local_irq_enable (7 samples, 0.42%)</title><rect x="97.0944%" y="613" width="0.4237%" height="15" fill="rgb(232,216,33)" fg:x="1604" fg:w="7"/><text x="97.3444%" y="623.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (11 samples, 0.67%)</title><rect x="96.9128%" y="1237" width="0.6659%" height="15" fill="rgb(250,218,41)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1247.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (11 samples, 0.67%)</title><rect x="96.9128%" y="1221" width="0.6659%" height="15" fill="rgb(238,208,28)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1231.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.67%)</title><rect x="96.9128%" y="1205" width="0.6659%" height="15" fill="rgb(208,157,13)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1215.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (11 samples, 0.67%)</title><rect x="96.9128%" y="1189" width="0.6659%" height="15" fill="rgb(212,174,39)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1199.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (11 samples, 0.67%)</title><rect x="96.9128%" y="1173" width="0.6659%" height="15" fill="rgb(243,177,20)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1183.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (11 samples, 0.67%)</title><rect x="96.9128%" y="1157" width="0.6659%" height="15" fill="rgb(244,101,36)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1167.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (11 samples, 0.67%)</title><rect x="96.9128%" y="1141" width="0.6659%" height="15" fill="rgb(223,3,11)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1151.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (11 samples, 0.67%)</title><rect x="96.9128%" y="1125" width="0.6659%" height="15" fill="rgb(248,177,53)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1135.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (11 samples, 0.67%)</title><rect x="96.9128%" y="1109" width="0.6659%" height="15" fill="rgb(206,114,36)" fg:x="1601" fg:w="11"/><text x="97.1628%" y="1119.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::initialization (10 samples, 0.61%)</title><rect x="96.9734%" y="1093" width="0.6053%" height="15" fill="rgb(224,149,29)" fg:x="1602" fg:w="10"/><text x="97.2234%" y="1103.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (9 samples, 0.54%)</title><rect x="97.0339%" y="1077" width="0.5448%" height="15" fill="rgb(250,133,8)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="1087.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (9 samples, 0.54%)</title><rect x="97.0339%" y="1061" width="0.5448%" height="15" fill="rgb(215,64,41)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="1071.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (9 samples, 0.54%)</title><rect x="97.0339%" y="1045" width="0.5448%" height="15" fill="rgb(253,194,2)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="1055.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (9 samples, 0.54%)</title><rect x="97.0339%" y="1029" width="0.5448%" height="15" fill="rgb(207,143,46)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="1039.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (9 samples, 0.54%)</title><rect x="97.0339%" y="1013" width="0.5448%" height="15" fill="rgb(228,63,22)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="1023.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (9 samples, 0.54%)</title><rect x="97.0339%" y="997" width="0.5448%" height="15" fill="rgb(247,141,48)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="1007.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (9 samples, 0.54%)</title><rect x="97.0339%" y="981" width="0.5448%" height="15" fill="rgb(253,188,5)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="991.50"></text></g><g><title>cursor_get (9 samples, 0.54%)</title><rect x="97.0339%" y="965" width="0.5448%" height="15" fill="rgb(238,62,13)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="975.50"></text></g><g><title>cursor_set (9 samples, 0.54%)</title><rect x="97.0339%" y="949" width="0.5448%" height="15" fill="rgb(233,136,1)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="959.50"></text></g><g><title>page_search_root (9 samples, 0.54%)</title><rect x="97.0339%" y="933" width="0.5448%" height="15" fill="rgb(251,173,43)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="943.50"></text></g><g><title>page_get_three (9 samples, 0.54%)</title><rect x="97.0339%" y="917" width="0.5448%" height="15" fill="rgb(212,228,35)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="927.50"></text></g><g><title>el0t_64_sync_handler (9 samples, 0.54%)</title><rect x="97.0339%" y="901" width="0.5448%" height="15" fill="rgb(232,35,33)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="911.50"></text></g><g><title>el0_da (9 samples, 0.54%)</title><rect x="97.0339%" y="885" width="0.5448%" height="15" fill="rgb(222,99,46)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="895.50"></text></g><g><title>do_mem_abort (9 samples, 0.54%)</title><rect x="97.0339%" y="869" width="0.5448%" height="15" fill="rgb(239,157,43)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="879.50"></text></g><g><title>do_translation_fault (9 samples, 0.54%)</title><rect x="97.0339%" y="853" width="0.5448%" height="15" fill="rgb(237,78,44)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="863.50"></text></g><g><title>do_page_fault (9 samples, 0.54%)</title><rect x="97.0339%" y="837" width="0.5448%" height="15" fill="rgb(206,63,28)" fg:x="1603" fg:w="9"/><text x="97.2839%" y="847.50"></text></g><g><title>handle_mm_fault (8 samples, 0.48%)</title><rect x="97.0944%" y="821" width="0.4843%" height="15" fill="rgb(247,31,49)" fg:x="1604" fg:w="8"/><text x="97.3444%" y="831.50"></text></g><g><title>__handle_mm_fault (8 samples, 0.48%)</title><rect x="97.0944%" y="805" width="0.4843%" height="15" fill="rgb(254,123,40)" fg:x="1604" fg:w="8"/><text x="97.3444%" y="815.50"></text></g><g><title>handle_pte_fault (8 samples, 0.48%)</title><rect x="97.0944%" y="789" width="0.4843%" height="15" fill="rgb(225,148,24)" fg:x="1604" fg:w="8"/><text x="97.3444%" y="799.50"></text></g><g><title>do_fault (8 samples, 0.48%)</title><rect x="97.0944%" y="773" width="0.4843%" height="15" fill="rgb(236,204,42)" fg:x="1604" fg:w="8"/><text x="97.3444%" y="783.50"></text></g><g><title>do_read_fault (8 samples, 0.48%)</title><rect x="97.0944%" y="757" width="0.4843%" height="15" fill="rgb(241,58,29)" fg:x="1604" fg:w="8"/><text x="97.3444%" y="767.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="97.5182%" y="741" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="1611" fg:w="1"/><text x="97.7682%" y="751.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="97.5182%" y="725" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="1611" fg:w="1"/><text x="97.7682%" y="735.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::code (1 samples, 0.06%)</title><rect x="97.5787%" y="1093" width="0.0605%" height="15" fill="rgb(231,80,48)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="1103.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="97.5787%" y="1077" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="1087.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="97.5787%" y="1061" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="1071.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="97.5787%" y="1045" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="1055.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="97.5787%" y="1029" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="1039.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (1 samples, 0.06%)</title><rect x="97.5787%" y="1013" width="0.0605%" height="15" fill="rgb(243,169,33)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="1023.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="97.5787%" y="997" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="1007.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="97.5787%" y="981" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="991.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="97.5787%" y="965" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="975.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="97.5787%" y="949" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="959.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="97.5787%" y="933" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="1612" fg:w="1"/><text x="97.8287%" y="943.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.12%)</title><rect x="97.5787%" y="1237" width="0.1211%" height="15" fill="rgb(238,208,28)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1247.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="97.5787%" y="1221" width="0.1211%" height="15" fill="rgb(208,157,13)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1231.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="97.5787%" y="1205" width="0.1211%" height="15" fill="rgb(212,174,39)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1215.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (2 samples, 0.12%)</title><rect x="97.5787%" y="1189" width="0.1211%" height="15" fill="rgb(243,177,20)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1199.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (2 samples, 0.12%)</title><rect x="97.5787%" y="1173" width="0.1211%" height="15" fill="rgb(244,101,36)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1183.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (2 samples, 0.12%)</title><rect x="97.5787%" y="1157" width="0.1211%" height="15" fill="rgb(223,3,11)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1167.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (2 samples, 0.12%)</title><rect x="97.5787%" y="1141" width="0.1211%" height="15" fill="rgb(248,177,53)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1151.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (2 samples, 0.12%)</title><rect x="97.5787%" y="1125" width="0.1211%" height="15" fill="rgb(206,114,36)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1135.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (2 samples, 0.12%)</title><rect x="97.5787%" y="1109" width="0.1211%" height="15" fill="rgb(232,116,6)" fg:x="1612" fg:w="2"/><text x="97.8287%" y="1119.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="97.6392%" y="1093" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="1103.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="97.6392%" y="1077" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="1087.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="97.6392%" y="1061" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="1071.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="97.6392%" y="1045" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="1055.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::sload (1 samples, 0.06%)</title><rect x="97.6392%" y="1029" width="0.0605%" height="15" fill="rgb(240,86,32)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="1039.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (1 samples, 0.06%)</title><rect x="97.6392%" y="1013" width="0.0605%" height="15" fill="rgb(250,133,8)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="1023.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (1 samples, 0.06%)</title><rect x="97.6392%" y="997" width="0.0605%" height="15" fill="rgb(215,64,41)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="1007.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (1 samples, 0.06%)</title><rect x="97.6392%" y="981" width="0.0605%" height="15" fill="rgb(233,190,40)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="991.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.06%)</title><rect x="97.6392%" y="965" width="0.0605%" height="15" fill="rgb(237,102,14)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="975.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.06%)</title><rect x="97.6392%" y="949" width="0.0605%" height="15" fill="rgb(216,213,25)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="959.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="97.6392%" y="933" width="0.0605%" height="15" fill="rgb(206,112,53)" fg:x="1613" fg:w="1"/><text x="97.8892%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (3 samples, 0.18%)</title><rect x="97.6998%" y="1237" width="0.1816%" height="15" fill="rgb(206,202,46)" fg:x="1614" fg:w="3"/><text x="97.9498%" y="1247.50"></text></g><g><title>pow@plt (3 samples, 0.18%)</title><rect x="97.6998%" y="1221" width="0.1816%" height="15" fill="rgb(214,39,25)" fg:x="1614" fg:w="3"/><text x="97.9498%" y="1231.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_bytes (1 samples, 0.06%)</title><rect x="97.8814%" y="885" width="0.0605%" height="15" fill="rgb(253,219,45)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (1 samples, 0.06%)</title><rect x="97.8814%" y="869" width="0.0605%" height="15" fill="rgb(238,179,0)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="879.50"></text></g><g><title>__GI___memcpy_simd (1 samples, 0.06%)</title><rect x="97.8814%" y="853" width="0.0605%" height="15" fill="rgb(208,42,30)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="863.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="97.8814%" y="837" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="847.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="97.8814%" y="821" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="831.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="97.8814%" y="805" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="815.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="97.8814%" y="789" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="799.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="97.8814%" y="773" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="97.8814%" y="757" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="97.8814%" y="741" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="751.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="97.8814%" y="725" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="735.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="97.8814%" y="709" width="0.0605%" height="15" fill="rgb(242,227,11)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="719.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.06%)</title><rect x="97.8814%" y="693" width="0.0605%" height="15" fill="rgb(209,111,19)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="703.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.06%)</title><rect x="97.8814%" y="677" width="0.0605%" height="15" fill="rgb(225,221,26)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="687.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.06%)</title><rect x="97.8814%" y="661" width="0.0605%" height="15" fill="rgb(228,174,4)" fg:x="1617" fg:w="1"/><text x="98.1314%" y="671.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (2 samples, 0.12%)</title><rect x="97.8814%" y="1045" width="0.1211%" height="15" fill="rgb(232,116,6)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="1055.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (2 samples, 0.12%)</title><rect x="97.8814%" y="1029" width="0.1211%" height="15" fill="rgb(236,181,49)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="1039.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (2 samples, 0.12%)</title><rect x="97.8814%" y="1013" width="0.1211%" height="15" fill="rgb(222,82,5)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="1023.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::load_account (2 samples, 0.12%)</title><rect x="97.8814%" y="997" width="0.1211%" height="15" fill="rgb(234,79,13)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="1007.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (2 samples, 0.12%)</title><rect x="97.8814%" y="981" width="0.1211%" height="15" fill="rgb(236,137,21)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="991.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::code_by_hash (2 samples, 0.12%)</title><rect x="97.8814%" y="965" width="0.1211%" height="15" fill="rgb(246,45,5)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="975.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::bytecode_by_hash (2 samples, 0.12%)</title><rect x="97.8814%" y="949" width="0.1211%" height="15" fill="rgb(219,182,3)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="959.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::tx::Tx&lt;K,E&gt; as reth_db::abstraction::transaction::DbTx&gt;::get (2 samples, 0.12%)</title><rect x="97.8814%" y="933" width="0.1211%" height="15" fill="rgb(253,2,53)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="943.50"></text></g><g><title>reth_db::tables::utils::decode_one (2 samples, 0.12%)</title><rect x="97.8814%" y="917" width="0.1211%" height="15" fill="rgb(235,218,31)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="927.50"></text></g><g><title>&lt;reth_primitives::account::Bytecode as reth_codecs::Compact&gt;::from_compact (2 samples, 0.12%)</title><rect x="97.8814%" y="901" width="0.1211%" height="15" fill="rgb(207,201,1)" fg:x="1617" fg:w="2"/><text x="98.1314%" y="911.50"></text></g><g><title>revm_primitives::bytecode::JumpMap::from_slice (1 samples, 0.06%)</title><rect x="97.9419%" y="885" width="0.0605%" height="15" fill="rgb(239,176,16)" fg:x="1618" fg:w="1"/><text x="98.1919%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="97.9419%" y="869" width="0.0605%" height="15" fill="rgb(232,211,42)" fg:x="1618" fg:w="1"/><text x="98.1919%" y="879.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="98.0024%" y="885" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="1619" fg:w="1"/><text x="98.2524%" y="895.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::initialization (2 samples, 0.12%)</title><rect x="98.0024%" y="1045" width="0.1211%" height="15" fill="rgb(224,149,29)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="1055.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (2 samples, 0.12%)</title><rect x="98.0024%" y="1029" width="0.1211%" height="15" fill="rgb(250,133,8)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="1039.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::storage (2 samples, 0.12%)</title><rect x="98.0024%" y="1013" width="0.1211%" height="15" fill="rgb(215,64,41)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="1023.50"></text></g><g><title>&lt;reth_revm::database::State&lt;DB&gt; as revm_primitives::db::DatabaseRef&gt;::storage (2 samples, 0.12%)</title><rect x="98.0024%" y="997" width="0.1211%" height="15" fill="rgb(253,194,2)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="1007.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::state::StateProvider&gt;::storage (2 samples, 0.12%)</title><rect x="98.0024%" y="981" width="0.1211%" height="15" fill="rgb(207,143,46)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="991.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (2 samples, 0.12%)</title><rect x="98.0024%" y="965" width="0.1211%" height="15" fill="rgb(243,169,33)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="975.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (2 samples, 0.12%)</title><rect x="98.0024%" y="949" width="0.1211%" height="15" fill="rgb(253,188,5)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="959.50"></text></g><g><title>cursor_get (2 samples, 0.12%)</title><rect x="98.0024%" y="933" width="0.1211%" height="15" fill="rgb(238,62,13)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="943.50"></text></g><g><title>cursor_set (2 samples, 0.12%)</title><rect x="98.0024%" y="917" width="0.1211%" height="15" fill="rgb(233,136,1)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="927.50"></text></g><g><title>page_search_root (2 samples, 0.12%)</title><rect x="98.0024%" y="901" width="0.1211%" height="15" fill="rgb(251,173,43)" fg:x="1619" fg:w="2"/><text x="98.2524%" y="911.50"></text></g><g><title>page_get_three (1 samples, 0.06%)</title><rect x="98.0630%" y="885" width="0.0605%" height="15" fill="rgb(212,228,35)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="895.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.06%)</title><rect x="98.0630%" y="869" width="0.0605%" height="15" fill="rgb(232,35,33)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="879.50"></text></g><g><title>el0_da (1 samples, 0.06%)</title><rect x="98.0630%" y="853" width="0.0605%" height="15" fill="rgb(222,99,46)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="863.50"></text></g><g><title>do_mem_abort (1 samples, 0.06%)</title><rect x="98.0630%" y="837" width="0.0605%" height="15" fill="rgb(239,157,43)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="847.50"></text></g><g><title>do_translation_fault (1 samples, 0.06%)</title><rect x="98.0630%" y="821" width="0.0605%" height="15" fill="rgb(237,78,44)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="831.50"></text></g><g><title>do_page_fault (1 samples, 0.06%)</title><rect x="98.0630%" y="805" width="0.0605%" height="15" fill="rgb(206,63,28)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="815.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="98.0630%" y="789" width="0.0605%" height="15" fill="rgb(247,31,49)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="799.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="98.0630%" y="773" width="0.0605%" height="15" fill="rgb(254,123,40)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="783.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="98.0630%" y="757" width="0.0605%" height="15" fill="rgb(225,148,24)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="767.50"></text></g><g><title>do_fault (1 samples, 0.06%)</title><rect x="98.0630%" y="741" width="0.0605%" height="15" fill="rgb(236,204,42)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="751.50"></text></g><g><title>do_read_fault (1 samples, 0.06%)</title><rect x="98.0630%" y="725" width="0.0605%" height="15" fill="rgb(241,58,29)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="735.50"></text></g><g><title>xfs_filemap_map_pages (1 samples, 0.06%)</title><rect x="98.0630%" y="709" width="0.0605%" height="15" fill="rgb(225,181,35)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="719.50"></text></g><g><title>filemap_map_pages (1 samples, 0.06%)</title><rect x="98.0630%" y="693" width="0.0605%" height="15" fill="rgb(240,96,12)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="703.50"></text></g><g><title>xas_find (1 samples, 0.06%)</title><rect x="98.0630%" y="677" width="0.0605%" height="15" fill="rgb(231,91,46)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="687.50"></text></g><g><title>xas_load (1 samples, 0.06%)</title><rect x="98.0630%" y="661" width="0.0605%" height="15" fill="rgb(249,146,47)" fg:x="1620" fg:w="1"/><text x="98.3130%" y="671.50"></text></g><g><title>__do_fault (1 samples, 0.06%)</title><rect x="98.1235%" y="725" width="0.0605%" height="15" fill="rgb(232,18,38)" fg:x="1621" fg:w="1"/><text x="98.3735%" y="735.50"></text></g><g><title>xfs_filemap_fault (1 samples, 0.06%)</title><rect x="98.1235%" y="709" width="0.0605%" height="15" fill="rgb(230,143,35)" fg:x="1621" fg:w="1"/><text x="98.3735%" y="719.50"></text></g><g><title>filemap_fault (1 samples, 0.06%)</title><rect x="98.1235%" y="693" width="0.0605%" height="15" fill="rgb(254,137,16)" fg:x="1621" fg:w="1"/><text x="98.3735%" y="703.50"></text></g><g><title>filemap_alloc_folio (1 samples, 0.06%)</title><rect x="98.1235%" y="677" width="0.0605%" height="15" fill="rgb(222,56,20)" fg:x="1621" fg:w="1"/><text x="98.3735%" y="687.50"></text></g><g><title>next_uptodate_page (1 samples, 0.06%)</title><rect x="98.1840%" y="693" width="0.0605%" height="15" fill="rgb(231,221,15)" fg:x="1622" fg:w="1"/><text x="98.4340%" y="703.50"></text></g><g><title>xas_load (1 samples, 0.06%)</title><rect x="98.2446%" y="677" width="0.0605%" height="15" fill="rgb(249,146,47)" fg:x="1623" fg:w="1"/><text x="98.4946%" y="687.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (8 samples, 0.48%)</title><rect x="97.8814%" y="1237" width="0.4843%" height="15" fill="rgb(227,84,42)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8 samples, 0.48%)</title><rect x="97.8814%" y="1221" width="0.4843%" height="15" fill="rgb(231,124,40)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.48%)</title><rect x="97.8814%" y="1205" width="0.4843%" height="15" fill="rgb(228,76,43)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1215.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (8 samples, 0.48%)</title><rect x="97.8814%" y="1189" width="0.4843%" height="15" fill="rgb(250,218,41)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1199.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (8 samples, 0.48%)</title><rect x="97.8814%" y="1173" width="0.4843%" height="15" fill="rgb(238,208,28)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1183.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.48%)</title><rect x="97.8814%" y="1157" width="0.4843%" height="15" fill="rgb(208,157,13)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1167.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.48%)</title><rect x="97.8814%" y="1141" width="0.4843%" height="15" fill="rgb(212,174,39)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1151.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (8 samples, 0.48%)</title><rect x="97.8814%" y="1125" width="0.4843%" height="15" fill="rgb(243,177,20)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1135.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (8 samples, 0.48%)</title><rect x="97.8814%" y="1109" width="0.4843%" height="15" fill="rgb(244,101,36)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1119.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (8 samples, 0.48%)</title><rect x="97.8814%" y="1093" width="0.4843%" height="15" fill="rgb(223,3,11)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1103.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (8 samples, 0.48%)</title><rect x="97.8814%" y="1077" width="0.4843%" height="15" fill="rgb(248,177,53)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1087.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (8 samples, 0.48%)</title><rect x="97.8814%" y="1061" width="0.4843%" height="15" fill="rgb(206,114,36)" fg:x="1617" fg:w="8"/><text x="98.1314%" y="1071.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (4 samples, 0.24%)</title><rect x="98.1235%" y="1045" width="0.2421%" height="15" fill="rgb(224,127,46)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="1055.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (4 samples, 0.24%)</title><rect x="98.1235%" y="1029" width="0.2421%" height="15" fill="rgb(250,92,26)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="1039.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (4 samples, 0.24%)</title><rect x="98.1235%" y="1013" width="0.2421%" height="15" fill="rgb(241,33,38)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="1023.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbCursorRO&lt;T&gt;&gt;::seek (4 samples, 0.24%)</title><rect x="98.1235%" y="997" width="0.2421%" height="15" fill="rgb(228,63,22)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="1007.50"></text></g><g><title>reth_libmdbx::cursor::Cursor&lt;K&gt;::get_full (4 samples, 0.24%)</title><rect x="98.1235%" y="981" width="0.2421%" height="15" fill="rgb(247,141,48)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="991.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (4 samples, 0.24%)</title><rect x="98.1235%" y="965" width="0.2421%" height="15" fill="rgb(253,188,5)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="975.50"></text></g><g><title>cursor_get (4 samples, 0.24%)</title><rect x="98.1235%" y="949" width="0.2421%" height="15" fill="rgb(238,62,13)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="959.50"></text></g><g><title>cursor_set (4 samples, 0.24%)</title><rect x="98.1235%" y="933" width="0.2421%" height="15" fill="rgb(233,136,1)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="943.50"></text></g><g><title>page_search_root (4 samples, 0.24%)</title><rect x="98.1235%" y="917" width="0.2421%" height="15" fill="rgb(251,173,43)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="927.50"></text></g><g><title>page_get_three (4 samples, 0.24%)</title><rect x="98.1235%" y="901" width="0.2421%" height="15" fill="rgb(212,228,35)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="911.50"></text></g><g><title>el0t_64_sync_handler (4 samples, 0.24%)</title><rect x="98.1235%" y="885" width="0.2421%" height="15" fill="rgb(232,35,33)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="895.50"></text></g><g><title>el0_da (4 samples, 0.24%)</title><rect x="98.1235%" y="869" width="0.2421%" height="15" fill="rgb(222,99,46)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="879.50"></text></g><g><title>do_mem_abort (4 samples, 0.24%)</title><rect x="98.1235%" y="853" width="0.2421%" height="15" fill="rgb(239,157,43)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="863.50"></text></g><g><title>do_translation_fault (4 samples, 0.24%)</title><rect x="98.1235%" y="837" width="0.2421%" height="15" fill="rgb(237,78,44)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="847.50"></text></g><g><title>do_page_fault (4 samples, 0.24%)</title><rect x="98.1235%" y="821" width="0.2421%" height="15" fill="rgb(206,63,28)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="831.50"></text></g><g><title>handle_mm_fault (4 samples, 0.24%)</title><rect x="98.1235%" y="805" width="0.2421%" height="15" fill="rgb(247,31,49)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="815.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.24%)</title><rect x="98.1235%" y="789" width="0.2421%" height="15" fill="rgb(254,123,40)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="799.50"></text></g><g><title>handle_pte_fault (4 samples, 0.24%)</title><rect x="98.1235%" y="773" width="0.2421%" height="15" fill="rgb(225,148,24)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="783.50"></text></g><g><title>do_fault (4 samples, 0.24%)</title><rect x="98.1235%" y="757" width="0.2421%" height="15" fill="rgb(236,204,42)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="767.50"></text></g><g><title>do_read_fault (4 samples, 0.24%)</title><rect x="98.1235%" y="741" width="0.2421%" height="15" fill="rgb(241,58,29)" fg:x="1621" fg:w="4"/><text x="98.3735%" y="751.50"></text></g><g><title>xfs_filemap_map_pages (3 samples, 0.18%)</title><rect x="98.1840%" y="725" width="0.1816%" height="15" fill="rgb(225,181,35)" fg:x="1622" fg:w="3"/><text x="98.4340%" y="735.50"></text></g><g><title>filemap_map_pages (3 samples, 0.18%)</title><rect x="98.1840%" y="709" width="0.1816%" height="15" fill="rgb(240,96,12)" fg:x="1622" fg:w="3"/><text x="98.4340%" y="719.50"></text></g><g><title>xas_find (2 samples, 0.12%)</title><rect x="98.2446%" y="693" width="0.1211%" height="15" fill="rgb(231,91,46)" fg:x="1623" fg:w="2"/><text x="98.4946%" y="703.50"></text></g><g><title>xas_start (1 samples, 0.06%)</title><rect x="98.3051%" y="677" width="0.0605%" height="15" fill="rgb(249,53,40)" fg:x="1624" fg:w="1"/><text x="98.5551%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.06%)</title><rect x="98.7288%" y="1061" width="0.0605%" height="15" fill="rgb(214,83,43)" fg:x="1631" fg:w="1"/><text x="98.9788%" y="1071.50"></text></g><g><title>__aarch64_ldadd8_relax (1 samples, 0.06%)</title><rect x="98.7288%" y="1045" width="0.0605%" height="15" fill="rgb(220,1,46)" fg:x="1631" fg:w="1"/><text x="98.9788%" y="1055.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (1 samples, 0.06%)</title><rect x="98.7893%" y="1061" width="0.0605%" height="15" fill="rgb(254,57,20)" fg:x="1632" fg:w="1"/><text x="99.0393%" y="1071.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.18%)</title><rect x="98.8499%" y="1045" width="0.1816%" height="15" fill="rgb(206,112,53)" fg:x="1633" fg:w="3"/><text x="99.0999%" y="1055.50"></text></g><g><title>_int_malloc (2 samples, 0.12%)</title><rect x="98.9104%" y="1029" width="0.1211%" height="15" fill="rgb(222,219,51)" fg:x="1634" fg:w="2"/><text x="99.1604%" y="1039.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve (4 samples, 0.24%)</title><rect x="98.8499%" y="1061" width="0.2421%" height="15" fill="rgb(213,91,24)" fg:x="1633" fg:w="4"/><text x="99.0999%" y="1071.50"></text></g><g><title>__rdl_alloc (1 samples, 0.06%)</title><rect x="99.0315%" y="1045" width="0.0605%" height="15" fill="rgb(241,201,43)" fg:x="1636" fg:w="1"/><text x="99.2815%" y="1055.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (6 samples, 0.36%)</title><rect x="99.0920%" y="1061" width="0.3632%" height="15" fill="rgb(212,214,8)" fg:x="1637" fg:w="6"/><text x="99.3420%" y="1071.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (5 samples, 0.30%)</title><rect x="99.1525%" y="1045" width="0.3027%" height="15" fill="rgb(232,34,1)" fg:x="1638" fg:w="5"/><text x="99.4025%" y="1055.50"></text></g><g><title>httparse::parse_headers_iter_uninit (1 samples, 0.06%)</title><rect x="99.4552%" y="1045" width="0.0605%" height="15" fill="rgb(240,199,43)" fg:x="1643" fg:w="1"/><text x="99.7052%" y="1055.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (2 samples, 0.12%)</title><rect x="99.4552%" y="1061" width="0.1211%" height="15" fill="rgb(254,135,4)" fg:x="1643" fg:w="2"/><text x="99.7052%" y="1071.50"></text></g><g><title>httparse::parse_reason (1 samples, 0.06%)</title><rect x="99.5157%" y="1045" width="0.0605%" height="15" fill="rgb(239,200,7)" fg:x="1644" fg:w="1"/><text x="99.7657%" y="1055.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.06%)</title><rect x="99.5763%" y="1045" width="0.0605%" height="15" fill="rgb(212,9,50)" fg:x="1645" fg:w="1"/><text x="99.8263%" y="1055.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.06%)</title><rect x="99.6368%" y="1045" width="0.0605%" height="15" fill="rgb(222,124,11)" fg:x="1646" fg:w="1"/><text x="99.8868%" y="1055.50"></text></g><g><title>hyper::headers::connection_has (3 samples, 0.18%)</title><rect x="99.5763%" y="1061" width="0.1816%" height="15" fill="rgb(251,179,45)" fg:x="1645" fg:w="3"/><text x="99.8263%" y="1071.50"></text></g><g><title>http::header::value::HeaderValue::to_str (1 samples, 0.06%)</title><rect x="99.6973%" y="1045" width="0.0605%" height="15" fill="rgb(247,100,36)" fg:x="1647" fg:w="1"/><text x="99.9473%" y="1055.50"></text></g><g><title>&lt;http::header::map::ValueIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="99.7579%" y="1045" width="0.0605%" height="15" fill="rgb(221,213,7)" fg:x="1648" fg:w="1"/><text x="100.0079%" y="1055.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (25 samples, 1.51%)</title><rect x="98.3656%" y="1189" width="1.5133%" height="15" fill="rgb(213,225,48)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (25 samples, 1.51%)</title><rect x="98.3656%" y="1173" width="1.5133%" height="15" fill="rgb(213,225,48)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1183.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (25 samples, 1.51%)</title><rect x="98.3656%" y="1157" width="1.5133%" height="15" fill="rgb(223,54,4)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1167.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (25 samples, 1.51%)</title><rect x="98.3656%" y="1141" width="1.5133%" height="15" fill="rgb(240,145,22)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1151.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (25 samples, 1.51%)</title><rect x="98.3656%" y="1125" width="1.5133%" height="15" fill="rgb(205,143,7)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1135.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (25 samples, 1.51%)</title><rect x="98.3656%" y="1109" width="1.5133%" height="15" fill="rgb(241,43,5)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1119.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (25 samples, 1.51%)</title><rect x="98.3656%" y="1093" width="1.5133%" height="15" fill="rgb(233,207,15)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1103.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (25 samples, 1.51%)</title><rect x="98.3656%" y="1077" width="1.5133%" height="15" fill="rgb(232,54,2)" fg:x="1625" fg:w="25"/><text x="98.6156%" y="1087.50"></text></g><g><title>hyper::headers::content_length_parse_all (2 samples, 0.12%)</title><rect x="99.7579%" y="1061" width="0.1211%" height="15" fill="rgb(227,113,0)" fg:x="1648" fg:w="2"/><text x="100.0079%" y="1071.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_all (1 samples, 0.06%)</title><rect x="99.8184%" y="1045" width="0.0605%" height="15" fill="rgb(253,205,19)" fg:x="1649" fg:w="1"/><text x="100.0684%" y="1055.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="99.8789%" y="1029" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="1650" fg:w="1"/><text x="100.1289%" y="1039.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run_inspect (1 samples, 0.06%)</title><rect x="99.8789%" y="1013" width="0.0605%" height="15" fill="rgb(236,181,49)" fg:x="1650" fg:w="1"/><text x="100.1289%" y="1023.50"></text></g><g><title>revm_interpreter::instructions::host::call_inner (1 samples, 0.06%)</title><rect x="99.8789%" y="997" width="0.0605%" height="15" fill="rgb(222,82,5)" fg:x="1650" fg:w="1"/><text x="100.1289%" y="1007.50"></text></g><g><title>revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt;::call_inner (1 samples, 0.06%)</title><rect x="99.8789%" y="981" width="0.0605%" height="15" fill="rgb(232,116,6)" fg:x="1650" fg:w="1"/><text x="100.1289%" y="991.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm_interpreter::host::Host&gt;::code (1 samples, 0.06%)</title><rect x="99.8789%" y="965" width="0.0605%" height="15" fill="rgb(231,80,48)" fg:x="1650" fg:w="1"/><text x="100.1289%" y="975.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (1 samples, 0.06%)</title><rect x="99.8789%" y="949" width="0.0605%" height="15" fill="rgb(236,137,21)" fg:x="1650" fg:w="1"/><text x="100.1289%" y="959.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="99.8789%" y="933" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="1650" fg:w="1"/><text x="100.1289%" y="943.50"></text></g><g><title>all (1,652 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="1652"/><text x="0.2500%" y="1279.50"></text></g><g><title>tokio-runtime-w (961 samples, 58.17%)</title><rect x="41.8281%" y="1253" width="58.1719%" height="15" fill="rgb(207,32,37)" fg:x="691" fg:w="961"/><text x="42.0781%" y="1263.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27 samples, 1.63%)</title><rect x="98.3656%" y="1237" width="1.6344%" height="15" fill="rgb(244,44,31)" fg:x="1625" fg:w="27"/><text x="98.6156%" y="1247.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (27 samples, 1.63%)</title><rect x="98.3656%" y="1221" width="1.6344%" height="15" fill="rgb(227,84,42)" fg:x="1625" fg:w="27"/><text x="98.6156%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (27 samples, 1.63%)</title><rect x="98.3656%" y="1205" width="1.6344%" height="15" fill="rgb(231,124,40)" fg:x="1625" fg:w="27"/><text x="98.6156%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="99.8789%" y="1189" width="0.1211%" height="15" fill="rgb(228,76,43)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1199.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2 samples, 0.12%)</title><rect x="99.8789%" y="1173" width="0.1211%" height="15" fill="rgb(250,218,41)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1183.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.12%)</title><rect x="99.8789%" y="1157" width="0.1211%" height="15" fill="rgb(238,208,28)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1167.50"></text></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="99.8789%" y="1141" width="0.1211%" height="15" fill="rgb(208,157,13)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1151.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.12%)</title><rect x="99.8789%" y="1125" width="0.1211%" height="15" fill="rgb(212,174,39)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1135.50"></text></g><g><title>reth_rpc::trace::TraceApi&lt;Provider,Eth&gt;::on_blocking_task::{{closure}}::{{closure}} (2 samples, 0.12%)</title><rect x="99.8789%" y="1109" width="0.1211%" height="15" fill="rgb(243,177,20)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1119.50"></text></g><g><title>&lt;reth_rpc::eth::api::EthApi&lt;Provider,Pool,Network&gt; as reth_rpc::eth::api::transactions::EthTransactions&gt;::with_state_at_block (2 samples, 0.12%)</title><rect x="99.8789%" y="1093" width="0.1211%" height="15" fill="rgb(244,101,36)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1103.50"></text></g><g><title>reth_rpc::eth::revm_utils::inspect (2 samples, 0.12%)</title><rect x="99.8789%" y="1077" width="0.1211%" height="15" fill="rgb(223,3,11)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1087.50"></text></g><g><title>revm::evm::EVM&lt;DB&gt;::inspect (2 samples, 0.12%)</title><rect x="99.8789%" y="1061" width="0.1211%" height="15" fill="rgb(248,177,53)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1071.50"></text></g><g><title>&lt;revm::evm_impl::EVMImpl&lt;GSPEC,DB,_&gt; as revm::evm_impl::Transact&lt;&lt;DB as revm_primitives::db::Database&gt;::Error&gt;&gt;::transact (2 samples, 0.12%)</title><rect x="99.8789%" y="1045" width="0.1211%" height="15" fill="rgb(206,114,36)" fg:x="1650" fg:w="2"/><text x="100.1289%" y="1055.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (1 samples, 0.06%)</title><rect x="99.9395%" y="1029" width="0.0605%" height="15" fill="rgb(224,127,46)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="1039.50"></text></g><g><title>revm_primitives::db::_::&lt;impl revm_primitives::db::Database for &amp;mut T&gt;::basic (1 samples, 0.06%)</title><rect x="99.9395%" y="1013" width="0.0605%" height="15" fill="rgb(250,92,26)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="1023.50"></text></g><g><title>&lt;reth_provider::providers::state::historical::HistoricalStateProvider&lt;TX&gt; as reth_provider::traits::account::AccountReader&gt;::basic_account (1 samples, 0.06%)</title><rect x="99.9395%" y="997" width="0.0605%" height="15" fill="rgb(241,33,38)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="1007.50"></text></g><g><title>&lt;reth_db::implementation::mdbx::cursor::Cursor&lt;K,T&gt; as reth_db::abstraction::cursor::DbDupCursorRO&lt;T&gt;&gt;::seek_by_key_subkey (1 samples, 0.06%)</title><rect x="99.9395%" y="981" width="0.0605%" height="15" fill="rgb(243,169,33)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="991.50"></text></g><g><title>reth_libmdbx::transaction::txn_execute (1 samples, 0.06%)</title><rect x="99.9395%" y="965" width="0.0605%" height="15" fill="rgb(253,188,5)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="975.50"></text></g><g><title>cursor_get (1 samples, 0.06%)</title><rect x="99.9395%" y="949" width="0.0605%" height="15" fill="rgb(238,62,13)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="959.50"></text></g><g><title>cursor_set (1 samples, 0.06%)</title><rect x="99.9395%" y="933" width="0.0605%" height="15" fill="rgb(233,136,1)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="943.50"></text></g><g><title>page_search_root (1 samples, 0.06%)</title><rect x="99.9395%" y="917" width="0.0605%" height="15" fill="rgb(251,173,43)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="927.50"></text></g><g><title>node_search (1 samples, 0.06%)</title><rect x="99.9395%" y="901" width="0.0605%" height="15" fill="rgb(216,89,10)" fg:x="1651" fg:w="1"/><text x="100.1895%" y="911.50"></text></g></svg></svg>